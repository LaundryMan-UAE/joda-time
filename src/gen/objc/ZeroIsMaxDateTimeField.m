//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/andrewebling/Laundrapp/Joda-time-Project/joda-time/src/main/java/org/joda/time/field/ZeroIsMaxDateTimeField.java
//

#include "DateTimeField.h"
#include "DateTimeFieldType.h"
#include "DecoratedDateTimeField.h"
#include "DurationField.h"
#include "FieldUtils.h"
#include "IOSPrimitiveArray.h"
#include "ReadablePartial.h"
#include "ZeroIsMaxDateTimeField.h"
#include "java/lang/IllegalArgumentException.h"

@implementation OrgJodaTimeFieldZeroIsMaxDateTimeField

- (instancetype)initWithOrgJodaTimeDateTimeField:(OrgJodaTimeDateTimeField *)field
                withOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)type {
  if (self = [super initWithOrgJodaTimeDateTimeField:field withOrgJodaTimeDateTimeFieldType:type]) {
    if ([((OrgJodaTimeDateTimeField *) nil_chk(field)) getMinimumValue] != 0) {
      @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:@"Wrapped field's minumum value must be zero"];
    }
  }
  return self;
}

- (int)getWithLong:(long long int)instant {
  int value = [((OrgJodaTimeDateTimeField *) nil_chk([self getWrappedField])) getWithLong:instant];
  if (value == 0) {
    value = [self getMaximumValue];
  }
  return value;
}

- (long long int)addWithLong:(long long int)instant
                     withInt:(int)value {
  return [((OrgJodaTimeDateTimeField *) nil_chk([self getWrappedField])) addWithLong:instant withInt:value];
}

- (long long int)addWithLong:(long long int)instant
                    withLong:(long long int)value {
  return [((OrgJodaTimeDateTimeField *) nil_chk([self getWrappedField])) addWithLong:instant withLong:value];
}

- (long long int)addWrapFieldWithLong:(long long int)instant
                              withInt:(int)value {
  return [((OrgJodaTimeDateTimeField *) nil_chk([self getWrappedField])) addWrapFieldWithLong:instant withInt:value];
}

- (IOSIntArray *)addWrapFieldWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant
                                                    withInt:(int)fieldIndex
                                               withIntArray:(IOSIntArray *)values
                                                    withInt:(int)valueToAdd {
  return [((OrgJodaTimeDateTimeField *) nil_chk([self getWrappedField])) addWrapFieldWithOrgJodaTimeReadablePartial:instant withInt:fieldIndex withIntArray:values withInt:valueToAdd];
}

- (int)getDifferenceWithLong:(long long int)minuendInstant
                    withLong:(long long int)subtrahendInstant {
  return [((OrgJodaTimeDateTimeField *) nil_chk([self getWrappedField])) getDifferenceWithLong:minuendInstant withLong:subtrahendInstant];
}

- (long long int)getDifferenceAsLongWithLong:(long long int)minuendInstant
                                    withLong:(long long int)subtrahendInstant {
  return [((OrgJodaTimeDateTimeField *) nil_chk([self getWrappedField])) getDifferenceAsLongWithLong:minuendInstant withLong:subtrahendInstant];
}

- (long long int)setWithLong:(long long int)instant
                     withInt:(int)value {
  int max = [self getMaximumValue];
  [OrgJodaTimeFieldFieldUtils verifyValueBoundsWithOrgJodaTimeDateTimeField:self withInt:value withInt:1 withInt:max];
  if (value == max) {
    value = 0;
  }
  return [((OrgJodaTimeDateTimeField *) nil_chk([self getWrappedField])) setWithLong:instant withInt:value];
}

- (BOOL)isLeapWithLong:(long long int)instant {
  return [((OrgJodaTimeDateTimeField *) nil_chk([self getWrappedField])) isLeapWithLong:instant];
}

- (int)getLeapAmountWithLong:(long long int)instant {
  return [((OrgJodaTimeDateTimeField *) nil_chk([self getWrappedField])) getLeapAmountWithLong:instant];
}

- (OrgJodaTimeDurationField *)getLeapDurationField {
  return [((OrgJodaTimeDateTimeField *) nil_chk([self getWrappedField])) getLeapDurationField];
}

- (int)getMinimumValue {
  return 1;
}

- (int)getMinimumValueWithLong:(long long int)instant {
  return 1;
}

- (int)getMinimumValueWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant {
  return 1;
}

- (int)getMinimumValueWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant
                                        withIntArray:(IOSIntArray *)values {
  return 1;
}

- (int)getMaximumValue {
  return [((OrgJodaTimeDateTimeField *) nil_chk([self getWrappedField])) getMaximumValue] + 1;
}

- (int)getMaximumValueWithLong:(long long int)instant {
  return [((OrgJodaTimeDateTimeField *) nil_chk([self getWrappedField])) getMaximumValueWithLong:instant] + 1;
}

- (int)getMaximumValueWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant {
  return [((OrgJodaTimeDateTimeField *) nil_chk([self getWrappedField])) getMaximumValueWithOrgJodaTimeReadablePartial:instant] + 1;
}

- (int)getMaximumValueWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant
                                        withIntArray:(IOSIntArray *)values {
  return [((OrgJodaTimeDateTimeField *) nil_chk([self getWrappedField])) getMaximumValueWithOrgJodaTimeReadablePartial:instant withIntArray:values] + 1;
}

- (long long int)roundFloorWithLong:(long long int)instant {
  return [((OrgJodaTimeDateTimeField *) nil_chk([self getWrappedField])) roundFloorWithLong:instant];
}

- (long long int)roundCeilingWithLong:(long long int)instant {
  return [((OrgJodaTimeDateTimeField *) nil_chk([self getWrappedField])) roundCeilingWithLong:instant];
}

- (long long int)roundHalfFloorWithLong:(long long int)instant {
  return [((OrgJodaTimeDateTimeField *) nil_chk([self getWrappedField])) roundHalfFloorWithLong:instant];
}

- (long long int)roundHalfCeilingWithLong:(long long int)instant {
  return [((OrgJodaTimeDateTimeField *) nil_chk([self getWrappedField])) roundHalfCeilingWithLong:instant];
}

- (long long int)roundHalfEvenWithLong:(long long int)instant {
  return [((OrgJodaTimeDateTimeField *) nil_chk([self getWrappedField])) roundHalfEvenWithLong:instant];
}

- (long long int)remainderWithLong:(long long int)instant {
  return [((OrgJodaTimeDateTimeField *) nil_chk([self getWrappedField])) remainderWithLong:instant];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "initWithOrgJodaTimeDateTimeField:withOrgJodaTimeDateTimeFieldType:", "ZeroIsMaxDateTimeField", NULL, 0x1, NULL },
    { "getWithLong:", "get", "I", 0x1, NULL },
    { "addWithLong:withInt:", "add", "J", 0x1, NULL },
    { "addWithLong:withLong:", "add", "J", 0x1, NULL },
    { "addWrapFieldWithLong:withInt:", "addWrapField", "J", 0x1, NULL },
    { "addWrapFieldWithOrgJodaTimeReadablePartial:withInt:withIntArray:withInt:", "addWrapField", "[I", 0x1, NULL },
    { "getDifferenceWithLong:withLong:", "getDifference", "I", 0x1, NULL },
    { "getDifferenceAsLongWithLong:withLong:", "getDifferenceAsLong", "J", 0x1, NULL },
    { "setWithLong:withInt:", "set", "J", 0x1, NULL },
    { "isLeapWithLong:", "isLeap", "Z", 0x1, NULL },
    { "getLeapAmountWithLong:", "getLeapAmount", "I", 0x1, NULL },
    { "getLeapDurationField", NULL, "Lorg.joda.time.DurationField;", 0x1, NULL },
    { "getMinimumValue", NULL, "I", 0x1, NULL },
    { "getMinimumValueWithLong:", "getMinimumValue", "I", 0x1, NULL },
    { "getMinimumValueWithOrgJodaTimeReadablePartial:", "getMinimumValue", "I", 0x1, NULL },
    { "getMinimumValueWithOrgJodaTimeReadablePartial:withIntArray:", "getMinimumValue", "I", 0x1, NULL },
    { "getMaximumValue", NULL, "I", 0x1, NULL },
    { "getMaximumValueWithLong:", "getMaximumValue", "I", 0x1, NULL },
    { "getMaximumValueWithOrgJodaTimeReadablePartial:", "getMaximumValue", "I", 0x1, NULL },
    { "getMaximumValueWithOrgJodaTimeReadablePartial:withIntArray:", "getMaximumValue", "I", 0x1, NULL },
    { "roundFloorWithLong:", "roundFloor", "J", 0x1, NULL },
    { "roundCeilingWithLong:", "roundCeiling", "J", 0x1, NULL },
    { "roundHalfFloorWithLong:", "roundHalfFloor", "J", 0x1, NULL },
    { "roundHalfCeilingWithLong:", "roundHalfCeiling", "J", 0x1, NULL },
    { "roundHalfEvenWithLong:", "roundHalfEven", "J", 0x1, NULL },
    { "remainderWithLong:", "remainder", "J", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_ZeroIsMaxDateTimeField_", "serialVersionUID", 0x1a, "J", NULL, .constantValue.asLong = OrgJodaTimeFieldZeroIsMaxDateTimeField_serialVersionUID },
  };
  static J2ObjcClassInfo _OrgJodaTimeFieldZeroIsMaxDateTimeField = { "ZeroIsMaxDateTimeField", "org.joda.time.field", NULL, 0x11, 26, methods, 1, fields, 0, NULL};
  return &_OrgJodaTimeFieldZeroIsMaxDateTimeField;
}

@end

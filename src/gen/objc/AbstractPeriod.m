//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/andrewebling/Laundrapp/Joda-time-Project/joda-time/src/main/java/org/joda/time/base/AbstractPeriod.java
//

#include "AbstractPeriod.h"
#include "DurationFieldType.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "ISOPeriodFormat.h"
#include "MutablePeriod.h"
#include "Period.h"
#include "PeriodFormatter.h"
#include "PeriodType.h"
#include "ReadablePeriod.h"
#include "ToString.h"

@implementation OrgJodaTimeBaseAbstractPeriod

- (instancetype)init {
  return [super init];
}

- (int)size {
  return [((OrgJodaTimePeriodType *) nil_chk([self getPeriodType])) size];
}

- (OrgJodaTimeDurationFieldType *)getFieldTypeWithInt:(int)index {
  return [((OrgJodaTimePeriodType *) nil_chk([self getPeriodType])) getFieldTypeWithInt:index];
}

- (IOSObjectArray *)getFieldTypes {
  IOSObjectArray *result = [IOSObjectArray arrayWithLength:[self size] type:[IOSClass classWithClass:[OrgJodaTimeDurationFieldType class]]];
  for (int i = 0; i < (int) [result count]; i++) {
    (void) IOSObjectArray_Set(result, i, [self getFieldTypeWithInt:i]);
  }
  return result;
}

- (IOSIntArray *)getValues {
  IOSIntArray *result = [IOSIntArray arrayWithLength:[self size]];
  for (int i = 0; i < (int) [result count]; i++) {
    (*IOSIntArray_GetRef(result, i)) = [self getValueWithInt:i];
  }
  return result;
}

- (int)getWithOrgJodaTimeDurationFieldType:(OrgJodaTimeDurationFieldType *)type {
  int index = [self indexOfWithOrgJodaTimeDurationFieldType:type];
  if (index == -1) {
    return 0;
  }
  return [self getValueWithInt:index];
}

- (BOOL)isSupportedWithOrgJodaTimeDurationFieldType:(OrgJodaTimeDurationFieldType *)type {
  return [((OrgJodaTimePeriodType *) nil_chk([self getPeriodType])) isSupportedWithOrgJodaTimeDurationFieldType:type];
}

- (int)indexOfWithOrgJodaTimeDurationFieldType:(OrgJodaTimeDurationFieldType *)type {
  return [((OrgJodaTimePeriodType *) nil_chk([self getPeriodType])) indexOfWithOrgJodaTimeDurationFieldType:type];
}

- (OrgJodaTimePeriod *)toPeriod {
  return [[OrgJodaTimePeriod alloc] initWithId:self];
}

- (OrgJodaTimeMutablePeriod *)toMutablePeriod {
  return [[OrgJodaTimeMutablePeriod alloc] initWithId:self];
}

- (BOOL)isEqual:(id)period {
  if (self == period) {
    return YES;
  }
  if ([period conformsToProtocol: @protocol(OrgJodaTimeReadablePeriod)] == NO) {
    return NO;
  }
  id<OrgJodaTimeReadablePeriod> other = (id<OrgJodaTimeReadablePeriod>) check_protocol_cast(period, @protocol(OrgJodaTimeReadablePeriod));
  if ([self size] != [((id<OrgJodaTimeReadablePeriod>) nil_chk(other)) size]) {
    return NO;
  }
  for (int i = 0, isize = [self size]; i < isize; i++) {
    if ([self getValueWithInt:i] != [other getValueWithInt:i] || [self getFieldTypeWithInt:i] != [other getFieldTypeWithInt:i]) {
      return NO;
    }
  }
  return YES;
}

- (NSUInteger)hash {
  int total = 17;
  for (int i = 0, isize = [self size]; i < isize; i++) {
    total = 27 * total + [self getValueWithInt:i];
    total = 27 * total + ((int) [((OrgJodaTimeDurationFieldType *) nil_chk([self getFieldTypeWithInt:i])) hash]);
  }
  return total;
}

- (NSString *)description {
  return [((OrgJodaTimeFormatPeriodFormatter *) nil_chk([OrgJodaTimeFormatISOPeriodFormat standard])) printWithOrgJodaTimeReadablePeriod:self];
}

- (NSString *)toStringWithOrgJodaTimeFormatPeriodFormatter:(OrgJodaTimeFormatPeriodFormatter *)formatter {
  if (formatter == nil) {
    return [self description];
  }
  return [((OrgJodaTimeFormatPeriodFormatter *) nil_chk(formatter)) printWithOrgJodaTimeReadablePeriod:self];
}

- (OrgJodaTimePeriodType *)getPeriodType {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (int)getValueWithInt:(int)param0 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}
+ (IOSObjectArray *)__annotations_description {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[OrgJodaConvertToString alloc] init] } count:1 type:[IOSClass classWithProtocol:@protocol(JavaLangAnnotationAnnotation)]];
}


+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "init", "AbstractPeriod", NULL, 0x4, NULL },
    { "size", NULL, "I", 0x1, NULL },
    { "getFieldTypeWithInt:", "getFieldType", "Lorg.joda.time.DurationFieldType;", 0x1, NULL },
    { "getFieldTypes", NULL, "[Lorg.joda.time.DurationFieldType;", 0x1, NULL },
    { "getValues", NULL, "[I", 0x1, NULL },
    { "getWithOrgJodaTimeDurationFieldType:", "get", "I", 0x1, NULL },
    { "isSupportedWithOrgJodaTimeDurationFieldType:", "isSupported", "Z", 0x1, NULL },
    { "indexOfWithOrgJodaTimeDurationFieldType:", "indexOf", "I", 0x1, NULL },
    { "toPeriod", NULL, "Lorg.joda.time.Period;", 0x1, NULL },
    { "toMutablePeriod", NULL, "Lorg.joda.time.MutablePeriod;", 0x1, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL },
    { "hash", "hashCode", "I", 0x1, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL },
    { "toStringWithOrgJodaTimeFormatPeriodFormatter:", "toString", "Ljava.lang.String;", 0x1, NULL },
    { "getPeriodType", NULL, "Lorg.joda.time.PeriodType;", 0x401, NULL },
    { "getValueWithInt:", "getValue", "I", 0x401, NULL },
  };
  static J2ObjcClassInfo _OrgJodaTimeBaseAbstractPeriod = { "AbstractPeriod", "org.joda.time.base", NULL, 0x401, 16, methods, 0, NULL, 0, NULL};
  return &_OrgJodaTimeBaseAbstractPeriod;
}

@end

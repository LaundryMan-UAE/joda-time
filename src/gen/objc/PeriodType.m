//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/andrewebling/Laundrapp/Joda-time-Project/joda-time/src/main/java/org/joda/time/PeriodType.java
//

#include "DurationFieldType.h"
#include "FieldUtils.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "PeriodType.h"
#include "ReadablePeriod.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/HashMap.h"
#include "java/util/List.h"
#include "java/util/Map.h"

BOOL OrgJodaTimePeriodType_initialized = NO;

@implementation OrgJodaTimePeriodType

id<JavaUtilMap> OrgJodaTimePeriodType_cTypes_;
int OrgJodaTimePeriodType_YEAR_INDEX_ = 0;
int OrgJodaTimePeriodType_MONTH_INDEX_ = 1;
int OrgJodaTimePeriodType_WEEK_INDEX_ = 2;
int OrgJodaTimePeriodType_DAY_INDEX_ = 3;
int OrgJodaTimePeriodType_HOUR_INDEX_ = 4;
int OrgJodaTimePeriodType_MINUTE_INDEX_ = 5;
int OrgJodaTimePeriodType_SECOND_INDEX_ = 6;
int OrgJodaTimePeriodType_MILLI_INDEX_ = 7;
OrgJodaTimePeriodType * OrgJodaTimePeriodType_cStandard_;
OrgJodaTimePeriodType * OrgJodaTimePeriodType_cYMDTime_;
OrgJodaTimePeriodType * OrgJodaTimePeriodType_cYMD_;
OrgJodaTimePeriodType * OrgJodaTimePeriodType_cYWDTime_;
OrgJodaTimePeriodType * OrgJodaTimePeriodType_cYWD_;
OrgJodaTimePeriodType * OrgJodaTimePeriodType_cYDTime_;
OrgJodaTimePeriodType * OrgJodaTimePeriodType_cYD_;
OrgJodaTimePeriodType * OrgJodaTimePeriodType_cDTime_;
OrgJodaTimePeriodType * OrgJodaTimePeriodType_cTime_;
OrgJodaTimePeriodType * OrgJodaTimePeriodType_cYears_;
OrgJodaTimePeriodType * OrgJodaTimePeriodType_cMonths_;
OrgJodaTimePeriodType * OrgJodaTimePeriodType_cWeeks_;
OrgJodaTimePeriodType * OrgJodaTimePeriodType_cDays_;
OrgJodaTimePeriodType * OrgJodaTimePeriodType_cHours_;
OrgJodaTimePeriodType * OrgJodaTimePeriodType_cMinutes_;
OrgJodaTimePeriodType * OrgJodaTimePeriodType_cSeconds_;
OrgJodaTimePeriodType * OrgJodaTimePeriodType_cMillis_;

+ (OrgJodaTimePeriodType *)standard {
  OrgJodaTimePeriodType *type = OrgJodaTimePeriodType_cStandard_;
  if (type == nil) {
    type = [[OrgJodaTimePeriodType alloc] initWithNSString:@"Standard" withOrgJodaTimeDurationFieldTypeArray:[IOSObjectArray arrayWithObjects:(id[]){ [OrgJodaTimeDurationFieldType years], [OrgJodaTimeDurationFieldType months], [OrgJodaTimeDurationFieldType weeks], [OrgJodaTimeDurationFieldType days], [OrgJodaTimeDurationFieldType hours], [OrgJodaTimeDurationFieldType minutes], [OrgJodaTimeDurationFieldType seconds], [OrgJodaTimeDurationFieldType millis] } count:8 type:[IOSClass classWithClass:[OrgJodaTimeDurationFieldType class]]] withIntArray:[IOSIntArray arrayWithInts:(int[]){ 0, 1, 2, 3, 4, 5, 6, 7 } count:8]];
    OrgJodaTimePeriodType_cStandard_ = type;
  }
  return type;
}

+ (OrgJodaTimePeriodType *)yearMonthDayTime {
  OrgJodaTimePeriodType *type = OrgJodaTimePeriodType_cYMDTime_;
  if (type == nil) {
    type = [[OrgJodaTimePeriodType alloc] initWithNSString:@"YearMonthDayTime" withOrgJodaTimeDurationFieldTypeArray:[IOSObjectArray arrayWithObjects:(id[]){ [OrgJodaTimeDurationFieldType years], [OrgJodaTimeDurationFieldType months], [OrgJodaTimeDurationFieldType days], [OrgJodaTimeDurationFieldType hours], [OrgJodaTimeDurationFieldType minutes], [OrgJodaTimeDurationFieldType seconds], [OrgJodaTimeDurationFieldType millis] } count:7 type:[IOSClass classWithClass:[OrgJodaTimeDurationFieldType class]]] withIntArray:[IOSIntArray arrayWithInts:(int[]){ 0, 1, -1, 2, 3, 4, 5, 6 } count:8]];
    OrgJodaTimePeriodType_cYMDTime_ = type;
  }
  return type;
}

+ (OrgJodaTimePeriodType *)yearMonthDay {
  OrgJodaTimePeriodType *type = OrgJodaTimePeriodType_cYMD_;
  if (type == nil) {
    type = [[OrgJodaTimePeriodType alloc] initWithNSString:@"YearMonthDay" withOrgJodaTimeDurationFieldTypeArray:[IOSObjectArray arrayWithObjects:(id[]){ [OrgJodaTimeDurationFieldType years], [OrgJodaTimeDurationFieldType months], [OrgJodaTimeDurationFieldType days] } count:3 type:[IOSClass classWithClass:[OrgJodaTimeDurationFieldType class]]] withIntArray:[IOSIntArray arrayWithInts:(int[]){ 0, 1, -1, 2, -1, -1, -1, -1 } count:8]];
    OrgJodaTimePeriodType_cYMD_ = type;
  }
  return type;
}

+ (OrgJodaTimePeriodType *)yearWeekDayTime {
  OrgJodaTimePeriodType *type = OrgJodaTimePeriodType_cYWDTime_;
  if (type == nil) {
    type = [[OrgJodaTimePeriodType alloc] initWithNSString:@"YearWeekDayTime" withOrgJodaTimeDurationFieldTypeArray:[IOSObjectArray arrayWithObjects:(id[]){ [OrgJodaTimeDurationFieldType years], [OrgJodaTimeDurationFieldType weeks], [OrgJodaTimeDurationFieldType days], [OrgJodaTimeDurationFieldType hours], [OrgJodaTimeDurationFieldType minutes], [OrgJodaTimeDurationFieldType seconds], [OrgJodaTimeDurationFieldType millis] } count:7 type:[IOSClass classWithClass:[OrgJodaTimeDurationFieldType class]]] withIntArray:[IOSIntArray arrayWithInts:(int[]){ 0, -1, 1, 2, 3, 4, 5, 6 } count:8]];
    OrgJodaTimePeriodType_cYWDTime_ = type;
  }
  return type;
}

+ (OrgJodaTimePeriodType *)yearWeekDay {
  OrgJodaTimePeriodType *type = OrgJodaTimePeriodType_cYWD_;
  if (type == nil) {
    type = [[OrgJodaTimePeriodType alloc] initWithNSString:@"YearWeekDay" withOrgJodaTimeDurationFieldTypeArray:[IOSObjectArray arrayWithObjects:(id[]){ [OrgJodaTimeDurationFieldType years], [OrgJodaTimeDurationFieldType weeks], [OrgJodaTimeDurationFieldType days] } count:3 type:[IOSClass classWithClass:[OrgJodaTimeDurationFieldType class]]] withIntArray:[IOSIntArray arrayWithInts:(int[]){ 0, -1, 1, 2, -1, -1, -1, -1 } count:8]];
    OrgJodaTimePeriodType_cYWD_ = type;
  }
  return type;
}

+ (OrgJodaTimePeriodType *)yearDayTime {
  OrgJodaTimePeriodType *type = OrgJodaTimePeriodType_cYDTime_;
  if (type == nil) {
    type = [[OrgJodaTimePeriodType alloc] initWithNSString:@"YearDayTime" withOrgJodaTimeDurationFieldTypeArray:[IOSObjectArray arrayWithObjects:(id[]){ [OrgJodaTimeDurationFieldType years], [OrgJodaTimeDurationFieldType days], [OrgJodaTimeDurationFieldType hours], [OrgJodaTimeDurationFieldType minutes], [OrgJodaTimeDurationFieldType seconds], [OrgJodaTimeDurationFieldType millis] } count:6 type:[IOSClass classWithClass:[OrgJodaTimeDurationFieldType class]]] withIntArray:[IOSIntArray arrayWithInts:(int[]){ 0, -1, -1, 1, 2, 3, 4, 5 } count:8]];
    OrgJodaTimePeriodType_cYDTime_ = type;
  }
  return type;
}

+ (OrgJodaTimePeriodType *)yearDay {
  OrgJodaTimePeriodType *type = OrgJodaTimePeriodType_cYD_;
  if (type == nil) {
    type = [[OrgJodaTimePeriodType alloc] initWithNSString:@"YearDay" withOrgJodaTimeDurationFieldTypeArray:[IOSObjectArray arrayWithObjects:(id[]){ [OrgJodaTimeDurationFieldType years], [OrgJodaTimeDurationFieldType days] } count:2 type:[IOSClass classWithClass:[OrgJodaTimeDurationFieldType class]]] withIntArray:[IOSIntArray arrayWithInts:(int[]){ 0, -1, -1, 1, -1, -1, -1, -1 } count:8]];
    OrgJodaTimePeriodType_cYD_ = type;
  }
  return type;
}

+ (OrgJodaTimePeriodType *)dayTime {
  OrgJodaTimePeriodType *type = OrgJodaTimePeriodType_cDTime_;
  if (type == nil) {
    type = [[OrgJodaTimePeriodType alloc] initWithNSString:@"DayTime" withOrgJodaTimeDurationFieldTypeArray:[IOSObjectArray arrayWithObjects:(id[]){ [OrgJodaTimeDurationFieldType days], [OrgJodaTimeDurationFieldType hours], [OrgJodaTimeDurationFieldType minutes], [OrgJodaTimeDurationFieldType seconds], [OrgJodaTimeDurationFieldType millis] } count:5 type:[IOSClass classWithClass:[OrgJodaTimeDurationFieldType class]]] withIntArray:[IOSIntArray arrayWithInts:(int[]){ -1, -1, -1, 0, 1, 2, 3, 4 } count:8]];
    OrgJodaTimePeriodType_cDTime_ = type;
  }
  return type;
}

+ (OrgJodaTimePeriodType *)time {
  OrgJodaTimePeriodType *type = OrgJodaTimePeriodType_cTime_;
  if (type == nil) {
    type = [[OrgJodaTimePeriodType alloc] initWithNSString:@"Time" withOrgJodaTimeDurationFieldTypeArray:[IOSObjectArray arrayWithObjects:(id[]){ [OrgJodaTimeDurationFieldType hours], [OrgJodaTimeDurationFieldType minutes], [OrgJodaTimeDurationFieldType seconds], [OrgJodaTimeDurationFieldType millis] } count:4 type:[IOSClass classWithClass:[OrgJodaTimeDurationFieldType class]]] withIntArray:[IOSIntArray arrayWithInts:(int[]){ -1, -1, -1, -1, 0, 1, 2, 3 } count:8]];
    OrgJodaTimePeriodType_cTime_ = type;
  }
  return type;
}

+ (OrgJodaTimePeriodType *)years {
  OrgJodaTimePeriodType *type = OrgJodaTimePeriodType_cYears_;
  if (type == nil) {
    type = [[OrgJodaTimePeriodType alloc] initWithNSString:@"Years" withOrgJodaTimeDurationFieldTypeArray:[IOSObjectArray arrayWithObjects:(id[]){ [OrgJodaTimeDurationFieldType years] } count:1 type:[IOSClass classWithClass:[OrgJodaTimeDurationFieldType class]]] withIntArray:[IOSIntArray arrayWithInts:(int[]){ 0, -1, -1, -1, -1, -1, -1, -1 } count:8]];
    OrgJodaTimePeriodType_cYears_ = type;
  }
  return type;
}

+ (OrgJodaTimePeriodType *)months {
  OrgJodaTimePeriodType *type = OrgJodaTimePeriodType_cMonths_;
  if (type == nil) {
    type = [[OrgJodaTimePeriodType alloc] initWithNSString:@"Months" withOrgJodaTimeDurationFieldTypeArray:[IOSObjectArray arrayWithObjects:(id[]){ [OrgJodaTimeDurationFieldType months] } count:1 type:[IOSClass classWithClass:[OrgJodaTimeDurationFieldType class]]] withIntArray:[IOSIntArray arrayWithInts:(int[]){ -1, 0, -1, -1, -1, -1, -1, -1 } count:8]];
    OrgJodaTimePeriodType_cMonths_ = type;
  }
  return type;
}

+ (OrgJodaTimePeriodType *)weeks {
  OrgJodaTimePeriodType *type = OrgJodaTimePeriodType_cWeeks_;
  if (type == nil) {
    type = [[OrgJodaTimePeriodType alloc] initWithNSString:@"Weeks" withOrgJodaTimeDurationFieldTypeArray:[IOSObjectArray arrayWithObjects:(id[]){ [OrgJodaTimeDurationFieldType weeks] } count:1 type:[IOSClass classWithClass:[OrgJodaTimeDurationFieldType class]]] withIntArray:[IOSIntArray arrayWithInts:(int[]){ -1, -1, 0, -1, -1, -1, -1, -1 } count:8]];
    OrgJodaTimePeriodType_cWeeks_ = type;
  }
  return type;
}

+ (OrgJodaTimePeriodType *)days {
  OrgJodaTimePeriodType *type = OrgJodaTimePeriodType_cDays_;
  if (type == nil) {
    type = [[OrgJodaTimePeriodType alloc] initWithNSString:@"Days" withOrgJodaTimeDurationFieldTypeArray:[IOSObjectArray arrayWithObjects:(id[]){ [OrgJodaTimeDurationFieldType days] } count:1 type:[IOSClass classWithClass:[OrgJodaTimeDurationFieldType class]]] withIntArray:[IOSIntArray arrayWithInts:(int[]){ -1, -1, -1, 0, -1, -1, -1, -1 } count:8]];
    OrgJodaTimePeriodType_cDays_ = type;
  }
  return type;
}

+ (OrgJodaTimePeriodType *)hours {
  OrgJodaTimePeriodType *type = OrgJodaTimePeriodType_cHours_;
  if (type == nil) {
    type = [[OrgJodaTimePeriodType alloc] initWithNSString:@"Hours" withOrgJodaTimeDurationFieldTypeArray:[IOSObjectArray arrayWithObjects:(id[]){ [OrgJodaTimeDurationFieldType hours] } count:1 type:[IOSClass classWithClass:[OrgJodaTimeDurationFieldType class]]] withIntArray:[IOSIntArray arrayWithInts:(int[]){ -1, -1, -1, -1, 0, -1, -1, -1 } count:8]];
    OrgJodaTimePeriodType_cHours_ = type;
  }
  return type;
}

+ (OrgJodaTimePeriodType *)minutes {
  OrgJodaTimePeriodType *type = OrgJodaTimePeriodType_cMinutes_;
  if (type == nil) {
    type = [[OrgJodaTimePeriodType alloc] initWithNSString:@"Minutes" withOrgJodaTimeDurationFieldTypeArray:[IOSObjectArray arrayWithObjects:(id[]){ [OrgJodaTimeDurationFieldType minutes] } count:1 type:[IOSClass classWithClass:[OrgJodaTimeDurationFieldType class]]] withIntArray:[IOSIntArray arrayWithInts:(int[]){ -1, -1, -1, -1, -1, 0, -1, -1 } count:8]];
    OrgJodaTimePeriodType_cMinutes_ = type;
  }
  return type;
}

+ (OrgJodaTimePeriodType *)seconds {
  OrgJodaTimePeriodType *type = OrgJodaTimePeriodType_cSeconds_;
  if (type == nil) {
    type = [[OrgJodaTimePeriodType alloc] initWithNSString:@"Seconds" withOrgJodaTimeDurationFieldTypeArray:[IOSObjectArray arrayWithObjects:(id[]){ [OrgJodaTimeDurationFieldType seconds] } count:1 type:[IOSClass classWithClass:[OrgJodaTimeDurationFieldType class]]] withIntArray:[IOSIntArray arrayWithInts:(int[]){ -1, -1, -1, -1, -1, -1, 0, -1 } count:8]];
    OrgJodaTimePeriodType_cSeconds_ = type;
  }
  return type;
}

+ (OrgJodaTimePeriodType *)millis {
  OrgJodaTimePeriodType *type = OrgJodaTimePeriodType_cMillis_;
  if (type == nil) {
    type = [[OrgJodaTimePeriodType alloc] initWithNSString:@"Millis" withOrgJodaTimeDurationFieldTypeArray:[IOSObjectArray arrayWithObjects:(id[]){ [OrgJodaTimeDurationFieldType millis] } count:1 type:[IOSClass classWithClass:[OrgJodaTimeDurationFieldType class]]] withIntArray:[IOSIntArray arrayWithInts:(int[]){ -1, -1, -1, -1, -1, -1, -1, 0 } count:8]];
    OrgJodaTimePeriodType_cMillis_ = type;
  }
  return type;
}

+ (OrgJodaTimePeriodType *)forFieldsWithOrgJodaTimeDurationFieldTypeArray:(IOSObjectArray *)types {
  @synchronized([OrgJodaTimePeriodType getClass]) {
    {
      if (types == nil || (int) [types count] == 0) {
        @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:@"Types array must not be null or empty"];
      }
      for (int i = 0; i < (int) [((IOSObjectArray *) nil_chk(types)) count]; i++) {
        if (IOSObjectArray_Get(types, i) == nil) {
          @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:@"Types array must not contain null"];
        }
      }
      id<JavaUtilMap> cache = OrgJodaTimePeriodType_cTypes_;
      if ([((id<JavaUtilMap>) nil_chk(cache)) isEmpty]) {
        (void) [cache putWithId:[OrgJodaTimePeriodType standard] withId:[OrgJodaTimePeriodType standard]];
        (void) [cache putWithId:[OrgJodaTimePeriodType yearMonthDayTime] withId:[OrgJodaTimePeriodType yearMonthDayTime]];
        (void) [cache putWithId:[OrgJodaTimePeriodType yearMonthDay] withId:[OrgJodaTimePeriodType yearMonthDay]];
        (void) [cache putWithId:[OrgJodaTimePeriodType yearWeekDayTime] withId:[OrgJodaTimePeriodType yearWeekDayTime]];
        (void) [cache putWithId:[OrgJodaTimePeriodType yearWeekDay] withId:[OrgJodaTimePeriodType yearWeekDay]];
        (void) [cache putWithId:[OrgJodaTimePeriodType yearDayTime] withId:[OrgJodaTimePeriodType yearDayTime]];
        (void) [cache putWithId:[OrgJodaTimePeriodType yearDay] withId:[OrgJodaTimePeriodType yearDay]];
        (void) [cache putWithId:[OrgJodaTimePeriodType dayTime] withId:[OrgJodaTimePeriodType dayTime]];
        (void) [cache putWithId:[OrgJodaTimePeriodType time] withId:[OrgJodaTimePeriodType time]];
        (void) [cache putWithId:[OrgJodaTimePeriodType years] withId:[OrgJodaTimePeriodType years]];
        (void) [cache putWithId:[OrgJodaTimePeriodType months] withId:[OrgJodaTimePeriodType months]];
        (void) [cache putWithId:[OrgJodaTimePeriodType weeks] withId:[OrgJodaTimePeriodType weeks]];
        (void) [cache putWithId:[OrgJodaTimePeriodType days] withId:[OrgJodaTimePeriodType days]];
        (void) [cache putWithId:[OrgJodaTimePeriodType hours] withId:[OrgJodaTimePeriodType hours]];
        (void) [cache putWithId:[OrgJodaTimePeriodType minutes] withId:[OrgJodaTimePeriodType minutes]];
        (void) [cache putWithId:[OrgJodaTimePeriodType seconds] withId:[OrgJodaTimePeriodType seconds]];
        (void) [cache putWithId:[OrgJodaTimePeriodType millis] withId:[OrgJodaTimePeriodType millis]];
      }
      OrgJodaTimePeriodType *inPartType = [[OrgJodaTimePeriodType alloc] initWithNSString:nil withOrgJodaTimeDurationFieldTypeArray:types withIntArray:nil];
      id cached = [cache getWithId:inPartType];
      if ([cached isKindOfClass:[OrgJodaTimePeriodType class]]) {
        return (OrgJodaTimePeriodType *) check_class_cast(cached, [OrgJodaTimePeriodType class]);
      }
      if (cached != nil) {
        @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:[NSString stringWithFormat:@"PeriodType does not support fields: %@", cached]];
      }
      OrgJodaTimePeriodType *type = [OrgJodaTimePeriodType standard];
      id<JavaUtilList> list = [[JavaUtilArrayList alloc] initWithJavaUtilCollection:[JavaUtilArrays asListWithNSObjectArray:types]];
      if ([list removeWithId:[OrgJodaTimeDurationFieldType years]] == NO) {
        type = [((OrgJodaTimePeriodType *) nil_chk(type)) withYearsRemoved];
      }
      if ([list removeWithId:[OrgJodaTimeDurationFieldType months]] == NO) {
        type = [((OrgJodaTimePeriodType *) nil_chk(type)) withMonthsRemoved];
      }
      if ([list removeWithId:[OrgJodaTimeDurationFieldType weeks]] == NO) {
        type = [((OrgJodaTimePeriodType *) nil_chk(type)) withWeeksRemoved];
      }
      if ([list removeWithId:[OrgJodaTimeDurationFieldType days]] == NO) {
        type = [((OrgJodaTimePeriodType *) nil_chk(type)) withDaysRemoved];
      }
      if ([list removeWithId:[OrgJodaTimeDurationFieldType hours]] == NO) {
        type = [((OrgJodaTimePeriodType *) nil_chk(type)) withHoursRemoved];
      }
      if ([list removeWithId:[OrgJodaTimeDurationFieldType minutes]] == NO) {
        type = [((OrgJodaTimePeriodType *) nil_chk(type)) withMinutesRemoved];
      }
      if ([list removeWithId:[OrgJodaTimeDurationFieldType seconds]] == NO) {
        type = [((OrgJodaTimePeriodType *) nil_chk(type)) withSecondsRemoved];
      }
      if ([list removeWithId:[OrgJodaTimeDurationFieldType millis]] == NO) {
        type = [((OrgJodaTimePeriodType *) nil_chk(type)) withMillisRemoved];
      }
      if ([list size] > 0) {
        (void) [cache putWithId:inPartType withId:list];
        @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:[NSString stringWithFormat:@"PeriodType does not support fields: %@", list]];
      }
      OrgJodaTimePeriodType *checkPartType = [[OrgJodaTimePeriodType alloc] initWithNSString:nil withOrgJodaTimeDurationFieldTypeArray:((OrgJodaTimePeriodType *) nil_chk(type))->iTypes_ withIntArray:nil];
      OrgJodaTimePeriodType *checkedType = (OrgJodaTimePeriodType *) check_class_cast([cache getWithId:checkPartType], [OrgJodaTimePeriodType class]);
      if (checkedType != nil) {
        (void) [cache putWithId:checkPartType withId:checkedType];
        return checkedType;
      }
      (void) [cache putWithId:checkPartType withId:type];
      return type;
    }
  }
}

- (instancetype)initWithNSString:(NSString *)name
withOrgJodaTimeDurationFieldTypeArray:(IOSObjectArray *)types
                    withIntArray:(IOSIntArray *)indices {
  if (self = [super init]) {
    iName_ = name;
    iTypes_ = types;
    iIndices_ = indices;
  }
  return self;
}

- (NSString *)getName {
  return iName_;
}

- (int)size {
  return (int) [((IOSObjectArray *) nil_chk(iTypes_)) count];
}

- (OrgJodaTimeDurationFieldType *)getFieldTypeWithInt:(int)index {
  return IOSObjectArray_Get(nil_chk(iTypes_), index);
}

- (BOOL)isSupportedWithOrgJodaTimeDurationFieldType:(OrgJodaTimeDurationFieldType *)type {
  return ([self indexOfWithOrgJodaTimeDurationFieldType:type] >= 0);
}

- (int)indexOfWithOrgJodaTimeDurationFieldType:(OrgJodaTimeDurationFieldType *)type {
  for (int i = 0, isize = [self size]; i < isize; i++) {
    if (IOSObjectArray_Get(nil_chk(iTypes_), i) == type) {
      return i;
    }
  }
  return -1;
}

- (NSString *)description {
  return [NSString stringWithFormat:@"PeriodType[%@]", [self getName]];
}

- (int)getIndexedFieldWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period
                                            withInt:(int)index {
  int realIndex = IOSIntArray_Get(nil_chk(iIndices_), index);
  return (realIndex == -1 ? 0 : [((id<OrgJodaTimeReadablePeriod>) nil_chk(period)) getValueWithInt:realIndex]);
}

- (BOOL)setIndexedFieldWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period
                                             withInt:(int)index
                                        withIntArray:(IOSIntArray *)values
                                             withInt:(int)newValue {
  int realIndex = IOSIntArray_Get(nil_chk(iIndices_), index);
  if (realIndex == -1) {
    @throw [[JavaLangUnsupportedOperationException alloc] initWithNSString:@"Field is not supported"];
  }
  (*IOSIntArray_GetRef(nil_chk(values), realIndex)) = newValue;
  return YES;
}

- (BOOL)addIndexedFieldWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period
                                             withInt:(int)index
                                        withIntArray:(IOSIntArray *)values
                                             withInt:(int)valueToAdd {
  if (valueToAdd == 0) {
    return NO;
  }
  int realIndex = IOSIntArray_Get(nil_chk(iIndices_), index);
  if (realIndex == -1) {
    @throw [[JavaLangUnsupportedOperationException alloc] initWithNSString:@"Field is not supported"];
  }
  (*IOSIntArray_GetRef(nil_chk(values), realIndex)) = [OrgJodaTimeFieldFieldUtils safeAddWithInt:IOSIntArray_Get(values, realIndex) withInt:valueToAdd];
  return YES;
}

- (OrgJodaTimePeriodType *)withYearsRemoved {
  return [self withFieldRemovedWithInt:0 withNSString:@"NoYears"];
}

- (OrgJodaTimePeriodType *)withMonthsRemoved {
  return [self withFieldRemovedWithInt:1 withNSString:@"NoMonths"];
}

- (OrgJodaTimePeriodType *)withWeeksRemoved {
  return [self withFieldRemovedWithInt:2 withNSString:@"NoWeeks"];
}

- (OrgJodaTimePeriodType *)withDaysRemoved {
  return [self withFieldRemovedWithInt:3 withNSString:@"NoDays"];
}

- (OrgJodaTimePeriodType *)withHoursRemoved {
  return [self withFieldRemovedWithInt:4 withNSString:@"NoHours"];
}

- (OrgJodaTimePeriodType *)withMinutesRemoved {
  return [self withFieldRemovedWithInt:5 withNSString:@"NoMinutes"];
}

- (OrgJodaTimePeriodType *)withSecondsRemoved {
  return [self withFieldRemovedWithInt:6 withNSString:@"NoSeconds"];
}

- (OrgJodaTimePeriodType *)withMillisRemoved {
  return [self withFieldRemovedWithInt:7 withNSString:@"NoMillis"];
}

- (OrgJodaTimePeriodType *)withFieldRemovedWithInt:(int)indicesIndex
                                      withNSString:(NSString *)name {
  int fieldIndex = IOSIntArray_Get(nil_chk(iIndices_), indicesIndex);
  if (fieldIndex == -1) {
    return self;
  }
  IOSObjectArray *types = [IOSObjectArray arrayWithLength:[self size] - 1 type:[IOSClass classWithClass:[OrgJodaTimeDurationFieldType class]]];
  for (int i = 0; i < (int) [((IOSObjectArray *) nil_chk(iTypes_)) count]; i++) {
    if (i < fieldIndex) {
      (void) IOSObjectArray_Set(types, i, IOSObjectArray_Get(iTypes_, i));
    }
    else if (i > fieldIndex) {
      (void) IOSObjectArray_Set(types, i - 1, IOSObjectArray_Get(iTypes_, i));
    }
  }
  IOSIntArray *indices = [IOSIntArray arrayWithLength:8];
  for (int i = 0; i < (int) [indices count]; i++) {
    if (i < indicesIndex) {
      (*IOSIntArray_GetRef(indices, i)) = IOSIntArray_Get(iIndices_, i);
    }
    else if (i > indicesIndex) {
      (*IOSIntArray_GetRef(indices, i)) = (IOSIntArray_Get(iIndices_, i) == -1 ? -1 : IOSIntArray_Get(iIndices_, i) - 1);
    }
    else {
      (*IOSIntArray_GetRef(indices, i)) = -1;
    }
  }
  return [[OrgJodaTimePeriodType alloc] initWithNSString:[NSString stringWithFormat:@"%@%@", [self getName], name] withOrgJodaTimeDurationFieldTypeArray:types withIntArray:indices];
}

- (BOOL)isEqual:(id)obj {
  if (self == obj) {
    return YES;
  }
  if ([obj isKindOfClass:[OrgJodaTimePeriodType class]] == NO) {
    return NO;
  }
  OrgJodaTimePeriodType *other = (OrgJodaTimePeriodType *) check_class_cast(obj, [OrgJodaTimePeriodType class]);
  return ([JavaUtilArrays equalsWithNSObjectArray:iTypes_ withNSObjectArray:((OrgJodaTimePeriodType *) nil_chk(other))->iTypes_]);
}

- (NSUInteger)hash {
  int hash_ = 0;
  for (int i = 0; i < (int) [((IOSObjectArray *) nil_chk(iTypes_)) count]; i++) {
    hash_ += ((int) [((OrgJodaTimeDurationFieldType *) nil_chk(IOSObjectArray_Get(iTypes_, i))) hash]);
  }
  return hash_;
}

+ (void)initialize {
  if (self == [OrgJodaTimePeriodType class]) {
    OrgJodaTimePeriodType_cTypes_ = [[JavaUtilHashMap alloc] initWithInt:32];
    OrgJodaTimePeriodType_initialized = YES;
  }
}

- (void)copyAllFieldsTo:(OrgJodaTimePeriodType *)other {
  [super copyAllFieldsTo:other];
  other->iIndices_ = iIndices_;
  other->iName_ = iName_;
  other->iTypes_ = iTypes_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "standard", NULL, "Lorg.joda.time.PeriodType;", 0x9, NULL },
    { "yearMonthDayTime", NULL, "Lorg.joda.time.PeriodType;", 0x9, NULL },
    { "yearMonthDay", NULL, "Lorg.joda.time.PeriodType;", 0x9, NULL },
    { "yearWeekDayTime", NULL, "Lorg.joda.time.PeriodType;", 0x9, NULL },
    { "yearWeekDay", NULL, "Lorg.joda.time.PeriodType;", 0x9, NULL },
    { "yearDayTime", NULL, "Lorg.joda.time.PeriodType;", 0x9, NULL },
    { "yearDay", NULL, "Lorg.joda.time.PeriodType;", 0x9, NULL },
    { "dayTime", NULL, "Lorg.joda.time.PeriodType;", 0x9, NULL },
    { "time", NULL, "Lorg.joda.time.PeriodType;", 0x9, NULL },
    { "years", NULL, "Lorg.joda.time.PeriodType;", 0x9, NULL },
    { "months", NULL, "Lorg.joda.time.PeriodType;", 0x9, NULL },
    { "weeks", NULL, "Lorg.joda.time.PeriodType;", 0x9, NULL },
    { "days", NULL, "Lorg.joda.time.PeriodType;", 0x9, NULL },
    { "hours", NULL, "Lorg.joda.time.PeriodType;", 0x9, NULL },
    { "minutes", NULL, "Lorg.joda.time.PeriodType;", 0x9, NULL },
    { "seconds", NULL, "Lorg.joda.time.PeriodType;", 0x9, NULL },
    { "millis", NULL, "Lorg.joda.time.PeriodType;", 0x9, NULL },
    { "forFieldsWithOrgJodaTimeDurationFieldTypeArray:", "forFields", "Lorg.joda.time.PeriodType;", 0x29, NULL },
    { "initWithNSString:withOrgJodaTimeDurationFieldTypeArray:withIntArray:", "PeriodType", NULL, 0x4, NULL },
    { "getName", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "size", NULL, "I", 0x1, NULL },
    { "getFieldTypeWithInt:", "getFieldType", "Lorg.joda.time.DurationFieldType;", 0x1, NULL },
    { "isSupportedWithOrgJodaTimeDurationFieldType:", "isSupported", "Z", 0x1, NULL },
    { "indexOfWithOrgJodaTimeDurationFieldType:", "indexOf", "I", 0x1, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL },
    { "getIndexedFieldWithOrgJodaTimeReadablePeriod:withInt:", "getIndexedField", "I", 0x0, NULL },
    { "setIndexedFieldWithOrgJodaTimeReadablePeriod:withInt:withIntArray:withInt:", "setIndexedField", "Z", 0x0, NULL },
    { "addIndexedFieldWithOrgJodaTimeReadablePeriod:withInt:withIntArray:withInt:", "addIndexedField", "Z", 0x0, NULL },
    { "withYearsRemoved", NULL, "Lorg.joda.time.PeriodType;", 0x1, NULL },
    { "withMonthsRemoved", NULL, "Lorg.joda.time.PeriodType;", 0x1, NULL },
    { "withWeeksRemoved", NULL, "Lorg.joda.time.PeriodType;", 0x1, NULL },
    { "withDaysRemoved", NULL, "Lorg.joda.time.PeriodType;", 0x1, NULL },
    { "withHoursRemoved", NULL, "Lorg.joda.time.PeriodType;", 0x1, NULL },
    { "withMinutesRemoved", NULL, "Lorg.joda.time.PeriodType;", 0x1, NULL },
    { "withSecondsRemoved", NULL, "Lorg.joda.time.PeriodType;", 0x1, NULL },
    { "withMillisRemoved", NULL, "Lorg.joda.time.PeriodType;", 0x1, NULL },
    { "withFieldRemovedWithInt:withNSString:", "withFieldRemoved", "Lorg.joda.time.PeriodType;", 0x2, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL },
    { "hash", "hashCode", "I", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, .constantValue.asLong = OrgJodaTimePeriodType_serialVersionUID },
    { "cTypes_", NULL, 0x1a, "Ljava.util.Map;", &OrgJodaTimePeriodType_cTypes_,  },
    { "YEAR_INDEX_", NULL, 0x8, "I", &OrgJodaTimePeriodType_YEAR_INDEX_,  },
    { "MONTH_INDEX_", NULL, 0x8, "I", &OrgJodaTimePeriodType_MONTH_INDEX_,  },
    { "WEEK_INDEX_", NULL, 0x8, "I", &OrgJodaTimePeriodType_WEEK_INDEX_,  },
    { "DAY_INDEX_", NULL, 0x8, "I", &OrgJodaTimePeriodType_DAY_INDEX_,  },
    { "HOUR_INDEX_", NULL, 0x8, "I", &OrgJodaTimePeriodType_HOUR_INDEX_,  },
    { "MINUTE_INDEX_", NULL, 0x8, "I", &OrgJodaTimePeriodType_MINUTE_INDEX_,  },
    { "SECOND_INDEX_", NULL, 0x8, "I", &OrgJodaTimePeriodType_SECOND_INDEX_,  },
    { "MILLI_INDEX_", NULL, 0x8, "I", &OrgJodaTimePeriodType_MILLI_INDEX_,  },
    { "cStandard_", NULL, 0xa, "Lorg.joda.time.PeriodType;", &OrgJodaTimePeriodType_cStandard_,  },
    { "cYMDTime_", NULL, 0xa, "Lorg.joda.time.PeriodType;", &OrgJodaTimePeriodType_cYMDTime_,  },
    { "cYMD_", NULL, 0xa, "Lorg.joda.time.PeriodType;", &OrgJodaTimePeriodType_cYMD_,  },
    { "cYWDTime_", NULL, 0xa, "Lorg.joda.time.PeriodType;", &OrgJodaTimePeriodType_cYWDTime_,  },
    { "cYWD_", NULL, 0xa, "Lorg.joda.time.PeriodType;", &OrgJodaTimePeriodType_cYWD_,  },
    { "cYDTime_", NULL, 0xa, "Lorg.joda.time.PeriodType;", &OrgJodaTimePeriodType_cYDTime_,  },
    { "cYD_", NULL, 0xa, "Lorg.joda.time.PeriodType;", &OrgJodaTimePeriodType_cYD_,  },
    { "cDTime_", NULL, 0xa, "Lorg.joda.time.PeriodType;", &OrgJodaTimePeriodType_cDTime_,  },
    { "cTime_", NULL, 0xa, "Lorg.joda.time.PeriodType;", &OrgJodaTimePeriodType_cTime_,  },
    { "cYears_", NULL, 0xa, "Lorg.joda.time.PeriodType;", &OrgJodaTimePeriodType_cYears_,  },
    { "cMonths_", NULL, 0xa, "Lorg.joda.time.PeriodType;", &OrgJodaTimePeriodType_cMonths_,  },
    { "cWeeks_", NULL, 0xa, "Lorg.joda.time.PeriodType;", &OrgJodaTimePeriodType_cWeeks_,  },
    { "cDays_", NULL, 0xa, "Lorg.joda.time.PeriodType;", &OrgJodaTimePeriodType_cDays_,  },
    { "cHours_", NULL, 0xa, "Lorg.joda.time.PeriodType;", &OrgJodaTimePeriodType_cHours_,  },
    { "cMinutes_", NULL, 0xa, "Lorg.joda.time.PeriodType;", &OrgJodaTimePeriodType_cMinutes_,  },
    { "cSeconds_", NULL, 0xa, "Lorg.joda.time.PeriodType;", &OrgJodaTimePeriodType_cSeconds_,  },
    { "cMillis_", NULL, 0xa, "Lorg.joda.time.PeriodType;", &OrgJodaTimePeriodType_cMillis_,  },
    { "iName_", NULL, 0x12, "Ljava.lang.String;", NULL,  },
    { "iTypes_", NULL, 0x12, "[Lorg.joda.time.DurationFieldType;", NULL,  },
    { "iIndices_", NULL, 0x12, "[I", NULL,  },
  };
  static J2ObjcClassInfo _OrgJodaTimePeriodType = { "PeriodType", "org.joda.time", NULL, 0x1, 39, methods, 30, fields, 0, NULL};
  return &_OrgJodaTimePeriodType;
}

@end

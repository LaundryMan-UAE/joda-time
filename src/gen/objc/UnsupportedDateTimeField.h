//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nbransby/Documents/joda-time/src/main/java/org/joda/time/field/UnsupportedDateTimeField.java
//

#ifndef _OrgJodaTimeFieldUnsupportedDateTimeField_H_
#define _OrgJodaTimeFieldUnsupportedDateTimeField_H_

@class IOSIntArray;
@class JavaLangUnsupportedOperationException;
@class JavaUtilHashMap;
@class JavaUtilLocale;
@class OrgJodaTimeDateTimeFieldType;
@class OrgJodaTimeDurationField;
@protocol OrgJodaTimeReadablePartial;

#import "JreEmulation.h"
#include "DateTimeField.h"
#include "java/io/Serializable.h"

#define OrgJodaTimeFieldUnsupportedDateTimeField_serialVersionUID -1934618396111902255LL

/**
 @brief A placeholder implementation to use when a datetime field is not supported.
 <p> UnsupportedDateTimeField is thread-safe and immutable.
 @author Brian S O'Neill
 @since 1.0
 */
@interface OrgJodaTimeFieldUnsupportedDateTimeField : OrgJodaTimeDateTimeField < JavaIoSerializable > {
 @public
  /**
   @brief The field type
   */
  OrgJodaTimeDateTimeFieldType *iType_;
  /**
   @brief The duration of the datetime field
   */
  OrgJodaTimeDurationField *iDurationField_;
}

/**
 @brief Gets an instance of UnsupportedDateTimeField for a specific named field.
 Names should be of standard format, such as 'monthOfYear' or 'hourOfDay'. The returned instance is cached.
 @param type the type to obtain
 @return the instance
 @throws IllegalArgumentException if durationField is null
 */
+ (OrgJodaTimeFieldUnsupportedDateTimeField *)getInstanceWithOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)type
                                                             withOrgJodaTimeDurationField:(OrgJodaTimeDurationField *)durationField;

/**
 @brief Constructor.
 @param type the field type
 @param durationField the duration to use
 */
- (instancetype)initWithOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)type
                        withOrgJodaTimeDurationField:(OrgJodaTimeDurationField *)durationField;

- (OrgJodaTimeDateTimeFieldType *)getType;

- (NSString *)getName;

/**
 @brief This field is not supported.
 @return false always
 */
- (jboolean)isSupported;

/**
 @brief This field is not lenient.
 @return false always
 */
- (jboolean)isLenient;

/**
 @brief Always throws UnsupportedOperationException
 @throws UnsupportedOperationException
 */
- (jint)getWithLong:(jlong)instant;

/**
 @brief Always throws UnsupportedOperationException
 @throws UnsupportedOperationException
 */
- (NSString *)getAsTextWithLong:(jlong)instant
             withJavaUtilLocale:(JavaUtilLocale *)locale;

/**
 @brief Always throws UnsupportedOperationException
 @throws UnsupportedOperationException
 */
- (NSString *)getAsTextWithLong:(jlong)instant;

/**
 @brief Always throws UnsupportedOperationException
 @throws UnsupportedOperationException
 */
- (NSString *)getAsTextWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)partial
                                              withInt:(jint)fieldValue
                                   withJavaUtilLocale:(JavaUtilLocale *)locale;

/**
 @brief Always throws UnsupportedOperationException
 @throws UnsupportedOperationException
 */
- (NSString *)getAsTextWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)partial
                                   withJavaUtilLocale:(JavaUtilLocale *)locale;

/**
 @brief Always throws UnsupportedOperationException
 @throws UnsupportedOperationException
 */
- (NSString *)getAsTextWithInt:(jint)fieldValue
            withJavaUtilLocale:(JavaUtilLocale *)locale;

/**
 @brief Always throws UnsupportedOperationException
 @throws UnsupportedOperationException
 */
- (NSString *)getAsShortTextWithLong:(jlong)instant
                  withJavaUtilLocale:(JavaUtilLocale *)locale;

/**
 @brief Always throws UnsupportedOperationException
 @throws UnsupportedOperationException
 */
- (NSString *)getAsShortTextWithLong:(jlong)instant;

/**
 @brief Always throws UnsupportedOperationException
 @throws UnsupportedOperationException
 */
- (NSString *)getAsShortTextWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)partial
                                                   withInt:(jint)fieldValue
                                        withJavaUtilLocale:(JavaUtilLocale *)locale;

/**
 @brief Always throws UnsupportedOperationException
 @throws UnsupportedOperationException
 */
- (NSString *)getAsShortTextWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)partial
                                        withJavaUtilLocale:(JavaUtilLocale *)locale;

/**
 @brief Always throws UnsupportedOperationException
 @throws UnsupportedOperationException
 */
- (NSString *)getAsShortTextWithInt:(jint)fieldValue
                 withJavaUtilLocale:(JavaUtilLocale *)locale;

/**
 @brief Delegates to the duration field.
 @throws UnsupportedOperationException if the duration is unsupported
 */
- (jlong)addWithLong:(jlong)instant
             withInt:(jint)value;

/**
 @brief Delegates to the duration field.
 @throws UnsupportedOperationException if the duration is unsupported
 */
- (jlong)addWithLong:(jlong)instant
            withLong:(jlong)value;

/**
 @brief Always throws UnsupportedOperationException
 @throws UnsupportedOperationException
 */
- (IOSIntArray *)addWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant
                                           withInt:(jint)fieldIndex
                                      withIntArray:(IOSIntArray *)values
                                           withInt:(jint)valueToAdd;

/**
 @brief Always throws UnsupportedOperationException
 @throws UnsupportedOperationException
 */
- (IOSIntArray *)addWrapPartialWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant
                                                      withInt:(jint)fieldIndex
                                                 withIntArray:(IOSIntArray *)values
                                                      withInt:(jint)valueToAdd;

/**
 @brief Always throws UnsupportedOperationException
 @throws UnsupportedOperationException
 */
- (jlong)addWrapFieldWithLong:(jlong)instant
                      withInt:(jint)value;

/**
 @brief Always throws UnsupportedOperationException
 @throws UnsupportedOperationException
 */
- (IOSIntArray *)addWrapFieldWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant
                                                    withInt:(jint)fieldIndex
                                               withIntArray:(IOSIntArray *)values
                                                    withInt:(jint)valueToAdd;

/**
 @brief Delegates to the duration field.
 @throws UnsupportedOperationException if the duration is unsupported
 */
- (jint)getDifferenceWithLong:(jlong)minuendInstant
                     withLong:(jlong)subtrahendInstant;

/**
 @brief Delegates to the duration field.
 @throws UnsupportedOperationException if the duration is unsupported
 */
- (jlong)getDifferenceAsLongWithLong:(jlong)minuendInstant
                            withLong:(jlong)subtrahendInstant;

/**
 @brief Always throws UnsupportedOperationException
 @throws UnsupportedOperationException
 */
- (jlong)setWithLong:(jlong)instant
             withInt:(jint)value;

/**
 @brief Always throws UnsupportedOperationException
 @throws UnsupportedOperationException
 */
- (IOSIntArray *)setWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant
                                           withInt:(jint)fieldIndex
                                      withIntArray:(IOSIntArray *)values
                                           withInt:(jint)newValue;

/**
 @brief Always throws UnsupportedOperationException
 @throws UnsupportedOperationException
 */
- (jlong)setWithLong:(jlong)instant
        withNSString:(NSString *)text
  withJavaUtilLocale:(JavaUtilLocale *)locale;

/**
 @brief Always throws UnsupportedOperationException
 @throws UnsupportedOperationException
 */
- (jlong)setWithLong:(jlong)instant
        withNSString:(NSString *)text;

/**
 @brief Always throws UnsupportedOperationException
 @throws UnsupportedOperationException
 */
- (IOSIntArray *)setWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant
                                           withInt:(jint)fieldIndex
                                      withIntArray:(IOSIntArray *)values
                                      withNSString:(NSString *)text
                                withJavaUtilLocale:(JavaUtilLocale *)locale;

/**
 @brief Even though this DateTimeField is unsupported, the duration field might be supported.
 @return a possibly supported DurationField
 */
- (OrgJodaTimeDurationField *)getDurationField;

/**
 @brief Always returns null.
 @return null always
 */
- (OrgJodaTimeDurationField *)getRangeDurationField;

/**
 @brief Always throws UnsupportedOperationException
 @throws UnsupportedOperationException
 */
- (jboolean)isLeapWithLong:(jlong)instant;

/**
 @brief Always throws UnsupportedOperationException
 @throws UnsupportedOperationException
 */
- (jint)getLeapAmountWithLong:(jlong)instant;

/**
 @brief Always returns null.
 @return null always
 */
- (OrgJodaTimeDurationField *)getLeapDurationField;

/**
 @brief Always throws UnsupportedOperationException
 @throws UnsupportedOperationException
 */
- (jint)getMinimumValue;

/**
 @brief Always throws UnsupportedOperationException
 @throws UnsupportedOperationException
 */
- (jint)getMinimumValueWithLong:(jlong)instant;

/**
 @brief Always throws UnsupportedOperationException
 @throws UnsupportedOperationException
 */
- (jint)getMinimumValueWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant;

/**
 @brief Always throws UnsupportedOperationException
 @throws UnsupportedOperationException
 */
- (jint)getMinimumValueWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant
                                         withIntArray:(IOSIntArray *)values;

/**
 @brief Always throws UnsupportedOperationException
 @throws UnsupportedOperationException
 */
- (jint)getMaximumValue;

/**
 @brief Always throws UnsupportedOperationException
 @throws UnsupportedOperationException
 */
- (jint)getMaximumValueWithLong:(jlong)instant;

/**
 @brief Always throws UnsupportedOperationException
 @throws UnsupportedOperationException
 */
- (jint)getMaximumValueWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant;

/**
 @brief Always throws UnsupportedOperationException
 @throws UnsupportedOperationException
 */
- (jint)getMaximumValueWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant
                                         withIntArray:(IOSIntArray *)values;

/**
 @brief Always throws UnsupportedOperationException
 @throws UnsupportedOperationException
 */
- (jint)getMaximumTextLengthWithJavaUtilLocale:(JavaUtilLocale *)locale;

/**
 @brief Always throws UnsupportedOperationException
 @throws UnsupportedOperationException
 */
- (jint)getMaximumShortTextLengthWithJavaUtilLocale:(JavaUtilLocale *)locale;

/**
 @brief Always throws UnsupportedOperationException
 @throws UnsupportedOperationException
 */
- (jlong)roundFloorWithLong:(jlong)instant;

/**
 @brief Always throws UnsupportedOperationException
 @throws UnsupportedOperationException
 */
- (jlong)roundCeilingWithLong:(jlong)instant;

/**
 @brief Always throws UnsupportedOperationException
 @throws UnsupportedOperationException
 */
- (jlong)roundHalfFloorWithLong:(jlong)instant;

/**
 @brief Always throws UnsupportedOperationException
 @throws UnsupportedOperationException
 */
- (jlong)roundHalfCeilingWithLong:(jlong)instant;

/**
 @brief Always throws UnsupportedOperationException
 @throws UnsupportedOperationException
 */
- (jlong)roundHalfEvenWithLong:(jlong)instant;

/**
 @brief Always throws UnsupportedOperationException
 @throws UnsupportedOperationException
 */
- (jlong)remainderWithLong:(jlong)instant;

/**
 @brief Get a suitable debug string.
 @return debug string
 */
- (NSString *)description;

/**
 @brief Ensure proper singleton serialization
 */
- (id)readResolve;

- (JavaLangUnsupportedOperationException *)unsupported;

- (void)dealloc;

- (void)copyAllFieldsTo:(OrgJodaTimeFieldUnsupportedDateTimeField *)other;

@end

__attribute__((always_inline)) inline void OrgJodaTimeFieldUnsupportedDateTimeField_init() {}

J2OBJC_FIELD_SETTER(OrgJodaTimeFieldUnsupportedDateTimeField, iType_, OrgJodaTimeDateTimeFieldType *)
J2OBJC_FIELD_SETTER(OrgJodaTimeFieldUnsupportedDateTimeField, iDurationField_, OrgJodaTimeDurationField *)
FOUNDATION_EXPORT OrgJodaTimeFieldUnsupportedDateTimeField *OrgJodaTimeFieldUnsupportedDateTimeField_getInstanceWithOrgJodaTimeDateTimeFieldType_withOrgJodaTimeDurationField_(OrgJodaTimeDateTimeFieldType *type, OrgJodaTimeDurationField *durationField);

J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeFieldUnsupportedDateTimeField, serialVersionUID, jlong)

FOUNDATION_EXPORT JavaUtilHashMap *OrgJodaTimeFieldUnsupportedDateTimeField_cCache_;
J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeFieldUnsupportedDateTimeField, cCache_, JavaUtilHashMap *)
J2OBJC_STATIC_FIELD_SETTER(OrgJodaTimeFieldUnsupportedDateTimeField, cCache_, JavaUtilHashMap *)

#endif // _OrgJodaTimeFieldUnsupportedDateTimeField_H_

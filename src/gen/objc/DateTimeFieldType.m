//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nbransby/Documents/joda-time/src/main/java/org/joda/time/DateTimeFieldType.java
//

#include "Chronology.h"
#include "DateTimeField.h"
#include "DateTimeFieldType.h"
#include "DateTimeUtils.h"
#include "DurationFieldType.h"
#include "IOSClass.h"
#include "java/lang/InternalError.h"

BOOL OrgJodaTimeDateTimeFieldType_initialized = NO;

@implementation OrgJodaTimeDateTimeFieldType

OrgJodaTimeDateTimeFieldType * OrgJodaTimeDateTimeFieldType_ERA_TYPE_;
OrgJodaTimeDateTimeFieldType * OrgJodaTimeDateTimeFieldType_YEAR_OF_ERA_TYPE_;
OrgJodaTimeDateTimeFieldType * OrgJodaTimeDateTimeFieldType_CENTURY_OF_ERA_TYPE_;
OrgJodaTimeDateTimeFieldType * OrgJodaTimeDateTimeFieldType_YEAR_OF_CENTURY_TYPE_;
OrgJodaTimeDateTimeFieldType * OrgJodaTimeDateTimeFieldType_YEAR_TYPE_;
OrgJodaTimeDateTimeFieldType * OrgJodaTimeDateTimeFieldType_DAY_OF_YEAR_TYPE_;
OrgJodaTimeDateTimeFieldType * OrgJodaTimeDateTimeFieldType_MONTH_OF_YEAR_TYPE_;
OrgJodaTimeDateTimeFieldType * OrgJodaTimeDateTimeFieldType_DAY_OF_MONTH_TYPE_;
OrgJodaTimeDateTimeFieldType * OrgJodaTimeDateTimeFieldType_WEEKYEAR_OF_CENTURY_TYPE_;
OrgJodaTimeDateTimeFieldType * OrgJodaTimeDateTimeFieldType_WEEKYEAR_TYPE_;
OrgJodaTimeDateTimeFieldType * OrgJodaTimeDateTimeFieldType_WEEK_OF_WEEKYEAR_TYPE_;
OrgJodaTimeDateTimeFieldType * OrgJodaTimeDateTimeFieldType_DAY_OF_WEEK_TYPE_;
OrgJodaTimeDateTimeFieldType * OrgJodaTimeDateTimeFieldType_HALFDAY_OF_DAY_TYPE_;
OrgJodaTimeDateTimeFieldType * OrgJodaTimeDateTimeFieldType_HOUR_OF_HALFDAY_TYPE_;
OrgJodaTimeDateTimeFieldType * OrgJodaTimeDateTimeFieldType_CLOCKHOUR_OF_HALFDAY_TYPE_;
OrgJodaTimeDateTimeFieldType * OrgJodaTimeDateTimeFieldType_CLOCKHOUR_OF_DAY_TYPE_;
OrgJodaTimeDateTimeFieldType * OrgJodaTimeDateTimeFieldType_HOUR_OF_DAY_TYPE_;
OrgJodaTimeDateTimeFieldType * OrgJodaTimeDateTimeFieldType_MINUTE_OF_DAY_TYPE_;
OrgJodaTimeDateTimeFieldType * OrgJodaTimeDateTimeFieldType_MINUTE_OF_HOUR_TYPE_;
OrgJodaTimeDateTimeFieldType * OrgJodaTimeDateTimeFieldType_SECOND_OF_DAY_TYPE_;
OrgJodaTimeDateTimeFieldType * OrgJodaTimeDateTimeFieldType_SECOND_OF_MINUTE_TYPE_;
OrgJodaTimeDateTimeFieldType * OrgJodaTimeDateTimeFieldType_MILLIS_OF_DAY_TYPE_;
OrgJodaTimeDateTimeFieldType * OrgJodaTimeDateTimeFieldType_MILLIS_OF_SECOND_TYPE_;

- (instancetype)initWithNSString:(NSString *)name {
  if (self = [super init]) {
    OrgJodaTimeDateTimeFieldType_set_iName_(self, name);
  }
  return self;
}

+ (OrgJodaTimeDateTimeFieldType *)millisOfSecond {
  return OrgJodaTimeDateTimeFieldType_millisOfSecond();
}

+ (OrgJodaTimeDateTimeFieldType *)millisOfDay {
  return OrgJodaTimeDateTimeFieldType_millisOfDay();
}

+ (OrgJodaTimeDateTimeFieldType *)secondOfMinute {
  return OrgJodaTimeDateTimeFieldType_secondOfMinute();
}

+ (OrgJodaTimeDateTimeFieldType *)secondOfDay {
  return OrgJodaTimeDateTimeFieldType_secondOfDay();
}

+ (OrgJodaTimeDateTimeFieldType *)minuteOfHour {
  return OrgJodaTimeDateTimeFieldType_minuteOfHour();
}

+ (OrgJodaTimeDateTimeFieldType *)minuteOfDay {
  return OrgJodaTimeDateTimeFieldType_minuteOfDay();
}

+ (OrgJodaTimeDateTimeFieldType *)hourOfDay {
  return OrgJodaTimeDateTimeFieldType_hourOfDay();
}

+ (OrgJodaTimeDateTimeFieldType *)clockhourOfDay {
  return OrgJodaTimeDateTimeFieldType_clockhourOfDay();
}

+ (OrgJodaTimeDateTimeFieldType *)hourOfHalfday {
  return OrgJodaTimeDateTimeFieldType_hourOfHalfday();
}

+ (OrgJodaTimeDateTimeFieldType *)clockhourOfHalfday {
  return OrgJodaTimeDateTimeFieldType_clockhourOfHalfday();
}

+ (OrgJodaTimeDateTimeFieldType *)halfdayOfDay {
  return OrgJodaTimeDateTimeFieldType_halfdayOfDay();
}

+ (OrgJodaTimeDateTimeFieldType *)dayOfWeek {
  return OrgJodaTimeDateTimeFieldType_dayOfWeek();
}

+ (OrgJodaTimeDateTimeFieldType *)dayOfMonth {
  return OrgJodaTimeDateTimeFieldType_dayOfMonth();
}

+ (OrgJodaTimeDateTimeFieldType *)dayOfYear {
  return OrgJodaTimeDateTimeFieldType_dayOfYear();
}

+ (OrgJodaTimeDateTimeFieldType *)weekOfWeekyear {
  return OrgJodaTimeDateTimeFieldType_weekOfWeekyear();
}

+ (OrgJodaTimeDateTimeFieldType *)weekyear {
  return OrgJodaTimeDateTimeFieldType_weekyear();
}

+ (OrgJodaTimeDateTimeFieldType *)weekyearOfCentury {
  return OrgJodaTimeDateTimeFieldType_weekyearOfCentury();
}

+ (OrgJodaTimeDateTimeFieldType *)monthOfYear {
  return OrgJodaTimeDateTimeFieldType_monthOfYear();
}

+ (OrgJodaTimeDateTimeFieldType *)year {
  return OrgJodaTimeDateTimeFieldType_year();
}

+ (OrgJodaTimeDateTimeFieldType *)yearOfEra {
  return OrgJodaTimeDateTimeFieldType_yearOfEra();
}

+ (OrgJodaTimeDateTimeFieldType *)yearOfCentury {
  return OrgJodaTimeDateTimeFieldType_yearOfCentury();
}

+ (OrgJodaTimeDateTimeFieldType *)centuryOfEra {
  return OrgJodaTimeDateTimeFieldType_centuryOfEra();
}

+ (OrgJodaTimeDateTimeFieldType *)era {
  return OrgJodaTimeDateTimeFieldType_era();
}

- (NSString *)getName {
  return iName_;
}

- (OrgJodaTimeDurationFieldType *)getDurationType {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (OrgJodaTimeDurationFieldType *)getRangeDurationType {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (OrgJodaTimeDateTimeField *)getFieldWithOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)isSupportedWithOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology {
  return [((OrgJodaTimeDateTimeField *) nil_chk([self getFieldWithOrgJodaTimeChronology:chronology])) isSupported];
}

- (NSString *)description {
  return [self getName];
}

- (void)dealloc {
  OrgJodaTimeDateTimeFieldType_set_iName_(self, nil);
  [super dealloc];
}

- (void)copyAllFieldsTo:(OrgJodaTimeDateTimeFieldType *)other {
  [super copyAllFieldsTo:other];
  OrgJodaTimeDateTimeFieldType_set_iName_(other, iName_);
}

+ (void)initialize {
  if (self == [OrgJodaTimeDateTimeFieldType class]) {
    JreStrongAssignAndConsume(&OrgJodaTimeDateTimeFieldType_ERA_TYPE_, nil, [[OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType alloc] initWithNSString:@"era" withByte:OrgJodaTimeDateTimeFieldType_ERA withOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_eras() withOrgJodaTimeDurationFieldType:nil]);
    JreStrongAssignAndConsume(&OrgJodaTimeDateTimeFieldType_YEAR_OF_ERA_TYPE_, nil, [[OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType alloc] initWithNSString:@"yearOfEra" withByte:OrgJodaTimeDateTimeFieldType_YEAR_OF_ERA withOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_years() withOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_eras()]);
    JreStrongAssignAndConsume(&OrgJodaTimeDateTimeFieldType_CENTURY_OF_ERA_TYPE_, nil, [[OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType alloc] initWithNSString:@"centuryOfEra" withByte:OrgJodaTimeDateTimeFieldType_CENTURY_OF_ERA withOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_centuries() withOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_eras()]);
    JreStrongAssignAndConsume(&OrgJodaTimeDateTimeFieldType_YEAR_OF_CENTURY_TYPE_, nil, [[OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType alloc] initWithNSString:@"yearOfCentury" withByte:OrgJodaTimeDateTimeFieldType_YEAR_OF_CENTURY withOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_years() withOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_centuries()]);
    JreStrongAssignAndConsume(&OrgJodaTimeDateTimeFieldType_YEAR_TYPE_, nil, [[OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType alloc] initWithNSString:@"year" withByte:OrgJodaTimeDateTimeFieldType_YEAR withOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_years() withOrgJodaTimeDurationFieldType:nil]);
    JreStrongAssignAndConsume(&OrgJodaTimeDateTimeFieldType_DAY_OF_YEAR_TYPE_, nil, [[OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType alloc] initWithNSString:@"dayOfYear" withByte:OrgJodaTimeDateTimeFieldType_DAY_OF_YEAR withOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_days() withOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_years()]);
    JreStrongAssignAndConsume(&OrgJodaTimeDateTimeFieldType_MONTH_OF_YEAR_TYPE_, nil, [[OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType alloc] initWithNSString:@"monthOfYear" withByte:OrgJodaTimeDateTimeFieldType_MONTH_OF_YEAR withOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_months() withOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_years()]);
    JreStrongAssignAndConsume(&OrgJodaTimeDateTimeFieldType_DAY_OF_MONTH_TYPE_, nil, [[OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType alloc] initWithNSString:@"dayOfMonth" withByte:OrgJodaTimeDateTimeFieldType_DAY_OF_MONTH withOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_days() withOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_months()]);
    JreStrongAssignAndConsume(&OrgJodaTimeDateTimeFieldType_WEEKYEAR_OF_CENTURY_TYPE_, nil, [[OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType alloc] initWithNSString:@"weekyearOfCentury" withByte:OrgJodaTimeDateTimeFieldType_WEEKYEAR_OF_CENTURY withOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_weekyears() withOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_centuries()]);
    JreStrongAssignAndConsume(&OrgJodaTimeDateTimeFieldType_WEEKYEAR_TYPE_, nil, [[OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType alloc] initWithNSString:@"weekyear" withByte:OrgJodaTimeDateTimeFieldType_WEEKYEAR withOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_weekyears() withOrgJodaTimeDurationFieldType:nil]);
    JreStrongAssignAndConsume(&OrgJodaTimeDateTimeFieldType_WEEK_OF_WEEKYEAR_TYPE_, nil, [[OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType alloc] initWithNSString:@"weekOfWeekyear" withByte:OrgJodaTimeDateTimeFieldType_WEEK_OF_WEEKYEAR withOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_weeks() withOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_weekyears()]);
    JreStrongAssignAndConsume(&OrgJodaTimeDateTimeFieldType_DAY_OF_WEEK_TYPE_, nil, [[OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType alloc] initWithNSString:@"dayOfWeek" withByte:OrgJodaTimeDateTimeFieldType_DAY_OF_WEEK withOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_days() withOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_weeks()]);
    JreStrongAssignAndConsume(&OrgJodaTimeDateTimeFieldType_HALFDAY_OF_DAY_TYPE_, nil, [[OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType alloc] initWithNSString:@"halfdayOfDay" withByte:OrgJodaTimeDateTimeFieldType_HALFDAY_OF_DAY withOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_halfdays() withOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_days()]);
    JreStrongAssignAndConsume(&OrgJodaTimeDateTimeFieldType_HOUR_OF_HALFDAY_TYPE_, nil, [[OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType alloc] initWithNSString:@"hourOfHalfday" withByte:OrgJodaTimeDateTimeFieldType_HOUR_OF_HALFDAY withOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_hours() withOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_halfdays()]);
    JreStrongAssignAndConsume(&OrgJodaTimeDateTimeFieldType_CLOCKHOUR_OF_HALFDAY_TYPE_, nil, [[OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType alloc] initWithNSString:@"clockhourOfHalfday" withByte:OrgJodaTimeDateTimeFieldType_CLOCKHOUR_OF_HALFDAY withOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_hours() withOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_halfdays()]);
    JreStrongAssignAndConsume(&OrgJodaTimeDateTimeFieldType_CLOCKHOUR_OF_DAY_TYPE_, nil, [[OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType alloc] initWithNSString:@"clockhourOfDay" withByte:OrgJodaTimeDateTimeFieldType_CLOCKHOUR_OF_DAY withOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_hours() withOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_days()]);
    JreStrongAssignAndConsume(&OrgJodaTimeDateTimeFieldType_HOUR_OF_DAY_TYPE_, nil, [[OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType alloc] initWithNSString:@"hourOfDay" withByte:OrgJodaTimeDateTimeFieldType_HOUR_OF_DAY withOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_hours() withOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_days()]);
    JreStrongAssignAndConsume(&OrgJodaTimeDateTimeFieldType_MINUTE_OF_DAY_TYPE_, nil, [[OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType alloc] initWithNSString:@"minuteOfDay" withByte:OrgJodaTimeDateTimeFieldType_MINUTE_OF_DAY withOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_minutes() withOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_days()]);
    JreStrongAssignAndConsume(&OrgJodaTimeDateTimeFieldType_MINUTE_OF_HOUR_TYPE_, nil, [[OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType alloc] initWithNSString:@"minuteOfHour" withByte:OrgJodaTimeDateTimeFieldType_MINUTE_OF_HOUR withOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_minutes() withOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_hours()]);
    JreStrongAssignAndConsume(&OrgJodaTimeDateTimeFieldType_SECOND_OF_DAY_TYPE_, nil, [[OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType alloc] initWithNSString:@"secondOfDay" withByte:OrgJodaTimeDateTimeFieldType_SECOND_OF_DAY withOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_seconds() withOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_days()]);
    JreStrongAssignAndConsume(&OrgJodaTimeDateTimeFieldType_SECOND_OF_MINUTE_TYPE_, nil, [[OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType alloc] initWithNSString:@"secondOfMinute" withByte:OrgJodaTimeDateTimeFieldType_SECOND_OF_MINUTE withOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_seconds() withOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_minutes()]);
    JreStrongAssignAndConsume(&OrgJodaTimeDateTimeFieldType_MILLIS_OF_DAY_TYPE_, nil, [[OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType alloc] initWithNSString:@"millisOfDay" withByte:OrgJodaTimeDateTimeFieldType_MILLIS_OF_DAY withOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_millis() withOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_days()]);
    JreStrongAssignAndConsume(&OrgJodaTimeDateTimeFieldType_MILLIS_OF_SECOND_TYPE_, nil, [[OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType alloc] initWithNSString:@"millisOfSecond" withByte:OrgJodaTimeDateTimeFieldType_MILLIS_OF_SECOND withOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_millis() withOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_seconds()]);
    J2OBJC_SET_INITIALIZED(OrgJodaTimeDateTimeFieldType)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:", "DateTimeFieldType", NULL, 0x4, NULL },
    { "millisOfSecond", NULL, "Lorg.joda.time.DateTimeFieldType;", 0x9, NULL },
    { "millisOfDay", NULL, "Lorg.joda.time.DateTimeFieldType;", 0x9, NULL },
    { "secondOfMinute", NULL, "Lorg.joda.time.DateTimeFieldType;", 0x9, NULL },
    { "secondOfDay", NULL, "Lorg.joda.time.DateTimeFieldType;", 0x9, NULL },
    { "minuteOfHour", NULL, "Lorg.joda.time.DateTimeFieldType;", 0x9, NULL },
    { "minuteOfDay", NULL, "Lorg.joda.time.DateTimeFieldType;", 0x9, NULL },
    { "hourOfDay", NULL, "Lorg.joda.time.DateTimeFieldType;", 0x9, NULL },
    { "clockhourOfDay", NULL, "Lorg.joda.time.DateTimeFieldType;", 0x9, NULL },
    { "hourOfHalfday", NULL, "Lorg.joda.time.DateTimeFieldType;", 0x9, NULL },
    { "clockhourOfHalfday", NULL, "Lorg.joda.time.DateTimeFieldType;", 0x9, NULL },
    { "halfdayOfDay", NULL, "Lorg.joda.time.DateTimeFieldType;", 0x9, NULL },
    { "dayOfWeek", NULL, "Lorg.joda.time.DateTimeFieldType;", 0x9, NULL },
    { "dayOfMonth", NULL, "Lorg.joda.time.DateTimeFieldType;", 0x9, NULL },
    { "dayOfYear", NULL, "Lorg.joda.time.DateTimeFieldType;", 0x9, NULL },
    { "weekOfWeekyear", NULL, "Lorg.joda.time.DateTimeFieldType;", 0x9, NULL },
    { "weekyear", NULL, "Lorg.joda.time.DateTimeFieldType;", 0x9, NULL },
    { "weekyearOfCentury", NULL, "Lorg.joda.time.DateTimeFieldType;", 0x9, NULL },
    { "monthOfYear", NULL, "Lorg.joda.time.DateTimeFieldType;", 0x9, NULL },
    { "year", NULL, "Lorg.joda.time.DateTimeFieldType;", 0x9, NULL },
    { "yearOfEra", NULL, "Lorg.joda.time.DateTimeFieldType;", 0x9, NULL },
    { "yearOfCentury", NULL, "Lorg.joda.time.DateTimeFieldType;", 0x9, NULL },
    { "centuryOfEra", NULL, "Lorg.joda.time.DateTimeFieldType;", 0x9, NULL },
    { "era", NULL, "Lorg.joda.time.DateTimeFieldType;", 0x9, NULL },
    { "getName", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "getDurationType", NULL, "Lorg.joda.time.DurationFieldType;", 0x401, NULL },
    { "getRangeDurationType", NULL, "Lorg.joda.time.DurationFieldType;", 0x401, NULL },
    { "getFieldWithOrgJodaTimeChronology:", "getField", "Lorg.joda.time.DateTimeField;", 0x401, NULL },
    { "isSupportedWithOrgJodaTimeChronology:", "isSupported", "Z", 0x1, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, .constantValue.asLong = OrgJodaTimeDateTimeFieldType_serialVersionUID },
    { "ERA_", NULL, 0x18, "B", NULL, .constantValue.asChar = OrgJodaTimeDateTimeFieldType_ERA },
    { "YEAR_OF_ERA_", NULL, 0x18, "B", NULL, .constantValue.asChar = OrgJodaTimeDateTimeFieldType_YEAR_OF_ERA },
    { "CENTURY_OF_ERA_", NULL, 0x18, "B", NULL, .constantValue.asChar = OrgJodaTimeDateTimeFieldType_CENTURY_OF_ERA },
    { "YEAR_OF_CENTURY_", NULL, 0x18, "B", NULL, .constantValue.asChar = OrgJodaTimeDateTimeFieldType_YEAR_OF_CENTURY },
    { "YEAR_", NULL, 0x18, "B", NULL, .constantValue.asChar = OrgJodaTimeDateTimeFieldType_YEAR },
    { "DAY_OF_YEAR_", NULL, 0x18, "B", NULL, .constantValue.asChar = OrgJodaTimeDateTimeFieldType_DAY_OF_YEAR },
    { "MONTH_OF_YEAR_", NULL, 0x18, "B", NULL, .constantValue.asChar = OrgJodaTimeDateTimeFieldType_MONTH_OF_YEAR },
    { "DAY_OF_MONTH_", NULL, 0x18, "B", NULL, .constantValue.asChar = OrgJodaTimeDateTimeFieldType_DAY_OF_MONTH },
    { "WEEKYEAR_OF_CENTURY_", NULL, 0x18, "B", NULL, .constantValue.asChar = OrgJodaTimeDateTimeFieldType_WEEKYEAR_OF_CENTURY },
    { "WEEKYEAR_", NULL, 0x18, "B", NULL, .constantValue.asChar = OrgJodaTimeDateTimeFieldType_WEEKYEAR },
    { "WEEK_OF_WEEKYEAR_", NULL, 0x18, "B", NULL, .constantValue.asChar = OrgJodaTimeDateTimeFieldType_WEEK_OF_WEEKYEAR },
    { "DAY_OF_WEEK_", NULL, 0x18, "B", NULL, .constantValue.asChar = OrgJodaTimeDateTimeFieldType_DAY_OF_WEEK },
    { "HALFDAY_OF_DAY_", NULL, 0x18, "B", NULL, .constantValue.asChar = OrgJodaTimeDateTimeFieldType_HALFDAY_OF_DAY },
    { "HOUR_OF_HALFDAY_", NULL, 0x18, "B", NULL, .constantValue.asChar = OrgJodaTimeDateTimeFieldType_HOUR_OF_HALFDAY },
    { "CLOCKHOUR_OF_HALFDAY_", NULL, 0x18, "B", NULL, .constantValue.asChar = OrgJodaTimeDateTimeFieldType_CLOCKHOUR_OF_HALFDAY },
    { "CLOCKHOUR_OF_DAY_", NULL, 0x18, "B", NULL, .constantValue.asChar = OrgJodaTimeDateTimeFieldType_CLOCKHOUR_OF_DAY },
    { "HOUR_OF_DAY_", NULL, 0x18, "B", NULL, .constantValue.asChar = OrgJodaTimeDateTimeFieldType_HOUR_OF_DAY },
    { "MINUTE_OF_DAY_", NULL, 0x18, "B", NULL, .constantValue.asChar = OrgJodaTimeDateTimeFieldType_MINUTE_OF_DAY },
    { "MINUTE_OF_HOUR_", NULL, 0x18, "B", NULL, .constantValue.asChar = OrgJodaTimeDateTimeFieldType_MINUTE_OF_HOUR },
    { "SECOND_OF_DAY_", NULL, 0x18, "B", NULL, .constantValue.asChar = OrgJodaTimeDateTimeFieldType_SECOND_OF_DAY },
    { "SECOND_OF_MINUTE_", NULL, 0x18, "B", NULL, .constantValue.asChar = OrgJodaTimeDateTimeFieldType_SECOND_OF_MINUTE },
    { "MILLIS_OF_DAY_", NULL, 0x18, "B", NULL, .constantValue.asChar = OrgJodaTimeDateTimeFieldType_MILLIS_OF_DAY },
    { "MILLIS_OF_SECOND_", NULL, 0x18, "B", NULL, .constantValue.asChar = OrgJodaTimeDateTimeFieldType_MILLIS_OF_SECOND },
    { "ERA_TYPE_", NULL, 0x1a, "Lorg.joda.time.DateTimeFieldType;", &OrgJodaTimeDateTimeFieldType_ERA_TYPE_,  },
    { "YEAR_OF_ERA_TYPE_", NULL, 0x1a, "Lorg.joda.time.DateTimeFieldType;", &OrgJodaTimeDateTimeFieldType_YEAR_OF_ERA_TYPE_,  },
    { "CENTURY_OF_ERA_TYPE_", NULL, 0x1a, "Lorg.joda.time.DateTimeFieldType;", &OrgJodaTimeDateTimeFieldType_CENTURY_OF_ERA_TYPE_,  },
    { "YEAR_OF_CENTURY_TYPE_", NULL, 0x1a, "Lorg.joda.time.DateTimeFieldType;", &OrgJodaTimeDateTimeFieldType_YEAR_OF_CENTURY_TYPE_,  },
    { "YEAR_TYPE_", NULL, 0x1a, "Lorg.joda.time.DateTimeFieldType;", &OrgJodaTimeDateTimeFieldType_YEAR_TYPE_,  },
    { "DAY_OF_YEAR_TYPE_", NULL, 0x1a, "Lorg.joda.time.DateTimeFieldType;", &OrgJodaTimeDateTimeFieldType_DAY_OF_YEAR_TYPE_,  },
    { "MONTH_OF_YEAR_TYPE_", NULL, 0x1a, "Lorg.joda.time.DateTimeFieldType;", &OrgJodaTimeDateTimeFieldType_MONTH_OF_YEAR_TYPE_,  },
    { "DAY_OF_MONTH_TYPE_", NULL, 0x1a, "Lorg.joda.time.DateTimeFieldType;", &OrgJodaTimeDateTimeFieldType_DAY_OF_MONTH_TYPE_,  },
    { "WEEKYEAR_OF_CENTURY_TYPE_", NULL, 0x1a, "Lorg.joda.time.DateTimeFieldType;", &OrgJodaTimeDateTimeFieldType_WEEKYEAR_OF_CENTURY_TYPE_,  },
    { "WEEKYEAR_TYPE_", NULL, 0x1a, "Lorg.joda.time.DateTimeFieldType;", &OrgJodaTimeDateTimeFieldType_WEEKYEAR_TYPE_,  },
    { "WEEK_OF_WEEKYEAR_TYPE_", NULL, 0x1a, "Lorg.joda.time.DateTimeFieldType;", &OrgJodaTimeDateTimeFieldType_WEEK_OF_WEEKYEAR_TYPE_,  },
    { "DAY_OF_WEEK_TYPE_", NULL, 0x1a, "Lorg.joda.time.DateTimeFieldType;", &OrgJodaTimeDateTimeFieldType_DAY_OF_WEEK_TYPE_,  },
    { "HALFDAY_OF_DAY_TYPE_", NULL, 0x1a, "Lorg.joda.time.DateTimeFieldType;", &OrgJodaTimeDateTimeFieldType_HALFDAY_OF_DAY_TYPE_,  },
    { "HOUR_OF_HALFDAY_TYPE_", NULL, 0x1a, "Lorg.joda.time.DateTimeFieldType;", &OrgJodaTimeDateTimeFieldType_HOUR_OF_HALFDAY_TYPE_,  },
    { "CLOCKHOUR_OF_HALFDAY_TYPE_", NULL, 0x1a, "Lorg.joda.time.DateTimeFieldType;", &OrgJodaTimeDateTimeFieldType_CLOCKHOUR_OF_HALFDAY_TYPE_,  },
    { "CLOCKHOUR_OF_DAY_TYPE_", NULL, 0x1a, "Lorg.joda.time.DateTimeFieldType;", &OrgJodaTimeDateTimeFieldType_CLOCKHOUR_OF_DAY_TYPE_,  },
    { "HOUR_OF_DAY_TYPE_", NULL, 0x1a, "Lorg.joda.time.DateTimeFieldType;", &OrgJodaTimeDateTimeFieldType_HOUR_OF_DAY_TYPE_,  },
    { "MINUTE_OF_DAY_TYPE_", NULL, 0x1a, "Lorg.joda.time.DateTimeFieldType;", &OrgJodaTimeDateTimeFieldType_MINUTE_OF_DAY_TYPE_,  },
    { "MINUTE_OF_HOUR_TYPE_", NULL, 0x1a, "Lorg.joda.time.DateTimeFieldType;", &OrgJodaTimeDateTimeFieldType_MINUTE_OF_HOUR_TYPE_,  },
    { "SECOND_OF_DAY_TYPE_", NULL, 0x1a, "Lorg.joda.time.DateTimeFieldType;", &OrgJodaTimeDateTimeFieldType_SECOND_OF_DAY_TYPE_,  },
    { "SECOND_OF_MINUTE_TYPE_", NULL, 0x1a, "Lorg.joda.time.DateTimeFieldType;", &OrgJodaTimeDateTimeFieldType_SECOND_OF_MINUTE_TYPE_,  },
    { "MILLIS_OF_DAY_TYPE_", NULL, 0x1a, "Lorg.joda.time.DateTimeFieldType;", &OrgJodaTimeDateTimeFieldType_MILLIS_OF_DAY_TYPE_,  },
    { "MILLIS_OF_SECOND_TYPE_", NULL, 0x1a, "Lorg.joda.time.DateTimeFieldType;", &OrgJodaTimeDateTimeFieldType_MILLIS_OF_SECOND_TYPE_,  },
    { "iName_", NULL, 0x12, "Ljava.lang.String;", NULL,  },
  };
  static const J2ObjcClassInfo _OrgJodaTimeDateTimeFieldType = { "DateTimeFieldType", "org.joda.time", NULL, 0x401, 30, methods, 48, fields, 0, NULL};
  return &_OrgJodaTimeDateTimeFieldType;
}

@end

OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_millisOfSecond() {
  OrgJodaTimeDateTimeFieldType_init();
  return OrgJodaTimeDateTimeFieldType_MILLIS_OF_SECOND_TYPE_;
}

OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_millisOfDay() {
  OrgJodaTimeDateTimeFieldType_init();
  return OrgJodaTimeDateTimeFieldType_MILLIS_OF_DAY_TYPE_;
}

OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_secondOfMinute() {
  OrgJodaTimeDateTimeFieldType_init();
  return OrgJodaTimeDateTimeFieldType_SECOND_OF_MINUTE_TYPE_;
}

OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_secondOfDay() {
  OrgJodaTimeDateTimeFieldType_init();
  return OrgJodaTimeDateTimeFieldType_SECOND_OF_DAY_TYPE_;
}

OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_minuteOfHour() {
  OrgJodaTimeDateTimeFieldType_init();
  return OrgJodaTimeDateTimeFieldType_MINUTE_OF_HOUR_TYPE_;
}

OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_minuteOfDay() {
  OrgJodaTimeDateTimeFieldType_init();
  return OrgJodaTimeDateTimeFieldType_MINUTE_OF_DAY_TYPE_;
}

OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_hourOfDay() {
  OrgJodaTimeDateTimeFieldType_init();
  return OrgJodaTimeDateTimeFieldType_HOUR_OF_DAY_TYPE_;
}

OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_clockhourOfDay() {
  OrgJodaTimeDateTimeFieldType_init();
  return OrgJodaTimeDateTimeFieldType_CLOCKHOUR_OF_DAY_TYPE_;
}

OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_hourOfHalfday() {
  OrgJodaTimeDateTimeFieldType_init();
  return OrgJodaTimeDateTimeFieldType_HOUR_OF_HALFDAY_TYPE_;
}

OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_clockhourOfHalfday() {
  OrgJodaTimeDateTimeFieldType_init();
  return OrgJodaTimeDateTimeFieldType_CLOCKHOUR_OF_HALFDAY_TYPE_;
}

OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_halfdayOfDay() {
  OrgJodaTimeDateTimeFieldType_init();
  return OrgJodaTimeDateTimeFieldType_HALFDAY_OF_DAY_TYPE_;
}

OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_dayOfWeek() {
  OrgJodaTimeDateTimeFieldType_init();
  return OrgJodaTimeDateTimeFieldType_DAY_OF_WEEK_TYPE_;
}

OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_dayOfMonth() {
  OrgJodaTimeDateTimeFieldType_init();
  return OrgJodaTimeDateTimeFieldType_DAY_OF_MONTH_TYPE_;
}

OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_dayOfYear() {
  OrgJodaTimeDateTimeFieldType_init();
  return OrgJodaTimeDateTimeFieldType_DAY_OF_YEAR_TYPE_;
}

OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_weekOfWeekyear() {
  OrgJodaTimeDateTimeFieldType_init();
  return OrgJodaTimeDateTimeFieldType_WEEK_OF_WEEKYEAR_TYPE_;
}

OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_weekyear() {
  OrgJodaTimeDateTimeFieldType_init();
  return OrgJodaTimeDateTimeFieldType_WEEKYEAR_TYPE_;
}

OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_weekyearOfCentury() {
  OrgJodaTimeDateTimeFieldType_init();
  return OrgJodaTimeDateTimeFieldType_WEEKYEAR_OF_CENTURY_TYPE_;
}

OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_monthOfYear() {
  OrgJodaTimeDateTimeFieldType_init();
  return OrgJodaTimeDateTimeFieldType_MONTH_OF_YEAR_TYPE_;
}

OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_year() {
  OrgJodaTimeDateTimeFieldType_init();
  return OrgJodaTimeDateTimeFieldType_YEAR_TYPE_;
}

OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_yearOfEra() {
  OrgJodaTimeDateTimeFieldType_init();
  return OrgJodaTimeDateTimeFieldType_YEAR_OF_ERA_TYPE_;
}

OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_yearOfCentury() {
  OrgJodaTimeDateTimeFieldType_init();
  return OrgJodaTimeDateTimeFieldType_YEAR_OF_CENTURY_TYPE_;
}

OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_centuryOfEra() {
  OrgJodaTimeDateTimeFieldType_init();
  return OrgJodaTimeDateTimeFieldType_CENTURY_OF_ERA_TYPE_;
}

OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_era() {
  OrgJodaTimeDateTimeFieldType_init();
  return OrgJodaTimeDateTimeFieldType_ERA_TYPE_;
}

@implementation OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType

- (instancetype)initWithNSString:(NSString *)name
                        withByte:(jbyte)ordinal
withOrgJodaTimeDurationFieldType:(OrgJodaTimeDurationFieldType *)unitType
withOrgJodaTimeDurationFieldType:(OrgJodaTimeDurationFieldType *)rangeType {
  if (self = [super initWithNSString:name]) {
    iOrdinal_ = ordinal;
    OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType_set_iUnitType_(self, unitType);
    OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType_set_iRangeType_(self, rangeType);
  }
  return self;
}

- (OrgJodaTimeDurationFieldType *)getDurationType {
  return iUnitType_;
}

- (OrgJodaTimeDurationFieldType *)getRangeDurationType {
  return iRangeType_;
}

- (jboolean)isEqual:(id)obj {
  if (self == obj) {
    return YES;
  }
  if ([obj isKindOfClass:[OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType class]]) {
    return iOrdinal_ == ((OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType *) nil_chk(((OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType *) check_class_cast(obj, [OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType class]))))->iOrdinal_;
  }
  return NO;
}

- (NSUInteger)hash {
  return (LShift32(1, iOrdinal_));
}

- (OrgJodaTimeDateTimeField *)getFieldWithOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology {
  chronology = OrgJodaTimeDateTimeUtils_getChronologyWithOrgJodaTimeChronology_(chronology);
  switch (iOrdinal_) {
    case OrgJodaTimeDateTimeFieldType_ERA:
    return [((OrgJodaTimeChronology *) nil_chk(chronology)) era];
    case OrgJodaTimeDateTimeFieldType_YEAR_OF_ERA:
    return [((OrgJodaTimeChronology *) nil_chk(chronology)) yearOfEra];
    case OrgJodaTimeDateTimeFieldType_CENTURY_OF_ERA:
    return [((OrgJodaTimeChronology *) nil_chk(chronology)) centuryOfEra];
    case OrgJodaTimeDateTimeFieldType_YEAR_OF_CENTURY:
    return [((OrgJodaTimeChronology *) nil_chk(chronology)) yearOfCentury];
    case OrgJodaTimeDateTimeFieldType_YEAR:
    return [((OrgJodaTimeChronology *) nil_chk(chronology)) year];
    case OrgJodaTimeDateTimeFieldType_DAY_OF_YEAR:
    return [((OrgJodaTimeChronology *) nil_chk(chronology)) dayOfYear];
    case OrgJodaTimeDateTimeFieldType_MONTH_OF_YEAR:
    return [((OrgJodaTimeChronology *) nil_chk(chronology)) monthOfYear];
    case OrgJodaTimeDateTimeFieldType_DAY_OF_MONTH:
    return [((OrgJodaTimeChronology *) nil_chk(chronology)) dayOfMonth];
    case OrgJodaTimeDateTimeFieldType_WEEKYEAR_OF_CENTURY:
    return [((OrgJodaTimeChronology *) nil_chk(chronology)) weekyearOfCentury];
    case OrgJodaTimeDateTimeFieldType_WEEKYEAR:
    return [((OrgJodaTimeChronology *) nil_chk(chronology)) weekyear];
    case OrgJodaTimeDateTimeFieldType_WEEK_OF_WEEKYEAR:
    return [((OrgJodaTimeChronology *) nil_chk(chronology)) weekOfWeekyear];
    case OrgJodaTimeDateTimeFieldType_DAY_OF_WEEK:
    return [((OrgJodaTimeChronology *) nil_chk(chronology)) dayOfWeek];
    case OrgJodaTimeDateTimeFieldType_HALFDAY_OF_DAY:
    return [((OrgJodaTimeChronology *) nil_chk(chronology)) halfdayOfDay];
    case OrgJodaTimeDateTimeFieldType_HOUR_OF_HALFDAY:
    return [((OrgJodaTimeChronology *) nil_chk(chronology)) hourOfHalfday];
    case OrgJodaTimeDateTimeFieldType_CLOCKHOUR_OF_HALFDAY:
    return [((OrgJodaTimeChronology *) nil_chk(chronology)) clockhourOfHalfday];
    case OrgJodaTimeDateTimeFieldType_CLOCKHOUR_OF_DAY:
    return [((OrgJodaTimeChronology *) nil_chk(chronology)) clockhourOfDay];
    case OrgJodaTimeDateTimeFieldType_HOUR_OF_DAY:
    return [((OrgJodaTimeChronology *) nil_chk(chronology)) hourOfDay];
    case OrgJodaTimeDateTimeFieldType_MINUTE_OF_DAY:
    return [((OrgJodaTimeChronology *) nil_chk(chronology)) minuteOfDay];
    case OrgJodaTimeDateTimeFieldType_MINUTE_OF_HOUR:
    return [((OrgJodaTimeChronology *) nil_chk(chronology)) minuteOfHour];
    case OrgJodaTimeDateTimeFieldType_SECOND_OF_DAY:
    return [((OrgJodaTimeChronology *) nil_chk(chronology)) secondOfDay];
    case OrgJodaTimeDateTimeFieldType_SECOND_OF_MINUTE:
    return [((OrgJodaTimeChronology *) nil_chk(chronology)) secondOfMinute];
    case OrgJodaTimeDateTimeFieldType_MILLIS_OF_DAY:
    return [((OrgJodaTimeChronology *) nil_chk(chronology)) millisOfDay];
    case OrgJodaTimeDateTimeFieldType_MILLIS_OF_SECOND:
    return [((OrgJodaTimeChronology *) nil_chk(chronology)) millisOfSecond];
    default:
    @throw [[[JavaLangInternalError alloc] init] autorelease];
  }
}

- (id)readResolve {
  switch (iOrdinal_) {
    case OrgJodaTimeDateTimeFieldType_ERA:
    return OrgJodaTimeDateTimeFieldType_get_ERA_TYPE_();
    case OrgJodaTimeDateTimeFieldType_YEAR_OF_ERA:
    return OrgJodaTimeDateTimeFieldType_get_YEAR_OF_ERA_TYPE_();
    case OrgJodaTimeDateTimeFieldType_CENTURY_OF_ERA:
    return OrgJodaTimeDateTimeFieldType_get_CENTURY_OF_ERA_TYPE_();
    case OrgJodaTimeDateTimeFieldType_YEAR_OF_CENTURY:
    return OrgJodaTimeDateTimeFieldType_get_YEAR_OF_CENTURY_TYPE_();
    case OrgJodaTimeDateTimeFieldType_YEAR:
    return OrgJodaTimeDateTimeFieldType_get_YEAR_TYPE_();
    case OrgJodaTimeDateTimeFieldType_DAY_OF_YEAR:
    return OrgJodaTimeDateTimeFieldType_get_DAY_OF_YEAR_TYPE_();
    case OrgJodaTimeDateTimeFieldType_MONTH_OF_YEAR:
    return OrgJodaTimeDateTimeFieldType_get_MONTH_OF_YEAR_TYPE_();
    case OrgJodaTimeDateTimeFieldType_DAY_OF_MONTH:
    return OrgJodaTimeDateTimeFieldType_get_DAY_OF_MONTH_TYPE_();
    case OrgJodaTimeDateTimeFieldType_WEEKYEAR_OF_CENTURY:
    return OrgJodaTimeDateTimeFieldType_get_WEEKYEAR_OF_CENTURY_TYPE_();
    case OrgJodaTimeDateTimeFieldType_WEEKYEAR:
    return OrgJodaTimeDateTimeFieldType_get_WEEKYEAR_TYPE_();
    case OrgJodaTimeDateTimeFieldType_WEEK_OF_WEEKYEAR:
    return OrgJodaTimeDateTimeFieldType_get_WEEK_OF_WEEKYEAR_TYPE_();
    case OrgJodaTimeDateTimeFieldType_DAY_OF_WEEK:
    return OrgJodaTimeDateTimeFieldType_get_DAY_OF_WEEK_TYPE_();
    case OrgJodaTimeDateTimeFieldType_HALFDAY_OF_DAY:
    return OrgJodaTimeDateTimeFieldType_get_HALFDAY_OF_DAY_TYPE_();
    case OrgJodaTimeDateTimeFieldType_HOUR_OF_HALFDAY:
    return OrgJodaTimeDateTimeFieldType_get_HOUR_OF_HALFDAY_TYPE_();
    case OrgJodaTimeDateTimeFieldType_CLOCKHOUR_OF_HALFDAY:
    return OrgJodaTimeDateTimeFieldType_get_CLOCKHOUR_OF_HALFDAY_TYPE_();
    case OrgJodaTimeDateTimeFieldType_CLOCKHOUR_OF_DAY:
    return OrgJodaTimeDateTimeFieldType_get_CLOCKHOUR_OF_DAY_TYPE_();
    case OrgJodaTimeDateTimeFieldType_HOUR_OF_DAY:
    return OrgJodaTimeDateTimeFieldType_get_HOUR_OF_DAY_TYPE_();
    case OrgJodaTimeDateTimeFieldType_MINUTE_OF_DAY:
    return OrgJodaTimeDateTimeFieldType_get_MINUTE_OF_DAY_TYPE_();
    case OrgJodaTimeDateTimeFieldType_MINUTE_OF_HOUR:
    return OrgJodaTimeDateTimeFieldType_get_MINUTE_OF_HOUR_TYPE_();
    case OrgJodaTimeDateTimeFieldType_SECOND_OF_DAY:
    return OrgJodaTimeDateTimeFieldType_get_SECOND_OF_DAY_TYPE_();
    case OrgJodaTimeDateTimeFieldType_SECOND_OF_MINUTE:
    return OrgJodaTimeDateTimeFieldType_get_SECOND_OF_MINUTE_TYPE_();
    case OrgJodaTimeDateTimeFieldType_MILLIS_OF_DAY:
    return OrgJodaTimeDateTimeFieldType_get_MILLIS_OF_DAY_TYPE_();
    case OrgJodaTimeDateTimeFieldType_MILLIS_OF_SECOND:
    return OrgJodaTimeDateTimeFieldType_get_MILLIS_OF_SECOND_TYPE_();
    default:
    return self;
  }
}

- (void)dealloc {
  OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType_set_iUnitType_(self, nil);
  OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType_set_iRangeType_(self, nil);
  [super dealloc];
}

- (void)copyAllFieldsTo:(OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType *)other {
  [super copyAllFieldsTo:other];
  other->iOrdinal_ = iOrdinal_;
  OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType_set_iUnitType_(other, iUnitType_);
  OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType_set_iRangeType_(other, iRangeType_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withByte:withOrgJodaTimeDurationFieldType:withOrgJodaTimeDurationFieldType:", "StandardDateTimeFieldType", NULL, 0x0, NULL },
    { "getDurationType", NULL, "Lorg.joda.time.DurationFieldType;", 0x1, NULL },
    { "getRangeDurationType", NULL, "Lorg.joda.time.DurationFieldType;", 0x1, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL },
    { "hash", "hashCode", "I", 0x1, NULL },
    { "getFieldWithOrgJodaTimeChronology:", "getField", "Lorg.joda.time.DateTimeField;", 0x1, NULL },
    { "readResolve", NULL, "Ljava.lang.Object;", 0x2, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, .constantValue.asLong = OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType_serialVersionUID },
    { "iOrdinal_", NULL, 0x12, "B", NULL,  },
    { "iUnitType_", NULL, 0x92, "Lorg.joda.time.DurationFieldType;", NULL,  },
    { "iRangeType_", NULL, 0x92, "Lorg.joda.time.DurationFieldType;", NULL,  },
  };
  static const J2ObjcClassInfo _OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType = { "StandardDateTimeFieldType", "org.joda.time", "DateTimeFieldType", 0xa, 7, methods, 4, fields, 0, NULL};
  return &_OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType;
}

@end

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nbransby/Documents/joda-time/src/main/java/org/joda/time/field/LenientDateTimeField.java
//

#ifndef _OrgJodaTimeFieldLenientDateTimeField_H_
#define _OrgJodaTimeFieldLenientDateTimeField_H_

@class OrgJodaTimeChronology;
@class OrgJodaTimeDateTimeField;

#import "JreEmulation.h"
#include "DelegatedDateTimeField.h"

#define OrgJodaTimeFieldLenientDateTimeField_serialVersionUID 8714085824173290599LL

/**
 @brief Converts a strict DateTimeField into a lenient one.
 By being lenient, the set method accepts out of bounds values, performing an addition instead. <p> LenientDateTimeField is thread-safe and immutable.
 @author Brian S O'Neill
 @since 1.0
 */
@interface OrgJodaTimeFieldLenientDateTimeField : OrgJodaTimeFieldDelegatedDateTimeField {
 @public
  OrgJodaTimeChronology *iBase_;
}

/**
 @brief Returns a lenient version of the given field.
 If it is already lenient, then it is returned as-is. Otherwise, a new LenientDateTimeField is returned.
 */
+ (OrgJodaTimeDateTimeField *)getInstanceWithOrgJodaTimeDateTimeField:(OrgJodaTimeDateTimeField *)field
                                            withOrgJodaTimeChronology:(OrgJodaTimeChronology *)base;

- (instancetype)initWithOrgJodaTimeDateTimeField:(OrgJodaTimeDateTimeField *)field
                       withOrgJodaTimeChronology:(OrgJodaTimeChronology *)base;

- (jboolean)isLenient;

/**
 @brief Set values which may be out of bounds by adding the difference between the new value and the current value.
 */
- (jlong)setWithLong:(jlong)instant
             withInt:(jint)value;

- (void)dealloc;

- (void)copyAllFieldsTo:(OrgJodaTimeFieldLenientDateTimeField *)other;

@end

__attribute__((always_inline)) inline void OrgJodaTimeFieldLenientDateTimeField_init() {}

J2OBJC_FIELD_SETTER(OrgJodaTimeFieldLenientDateTimeField, iBase_, OrgJodaTimeChronology *)
FOUNDATION_EXPORT OrgJodaTimeDateTimeField *OrgJodaTimeFieldLenientDateTimeField_getInstanceWithOrgJodaTimeDateTimeField_withOrgJodaTimeChronology_(OrgJodaTimeDateTimeField *field, OrgJodaTimeChronology *base);

J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeFieldLenientDateTimeField, serialVersionUID, jlong)

#endif // _OrgJodaTimeFieldLenientDateTimeField_H_

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/andrewebling/Laundrapp/Joda-time-Project/joda-time/src/main/java/org/joda/time/Hours.java
//

#include "BaseSingleFieldPeriod.h"
#include "Chronology.h"
#include "DateTime.h"
#include "DateTimeConstants.h"
#include "DateTimeUtils.h"
#include "Days.h"
#include "Duration.h"
#include "DurationField.h"
#include "DurationFieldType.h"
#include "FieldUtils.h"
#include "FromString.h"
#include "Hours.h"
#include "IOSClass.h"
#include "ISOPeriodFormat.h"
#include "LocalTime.h"
#include "Minutes.h"
#include "Period.h"
#include "PeriodFormatter.h"
#include "PeriodType.h"
#include "ReadableInstant.h"
#include "ReadableInterval.h"
#include "ReadablePartial.h"
#include "ReadablePeriod.h"
#include "Seconds.h"
#include "ToString.h"
#include "Weeks.h"
#include "java/lang/Integer.h"

BOOL OrgJodaTimeHours_initialized = NO;

@implementation OrgJodaTimeHours

OrgJodaTimeHours * OrgJodaTimeHours_ZERO_;
OrgJodaTimeHours * OrgJodaTimeHours_ONE_;
OrgJodaTimeHours * OrgJodaTimeHours_TWO_;
OrgJodaTimeHours * OrgJodaTimeHours_THREE_;
OrgJodaTimeHours * OrgJodaTimeHours_FOUR_;
OrgJodaTimeHours * OrgJodaTimeHours_FIVE_;
OrgJodaTimeHours * OrgJodaTimeHours_SIX_;
OrgJodaTimeHours * OrgJodaTimeHours_SEVEN_;
OrgJodaTimeHours * OrgJodaTimeHours_EIGHT_;
OrgJodaTimeHours * OrgJodaTimeHours_MAX_VALUE_;
OrgJodaTimeHours * OrgJodaTimeHours_MIN_VALUE_;
OrgJodaTimeFormatPeriodFormatter * OrgJodaTimeHours_PARSER_;

+ (OrgJodaTimeHours *)hoursWithInt:(int)hours {
  switch (hours) {
    case 0:
    return OrgJodaTimeHours_ZERO_;
    case 1:
    return OrgJodaTimeHours_ONE_;
    case 2:
    return OrgJodaTimeHours_TWO_;
    case 3:
    return OrgJodaTimeHours_THREE_;
    case 4:
    return OrgJodaTimeHours_FOUR_;
    case 5:
    return OrgJodaTimeHours_FIVE_;
    case 6:
    return OrgJodaTimeHours_SIX_;
    case 7:
    return OrgJodaTimeHours_SEVEN_;
    case 8:
    return OrgJodaTimeHours_EIGHT_;
    case JavaLangInteger_MAX_VALUE:
    return OrgJodaTimeHours_MAX_VALUE_;
    case JavaLangInteger_MIN_VALUE:
    return OrgJodaTimeHours_MIN_VALUE_;
    default:
    return [[OrgJodaTimeHours alloc] initWithInt:hours];
  }
}

+ (OrgJodaTimeHours *)hoursBetweenWithOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)start
                                  withOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)end {
  int amount = [OrgJodaTimeBaseBaseSingleFieldPeriod betweenWithOrgJodaTimeReadableInstant:start withOrgJodaTimeReadableInstant:end withOrgJodaTimeDurationFieldType:[OrgJodaTimeDurationFieldType hours]];
  return [OrgJodaTimeHours hoursWithInt:amount];
}

+ (OrgJodaTimeHours *)hoursBetweenWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)start
                                  withOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)end {
  if ([(id) start isKindOfClass:[OrgJodaTimeLocalTime class]] && [(id) end isKindOfClass:[OrgJodaTimeLocalTime class]]) {
    OrgJodaTimeChronology *chrono = [OrgJodaTimeDateTimeUtils getChronologyWithOrgJodaTimeChronology:[((id<OrgJodaTimeReadablePartial>) nil_chk(start)) getChronology]];
    int hours = [((OrgJodaTimeDurationField *) nil_chk([((OrgJodaTimeChronology *) nil_chk(chrono)) hours])) getDifferenceWithLong:[((OrgJodaTimeLocalTime *) nil_chk(((OrgJodaTimeLocalTime *) check_class_cast(end, [OrgJodaTimeLocalTime class])))) getLocalMillis] withLong:[((OrgJodaTimeLocalTime *) check_class_cast(start, [OrgJodaTimeLocalTime class])) getLocalMillis]];
    return [OrgJodaTimeHours hoursWithInt:hours];
  }
  int amount = [OrgJodaTimeBaseBaseSingleFieldPeriod betweenWithOrgJodaTimeReadablePartial:start withOrgJodaTimeReadablePartial:end withOrgJodaTimeReadablePeriod:OrgJodaTimeHours_ZERO_];
  return [OrgJodaTimeHours hoursWithInt:amount];
}

+ (OrgJodaTimeHours *)hoursInWithOrgJodaTimeReadableInterval:(id<OrgJodaTimeReadableInterval>)interval {
  if (interval == nil) {
    return OrgJodaTimeHours_ZERO_;
  }
  int amount = [OrgJodaTimeBaseBaseSingleFieldPeriod betweenWithOrgJodaTimeReadableInstant:[((id<OrgJodaTimeReadableInterval>) nil_chk(interval)) getStart] withOrgJodaTimeReadableInstant:[interval getEnd] withOrgJodaTimeDurationFieldType:[OrgJodaTimeDurationFieldType hours]];
  return [OrgJodaTimeHours hoursWithInt:amount];
}

+ (OrgJodaTimeHours *)standardHoursInWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period {
  int amount = [OrgJodaTimeBaseBaseSingleFieldPeriod standardPeriodInWithOrgJodaTimeReadablePeriod:period withLong:OrgJodaTimeDateTimeConstants_MILLIS_PER_HOUR];
  return [OrgJodaTimeHours hoursWithInt:amount];
}

+ (OrgJodaTimeHours *)parseHoursWithNSString:(NSString *)periodStr {
  if (periodStr == nil) {
    return OrgJodaTimeHours_ZERO_;
  }
  OrgJodaTimePeriod *p = [((OrgJodaTimeFormatPeriodFormatter *) nil_chk(OrgJodaTimeHours_PARSER_)) parsePeriodWithNSString:periodStr];
  return [OrgJodaTimeHours hoursWithInt:[((OrgJodaTimePeriod *) nil_chk(p)) getHours]];
}

- (instancetype)initWithInt:(int)hours {
  return [super initWithInt:hours];
}

- (id)readResolve {
  return [OrgJodaTimeHours hoursWithInt:[self getValue]];
}

- (OrgJodaTimeDurationFieldType *)getFieldType {
  return [OrgJodaTimeDurationFieldType hours];
}

- (OrgJodaTimePeriodType *)getPeriodType {
  return [OrgJodaTimePeriodType hours];
}

- (OrgJodaTimeWeeks *)toStandardWeeks {
  return [OrgJodaTimeWeeks weeksWithInt:[self getValue] / OrgJodaTimeDateTimeConstants_HOURS_PER_WEEK];
}

- (OrgJodaTimeDays *)toStandardDays {
  return [OrgJodaTimeDays daysWithInt:[self getValue] / OrgJodaTimeDateTimeConstants_HOURS_PER_DAY];
}

- (OrgJodaTimeMinutes *)toStandardMinutes {
  return [OrgJodaTimeMinutes minutesWithInt:[OrgJodaTimeFieldFieldUtils safeMultiplyWithInt:[self getValue] withInt:OrgJodaTimeDateTimeConstants_MINUTES_PER_HOUR]];
}

- (OrgJodaTimeSeconds *)toStandardSeconds {
  return [OrgJodaTimeSeconds secondsWithInt:[OrgJodaTimeFieldFieldUtils safeMultiplyWithInt:[self getValue] withInt:OrgJodaTimeDateTimeConstants_SECONDS_PER_HOUR]];
}

- (OrgJodaTimeDuration *)toStandardDuration {
  long long int hours = [self getValue];
  return [[OrgJodaTimeDuration alloc] initWithLong:hours * OrgJodaTimeDateTimeConstants_MILLIS_PER_HOUR];
}

- (int)getHours {
  return [self getValue];
}

- (OrgJodaTimeHours *)plusWithInt:(int)hours {
  if (hours == 0) {
    return self;
  }
  return [OrgJodaTimeHours hoursWithInt:[OrgJodaTimeFieldFieldUtils safeAddWithInt:[self getValue] withInt:hours]];
}

- (OrgJodaTimeHours *)plusWithOrgJodaTimeHours:(OrgJodaTimeHours *)hours {
  if (hours == nil) {
    return self;
  }
  return [self plusWithInt:[((OrgJodaTimeHours *) nil_chk(hours)) getValue]];
}

- (OrgJodaTimeHours *)minusWithInt:(int)hours {
  return [self plusWithInt:[OrgJodaTimeFieldFieldUtils safeNegateWithInt:hours]];
}

- (OrgJodaTimeHours *)minusWithOrgJodaTimeHours:(OrgJodaTimeHours *)hours {
  if (hours == nil) {
    return self;
  }
  return [self minusWithInt:[((OrgJodaTimeHours *) nil_chk(hours)) getValue]];
}

- (OrgJodaTimeHours *)multipliedByWithInt:(int)scalar {
  return [OrgJodaTimeHours hoursWithInt:[OrgJodaTimeFieldFieldUtils safeMultiplyWithInt:[self getValue] withInt:scalar]];
}

- (OrgJodaTimeHours *)dividedByWithInt:(int)divisor {
  if (divisor == 1) {
    return self;
  }
  return [OrgJodaTimeHours hoursWithInt:[self getValue] / divisor];
}

- (OrgJodaTimeHours *)negated {
  return [OrgJodaTimeHours hoursWithInt:[OrgJodaTimeFieldFieldUtils safeNegateWithInt:[self getValue]]];
}

- (BOOL)isGreaterThanWithOrgJodaTimeHours:(OrgJodaTimeHours *)other {
  if (other == nil) {
    return [self getValue] > 0;
  }
  return [self getValue] > [((OrgJodaTimeHours *) nil_chk(other)) getValue];
}

- (BOOL)isLessThanWithOrgJodaTimeHours:(OrgJodaTimeHours *)other {
  if (other == nil) {
    return [self getValue] < 0;
  }
  return [self getValue] < [((OrgJodaTimeHours *) nil_chk(other)) getValue];
}

- (NSString *)description {
  return [NSString stringWithFormat:@"PT%@H", [NSString valueOfInt:[self getValue]]];
}

+ (void)initialize {
  if (self == [OrgJodaTimeHours class]) {
    OrgJodaTimeHours_ZERO_ = [[OrgJodaTimeHours alloc] initWithInt:0];
    OrgJodaTimeHours_ONE_ = [[OrgJodaTimeHours alloc] initWithInt:1];
    OrgJodaTimeHours_TWO_ = [[OrgJodaTimeHours alloc] initWithInt:2];
    OrgJodaTimeHours_THREE_ = [[OrgJodaTimeHours alloc] initWithInt:3];
    OrgJodaTimeHours_FOUR_ = [[OrgJodaTimeHours alloc] initWithInt:4];
    OrgJodaTimeHours_FIVE_ = [[OrgJodaTimeHours alloc] initWithInt:5];
    OrgJodaTimeHours_SIX_ = [[OrgJodaTimeHours alloc] initWithInt:6];
    OrgJodaTimeHours_SEVEN_ = [[OrgJodaTimeHours alloc] initWithInt:7];
    OrgJodaTimeHours_EIGHT_ = [[OrgJodaTimeHours alloc] initWithInt:8];
    OrgJodaTimeHours_MAX_VALUE_ = [[OrgJodaTimeHours alloc] initWithInt:JavaLangInteger_MAX_VALUE];
    OrgJodaTimeHours_MIN_VALUE_ = [[OrgJodaTimeHours alloc] initWithInt:JavaLangInteger_MIN_VALUE];
    OrgJodaTimeHours_PARSER_ = [((OrgJodaTimeFormatPeriodFormatter *) nil_chk([OrgJodaTimeFormatISOPeriodFormat standard])) withParseTypeWithOrgJodaTimePeriodType:[OrgJodaTimePeriodType hours]];
    OrgJodaTimeHours_initialized = YES;
  }
}
+ (IOSObjectArray *)__annotations_parseHoursWithNSString_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[OrgJodaConvertFromString alloc] init] } count:1 type:[IOSClass classWithProtocol:@protocol(JavaLangAnnotationAnnotation)]];
}

+ (IOSObjectArray *)__annotations_description {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[OrgJodaConvertToString alloc] init] } count:1 type:[IOSClass classWithProtocol:@protocol(JavaLangAnnotationAnnotation)]];
}


+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "hoursWithInt:", "hours", "Lorg.joda.time.Hours;", 0x9, NULL },
    { "hoursBetweenWithOrgJodaTimeReadableInstant:withOrgJodaTimeReadableInstant:", "hoursBetween", "Lorg.joda.time.Hours;", 0x9, NULL },
    { "hoursBetweenWithOrgJodaTimeReadablePartial:withOrgJodaTimeReadablePartial:", "hoursBetween", "Lorg.joda.time.Hours;", 0x9, NULL },
    { "hoursInWithOrgJodaTimeReadableInterval:", "hoursIn", "Lorg.joda.time.Hours;", 0x9, NULL },
    { "standardHoursInWithOrgJodaTimeReadablePeriod:", "standardHoursIn", "Lorg.joda.time.Hours;", 0x9, NULL },
    { "parseHoursWithNSString:", "parseHours", "Lorg.joda.time.Hours;", 0x9, NULL },
    { "initWithInt:", "Hours", NULL, 0x2, NULL },
    { "readResolve", NULL, "Ljava.lang.Object;", 0x2, NULL },
    { "getFieldType", NULL, "Lorg.joda.time.DurationFieldType;", 0x1, NULL },
    { "getPeriodType", NULL, "Lorg.joda.time.PeriodType;", 0x1, NULL },
    { "toStandardWeeks", NULL, "Lorg.joda.time.Weeks;", 0x1, NULL },
    { "toStandardDays", NULL, "Lorg.joda.time.Days;", 0x1, NULL },
    { "toStandardMinutes", NULL, "Lorg.joda.time.Minutes;", 0x1, NULL },
    { "toStandardSeconds", NULL, "Lorg.joda.time.Seconds;", 0x1, NULL },
    { "toStandardDuration", NULL, "Lorg.joda.time.Duration;", 0x1, NULL },
    { "getHours", NULL, "I", 0x1, NULL },
    { "plusWithInt:", "plus", "Lorg.joda.time.Hours;", 0x1, NULL },
    { "plusWithOrgJodaTimeHours:", "plus", "Lorg.joda.time.Hours;", 0x1, NULL },
    { "minusWithInt:", "minus", "Lorg.joda.time.Hours;", 0x1, NULL },
    { "minusWithOrgJodaTimeHours:", "minus", "Lorg.joda.time.Hours;", 0x1, NULL },
    { "multipliedByWithInt:", "multipliedBy", "Lorg.joda.time.Hours;", 0x1, NULL },
    { "dividedByWithInt:", "dividedBy", "Lorg.joda.time.Hours;", 0x1, NULL },
    { "negated", NULL, "Lorg.joda.time.Hours;", 0x1, NULL },
    { "isGreaterThanWithOrgJodaTimeHours:", "isGreaterThan", "Z", 0x1, NULL },
    { "isLessThanWithOrgJodaTimeHours:", "isLessThan", "Z", 0x1, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "ZERO_", NULL, 0x19, "Lorg.joda.time.Hours;", &OrgJodaTimeHours_ZERO_,  },
    { "ONE_", NULL, 0x19, "Lorg.joda.time.Hours;", &OrgJodaTimeHours_ONE_,  },
    { "TWO_", NULL, 0x19, "Lorg.joda.time.Hours;", &OrgJodaTimeHours_TWO_,  },
    { "THREE_", NULL, 0x19, "Lorg.joda.time.Hours;", &OrgJodaTimeHours_THREE_,  },
    { "FOUR_", NULL, 0x19, "Lorg.joda.time.Hours;", &OrgJodaTimeHours_FOUR_,  },
    { "FIVE_", NULL, 0x19, "Lorg.joda.time.Hours;", &OrgJodaTimeHours_FIVE_,  },
    { "SIX_", NULL, 0x19, "Lorg.joda.time.Hours;", &OrgJodaTimeHours_SIX_,  },
    { "SEVEN_", NULL, 0x19, "Lorg.joda.time.Hours;", &OrgJodaTimeHours_SEVEN_,  },
    { "EIGHT_", NULL, 0x19, "Lorg.joda.time.Hours;", &OrgJodaTimeHours_EIGHT_,  },
    { "MAX_VALUE_", NULL, 0x19, "Lorg.joda.time.Hours;", &OrgJodaTimeHours_MAX_VALUE_,  },
    { "MIN_VALUE_", NULL, 0x19, "Lorg.joda.time.Hours;", &OrgJodaTimeHours_MIN_VALUE_,  },
    { "PARSER_", NULL, 0x1a, "Lorg.joda.time.format.PeriodFormatter;", &OrgJodaTimeHours_PARSER_,  },
    { "serialVersionUID_Hours_", "serialVersionUID", 0x1a, "J", NULL, .constantValue.asLong = OrgJodaTimeHours_serialVersionUID },
  };
  static J2ObjcClassInfo _OrgJodaTimeHours = { "Hours", "org.joda.time", NULL, 0x11, 26, methods, 13, fields, 0, NULL};
  return &_OrgJodaTimeHours;
}

@end

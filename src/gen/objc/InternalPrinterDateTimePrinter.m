//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nbransby/Documents/joda-time/src/main/java/org/joda/time/format/InternalPrinterDateTimePrinter.java
//

#include "Chronology.h"
#include "DateTimePrinter.h"
#include "DateTimePrinterInternalPrinter.h"
#include "DateTimeZone.h"
#include "IOSClass.h"
#include "InternalPrinter.h"
#include "InternalPrinterDateTimePrinter.h"
#include "ReadablePartial.h"
#include "java/io/IOException.h"
#include "java/io/Writer.h"
#include "java/lang/Appendable.h"
#include "java/lang/StringBuffer.h"
#include "java/util/Locale.h"

@implementation OrgJodaTimeFormatInternalPrinterDateTimePrinter

+ (id<OrgJodaTimeFormatDateTimePrinter>)ofWithOrgJodaTimeFormatInternalPrinter:(id<OrgJodaTimeFormatInternalPrinter>)underlying {
  return OrgJodaTimeFormatInternalPrinterDateTimePrinter_ofWithOrgJodaTimeFormatInternalPrinter_(underlying);
}

- (instancetype)initWithOrgJodaTimeFormatInternalPrinter:(id<OrgJodaTimeFormatInternalPrinter>)underlying {
  if (self = [super init]) {
    OrgJodaTimeFormatInternalPrinterDateTimePrinter_set_underlying_(self, underlying);
  }
  return self;
}

- (jint)estimatePrintedLength {
  return [((id<OrgJodaTimeFormatInternalPrinter>) nil_chk(underlying_)) estimatePrintedLength];
}

- (void)printToWithJavaLangStringBuffer:(JavaLangStringBuffer *)buf
                               withLong:(jlong)instant
              withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono
                                withInt:(jint)displayOffset
            withOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)displayZone
                     withJavaUtilLocale:(JavaUtilLocale *)locale {
  @try {
    [((id<OrgJodaTimeFormatInternalPrinter>) nil_chk(underlying_)) printToWithJavaLangAppendable:buf withLong:instant withOrgJodaTimeChronology:chrono withInt:displayOffset withOrgJodaTimeDateTimeZone:displayZone withJavaUtilLocale:locale];
  }
  @catch (JavaIoIOException *ex) {
  }
}

- (void)printToWithJavaIoWriter:(JavaIoWriter *)outArg
                       withLong:(jlong)instant
      withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono
                        withInt:(jint)displayOffset
    withOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)displayZone
             withJavaUtilLocale:(JavaUtilLocale *)locale {
  [((id<OrgJodaTimeFormatInternalPrinter>) nil_chk(underlying_)) printToWithJavaLangAppendable:outArg withLong:instant withOrgJodaTimeChronology:chrono withInt:displayOffset withOrgJodaTimeDateTimeZone:displayZone withJavaUtilLocale:locale];
}

- (void)printToWithJavaLangAppendable:(id<JavaLangAppendable>)appendable
                             withLong:(jlong)instant
            withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono
                              withInt:(jint)displayOffset
          withOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)displayZone
                   withJavaUtilLocale:(JavaUtilLocale *)locale {
  [((id<OrgJodaTimeFormatInternalPrinter>) nil_chk(underlying_)) printToWithJavaLangAppendable:appendable withLong:instant withOrgJodaTimeChronology:chrono withInt:displayOffset withOrgJodaTimeDateTimeZone:displayZone withJavaUtilLocale:locale];
}

- (void)printToWithJavaLangStringBuffer:(JavaLangStringBuffer *)buf
         withOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)partial
                     withJavaUtilLocale:(JavaUtilLocale *)locale {
  @try {
    [((id<OrgJodaTimeFormatInternalPrinter>) nil_chk(underlying_)) printToWithJavaLangAppendable:buf withOrgJodaTimeReadablePartial:partial withJavaUtilLocale:locale];
  }
  @catch (JavaIoIOException *ex) {
  }
}

- (void)printToWithJavaIoWriter:(JavaIoWriter *)outArg
 withOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)partial
             withJavaUtilLocale:(JavaUtilLocale *)locale {
  [((id<OrgJodaTimeFormatInternalPrinter>) nil_chk(underlying_)) printToWithJavaLangAppendable:outArg withOrgJodaTimeReadablePartial:partial withJavaUtilLocale:locale];
}

- (void)printToWithJavaLangAppendable:(id<JavaLangAppendable>)appendable
       withOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)partial
                   withJavaUtilLocale:(JavaUtilLocale *)locale {
  [((id<OrgJodaTimeFormatInternalPrinter>) nil_chk(underlying_)) printToWithJavaLangAppendable:appendable withOrgJodaTimeReadablePartial:partial withJavaUtilLocale:locale];
}

- (jboolean)isEqual:(id)obj {
  if (obj == self) {
    return YES;
  }
  if ([obj isKindOfClass:[OrgJodaTimeFormatInternalPrinterDateTimePrinter class]]) {
    OrgJodaTimeFormatInternalPrinterDateTimePrinter *other = (OrgJodaTimeFormatInternalPrinterDateTimePrinter *) check_class_cast(obj, [OrgJodaTimeFormatInternalPrinterDateTimePrinter class]);
    return [((id<OrgJodaTimeFormatInternalPrinter>) nil_chk(underlying_)) isEqual:((OrgJodaTimeFormatInternalPrinterDateTimePrinter *) nil_chk(other))->underlying_];
  }
  return NO;
}

- (void)dealloc {
  OrgJodaTimeFormatInternalPrinterDateTimePrinter_set_underlying_(self, nil);
  [super dealloc];
}

- (void)copyAllFieldsTo:(OrgJodaTimeFormatInternalPrinterDateTimePrinter *)other {
  [super copyAllFieldsTo:other];
  OrgJodaTimeFormatInternalPrinterDateTimePrinter_set_underlying_(other, underlying_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "ofWithOrgJodaTimeFormatInternalPrinter:", "of", "Lorg.joda.time.format.DateTimePrinter;", 0x8, NULL },
    { "initWithOrgJodaTimeFormatInternalPrinter:", "InternalPrinterDateTimePrinter", NULL, 0x2, NULL },
    { "estimatePrintedLength", NULL, "I", 0x1, NULL },
    { "printToWithJavaLangStringBuffer:withLong:withOrgJodaTimeChronology:withInt:withOrgJodaTimeDateTimeZone:withJavaUtilLocale:", "printTo", "V", 0x1, NULL },
    { "printToWithJavaIoWriter:withLong:withOrgJodaTimeChronology:withInt:withOrgJodaTimeDateTimeZone:withJavaUtilLocale:", "printTo", "V", 0x1, "Ljava.io.IOException;" },
    { "printToWithJavaLangAppendable:withLong:withOrgJodaTimeChronology:withInt:withOrgJodaTimeDateTimeZone:withJavaUtilLocale:", "printTo", "V", 0x1, "Ljava.io.IOException;" },
    { "printToWithJavaLangStringBuffer:withOrgJodaTimeReadablePartial:withJavaUtilLocale:", "printTo", "V", 0x1, NULL },
    { "printToWithJavaIoWriter:withOrgJodaTimeReadablePartial:withJavaUtilLocale:", "printTo", "V", 0x1, "Ljava.io.IOException;" },
    { "printToWithJavaLangAppendable:withOrgJodaTimeReadablePartial:withJavaUtilLocale:", "printTo", "V", 0x1, "Ljava.io.IOException;" },
    { "isEqual:", "equals", "Z", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "underlying_", NULL, 0x12, "Lorg.joda.time.format.InternalPrinter;", NULL,  },
  };
  static const J2ObjcClassInfo _OrgJodaTimeFormatInternalPrinterDateTimePrinter = { "InternalPrinterDateTimePrinter", "org.joda.time.format", NULL, 0x0, 10, methods, 1, fields, 0, NULL};
  return &_OrgJodaTimeFormatInternalPrinterDateTimePrinter;
}

@end

id<OrgJodaTimeFormatDateTimePrinter> OrgJodaTimeFormatInternalPrinterDateTimePrinter_ofWithOrgJodaTimeFormatInternalPrinter_(id<OrgJodaTimeFormatInternalPrinter> underlying) {
  OrgJodaTimeFormatInternalPrinterDateTimePrinter_init();
  if ([(id) underlying isKindOfClass:[OrgJodaTimeFormatDateTimePrinterInternalPrinter class]]) {
    return [((OrgJodaTimeFormatDateTimePrinterInternalPrinter *) nil_chk(((OrgJodaTimeFormatDateTimePrinterInternalPrinter *) check_class_cast(underlying, [OrgJodaTimeFormatDateTimePrinterInternalPrinter class])))) getUnderlying];
  }
  if ([(id) underlying conformsToProtocol: @protocol(OrgJodaTimeFormatDateTimePrinter)]) {
    return (id<OrgJodaTimeFormatDateTimePrinter>) check_protocol_cast(underlying, @protocol(OrgJodaTimeFormatDateTimePrinter));
  }
  if (underlying == nil) {
    return nil;
  }
  return [[[OrgJodaTimeFormatInternalPrinterDateTimePrinter alloc] initWithOrgJodaTimeFormatInternalPrinter:underlying] autorelease];
}

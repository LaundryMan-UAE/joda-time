//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/andrewebling/Laundrapp/Joda-time-Project/joda-time/src/main/java/org/joda/time/field/UnsupportedDurationField.java
//

#ifndef _OrgJodaTimeFieldUnsupportedDurationField_H_
#define _OrgJodaTimeFieldUnsupportedDurationField_H_

@class JavaLangUnsupportedOperationException;
@class JavaUtilHashMap;
@class OrgJodaTimeDurationFieldType;

#import "JreEmulation.h"
#include "DurationField.h"
#include "java/io/Serializable.h"

#define OrgJodaTimeFieldUnsupportedDurationField_serialVersionUID -6390301302770925357LL

/**
 @brief A placeholder implementation to use when a duration field is not supported.
 <p> UnsupportedDurationField is thread-safe and immutable.
 @author Brian S O'Neill
 @since 1.0
 */
@interface OrgJodaTimeFieldUnsupportedDurationField : OrgJodaTimeDurationField < JavaIoSerializable > {
 @public
  /**
   @brief The name of the field
   */
  OrgJodaTimeDurationFieldType *iType_;
}

/**
 @brief Gets an instance of UnsupportedDurationField for a specific named field.
 The returned instance is cached.
 @param type the type to obtain
 @return the instance
 */
+ (OrgJodaTimeFieldUnsupportedDurationField *)getInstanceWithOrgJodaTimeDurationFieldType:(OrgJodaTimeDurationFieldType *)type;

/**
 @brief Constructor.
 @param type the type to use
 */
- (instancetype)initWithOrgJodaTimeDurationFieldType:(OrgJodaTimeDurationFieldType *)type;

- (OrgJodaTimeDurationFieldType *)getType;

- (NSString *)getName;

/**
 @brief This field is not supported.
 @return false always
 */
- (BOOL)isSupported;

/**
 @brief This field is precise.
 @return true always
 */
- (BOOL)isPrecise;

/**
 @brief Always throws UnsupportedOperationException
 @throws UnsupportedOperationException
 */
- (int)getValueWithLong:(long long int)duration;

/**
 @brief Always throws UnsupportedOperationException
 @throws UnsupportedOperationException
 */
- (long long int)getValueAsLongWithLong:(long long int)duration;

/**
 @brief Always throws UnsupportedOperationException
 @throws UnsupportedOperationException
 */
- (int)getValueWithLong:(long long int)duration
               withLong:(long long int)instant;

/**
 @brief Always throws UnsupportedOperationException
 @throws UnsupportedOperationException
 */
- (long long int)getValueAsLongWithLong:(long long int)duration
                               withLong:(long long int)instant;

/**
 @brief Always throws UnsupportedOperationException
 @throws UnsupportedOperationException
 */
- (long long int)getMillisWithInt:(int)value;

/**
 @brief Always throws UnsupportedOperationException
 @throws UnsupportedOperationException
 */
- (long long int)getMillisWithLong:(long long int)value;

/**
 @brief Always throws UnsupportedOperationException
 @throws UnsupportedOperationException
 */
- (long long int)getMillisWithInt:(int)value
                         withLong:(long long int)instant;

/**
 @brief Always throws UnsupportedOperationException
 @throws UnsupportedOperationException
 */
- (long long int)getMillisWithLong:(long long int)value
                          withLong:(long long int)instant;

/**
 @brief Always throws UnsupportedOperationException
 @throws UnsupportedOperationException
 */
- (long long int)addWithLong:(long long int)instant
                     withInt:(int)value;

/**
 @brief Always throws UnsupportedOperationException
 @throws UnsupportedOperationException
 */
- (long long int)addWithLong:(long long int)instant
                    withLong:(long long int)value;

/**
 @brief Always throws UnsupportedOperationException
 @throws UnsupportedOperationException
 */
- (int)getDifferenceWithLong:(long long int)minuendInstant
                    withLong:(long long int)subtrahendInstant;

/**
 @brief Always throws UnsupportedOperationException
 @throws UnsupportedOperationException
 */
- (long long int)getDifferenceAsLongWithLong:(long long int)minuendInstant
                                    withLong:(long long int)subtrahendInstant;

/**
 @brief Always returns zero.
 @return zero always
 */
- (long long int)getUnitMillis;

/**
 @brief Always returns zero, indicating that sort order is not relevent.
 @return zero always
 */
- (int)compareToWithId:(OrgJodaTimeDurationField *)durationField;

/**
 @brief Compares this duration field to another.
 @param obj the object to compare to
 @return true if equal
 */
- (BOOL)isEqual:(id)obj;

/**
 @brief Gets a suitable hashcode.
 @return the hashcode
 */
- (NSUInteger)hash;

/**
 @brief Get a suitable debug string.
 @return debug string
 */
- (NSString *)description;

/**
 @brief Ensure proper singleton serialization
 */
- (id)readResolve;

- (JavaLangUnsupportedOperationException *)unsupported;

- (void)copyAllFieldsTo:(OrgJodaTimeFieldUnsupportedDurationField *)other;

@end

__attribute__((always_inline)) inline void OrgJodaTimeFieldUnsupportedDurationField_init() {}

J2OBJC_FIELD_SETTER(OrgJodaTimeFieldUnsupportedDurationField, iType_, OrgJodaTimeDurationFieldType *)

J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeFieldUnsupportedDurationField, serialVersionUID, long long int)

FOUNDATION_EXPORT JavaUtilHashMap *OrgJodaTimeFieldUnsupportedDurationField_cCache_;
J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeFieldUnsupportedDurationField, cCache_, JavaUtilHashMap *)
J2OBJC_STATIC_FIELD_SETTER(OrgJodaTimeFieldUnsupportedDurationField, cCache_, JavaUtilHashMap *)

#endif // _OrgJodaTimeFieldUnsupportedDurationField_H_

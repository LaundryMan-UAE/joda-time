//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/andrewebling/Laundrapp/Joda-time-Project/joda-time/src/main/java/org/joda/time/format/ISODateTimeFormat.java
//

#include "DateTimeFieldType.h"
#include "DateTimeFormatter.h"
#include "DateTimeFormatterBuilder.h"
#include "DateTimeParser.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "ISODateTimeFormat.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/Collection.h"
#include "java/util/HashSet.h"
#include "java/util/Set.h"

@implementation OrgJodaTimeFormatISODateTimeFormat

- (instancetype)init {
  return [super init];
}

+ (OrgJodaTimeFormatDateTimeFormatter *)forFieldsWithJavaUtilCollection:(id<JavaUtilCollection>)fields
                                                            withBoolean:(BOOL)extended
                                                            withBoolean:(BOOL)strictISO {
  if (fields == nil || [fields size] == 0) {
    @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:@"The fields must not be null or empty"];
  }
  id<JavaUtilSet> workingFields = [[JavaUtilHashSet alloc] initWithJavaUtilCollection:fields];
  int inputSize = [workingFields size];
  BOOL reducedPrec = NO;
  OrgJodaTimeFormatDateTimeFormatterBuilder *bld = [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init];
  if ([workingFields containsWithId:[OrgJodaTimeDateTimeFieldType monthOfYear]]) {
    reducedPrec = [OrgJodaTimeFormatISODateTimeFormat dateByMonthWithOrgJodaTimeFormatDateTimeFormatterBuilder:bld withJavaUtilCollection:workingFields withBoolean:extended withBoolean:strictISO];
  }
  else if ([workingFields containsWithId:[OrgJodaTimeDateTimeFieldType dayOfYear]]) {
    reducedPrec = [OrgJodaTimeFormatISODateTimeFormat dateByOrdinalWithOrgJodaTimeFormatDateTimeFormatterBuilder:bld withJavaUtilCollection:workingFields withBoolean:extended withBoolean:strictISO];
  }
  else if ([workingFields containsWithId:[OrgJodaTimeDateTimeFieldType weekOfWeekyear]]) {
    reducedPrec = [OrgJodaTimeFormatISODateTimeFormat dateByWeekWithOrgJodaTimeFormatDateTimeFormatterBuilder:bld withJavaUtilCollection:workingFields withBoolean:extended withBoolean:strictISO];
  }
  else if ([workingFields containsWithId:[OrgJodaTimeDateTimeFieldType dayOfMonth]]) {
    reducedPrec = [OrgJodaTimeFormatISODateTimeFormat dateByMonthWithOrgJodaTimeFormatDateTimeFormatterBuilder:bld withJavaUtilCollection:workingFields withBoolean:extended withBoolean:strictISO];
  }
  else if ([workingFields containsWithId:[OrgJodaTimeDateTimeFieldType dayOfWeek]]) {
    reducedPrec = [OrgJodaTimeFormatISODateTimeFormat dateByWeekWithOrgJodaTimeFormatDateTimeFormatterBuilder:bld withJavaUtilCollection:workingFields withBoolean:extended withBoolean:strictISO];
  }
  else if ([workingFields removeWithId:[OrgJodaTimeDateTimeFieldType year]]) {
    (void) [bld appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_get_ye_()];
    reducedPrec = YES;
  }
  else if ([workingFields removeWithId:[OrgJodaTimeDateTimeFieldType weekyear]]) {
    (void) [bld appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_get_we_()];
    reducedPrec = YES;
  }
  BOOL datePresent = ([workingFields size] < inputSize);
  [OrgJodaTimeFormatISODateTimeFormat timeWithOrgJodaTimeFormatDateTimeFormatterBuilder:bld withJavaUtilCollection:workingFields withBoolean:extended withBoolean:strictISO withBoolean:reducedPrec withBoolean:datePresent];
  if ([bld canBuildFormatter] == NO) {
    @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:[NSString stringWithFormat:@"No valid format for fields: %@", fields]];
  }
  @try {
    [((id<JavaUtilCollection>) nil_chk(fields)) retainAllWithJavaUtilCollection:workingFields];
  }
  @catch (JavaLangUnsupportedOperationException *ex) {
  }
  return [bld toFormatter];
}

+ (BOOL)dateByMonthWithOrgJodaTimeFormatDateTimeFormatterBuilder:(OrgJodaTimeFormatDateTimeFormatterBuilder *)bld
                                          withJavaUtilCollection:(id<JavaUtilCollection>)fields
                                                     withBoolean:(BOOL)extended
                                                     withBoolean:(BOOL)strictISO {
  BOOL reducedPrec = NO;
  if ([((id<JavaUtilCollection>) nil_chk(fields)) removeWithId:[OrgJodaTimeDateTimeFieldType year]]) {
    (void) [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk(bld)) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_get_ye_()];
    if ([fields removeWithId:[OrgJodaTimeDateTimeFieldType monthOfYear]]) {
      if ([fields removeWithId:[OrgJodaTimeDateTimeFieldType dayOfMonth]]) {
        [OrgJodaTimeFormatISODateTimeFormat appendSeparatorWithOrgJodaTimeFormatDateTimeFormatterBuilder:bld withBoolean:extended];
        (void) [bld appendMonthOfYearWithInt:2];
        [OrgJodaTimeFormatISODateTimeFormat appendSeparatorWithOrgJodaTimeFormatDateTimeFormatterBuilder:bld withBoolean:extended];
        (void) [bld appendDayOfMonthWithInt:2];
      }
      else {
        (void) [bld appendLiteralWithChar:'-'];
        (void) [bld appendMonthOfYearWithInt:2];
        reducedPrec = YES;
      }
    }
    else {
      if ([fields removeWithId:[OrgJodaTimeDateTimeFieldType dayOfMonth]]) {
        [OrgJodaTimeFormatISODateTimeFormat checkNotStrictISOWithJavaUtilCollection:fields withBoolean:strictISO];
        (void) [bld appendLiteralWithChar:'-'];
        (void) [bld appendLiteralWithChar:'-'];
        (void) [bld appendDayOfMonthWithInt:2];
      }
      else {
        reducedPrec = YES;
      }
    }
  }
  else if ([fields removeWithId:[OrgJodaTimeDateTimeFieldType monthOfYear]]) {
    (void) [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk(bld)) appendLiteralWithChar:'-'];
    (void) [bld appendLiteralWithChar:'-'];
    (void) [bld appendMonthOfYearWithInt:2];
    if ([fields removeWithId:[OrgJodaTimeDateTimeFieldType dayOfMonth]]) {
      [OrgJodaTimeFormatISODateTimeFormat appendSeparatorWithOrgJodaTimeFormatDateTimeFormatterBuilder:bld withBoolean:extended];
      (void) [bld appendDayOfMonthWithInt:2];
    }
    else {
      reducedPrec = YES;
    }
  }
  else if ([fields removeWithId:[OrgJodaTimeDateTimeFieldType dayOfMonth]]) {
    (void) [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk(bld)) appendLiteralWithChar:'-'];
    (void) [bld appendLiteralWithChar:'-'];
    (void) [bld appendLiteralWithChar:'-'];
    (void) [bld appendDayOfMonthWithInt:2];
  }
  return reducedPrec;
}

+ (BOOL)dateByOrdinalWithOrgJodaTimeFormatDateTimeFormatterBuilder:(OrgJodaTimeFormatDateTimeFormatterBuilder *)bld
                                            withJavaUtilCollection:(id<JavaUtilCollection>)fields
                                                       withBoolean:(BOOL)extended
                                                       withBoolean:(BOOL)strictISO {
  BOOL reducedPrec = NO;
  if ([((id<JavaUtilCollection>) nil_chk(fields)) removeWithId:[OrgJodaTimeDateTimeFieldType year]]) {
    (void) [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk(bld)) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_get_ye_()];
    if ([fields removeWithId:[OrgJodaTimeDateTimeFieldType dayOfYear]]) {
      [OrgJodaTimeFormatISODateTimeFormat appendSeparatorWithOrgJodaTimeFormatDateTimeFormatterBuilder:bld withBoolean:extended];
      (void) [bld appendDayOfYearWithInt:3];
    }
    else {
      reducedPrec = YES;
    }
  }
  else if ([fields removeWithId:[OrgJodaTimeDateTimeFieldType dayOfYear]]) {
    (void) [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk(bld)) appendLiteralWithChar:'-'];
    (void) [bld appendDayOfYearWithInt:3];
  }
  return reducedPrec;
}

+ (BOOL)dateByWeekWithOrgJodaTimeFormatDateTimeFormatterBuilder:(OrgJodaTimeFormatDateTimeFormatterBuilder *)bld
                                         withJavaUtilCollection:(id<JavaUtilCollection>)fields
                                                    withBoolean:(BOOL)extended
                                                    withBoolean:(BOOL)strictISO {
  BOOL reducedPrec = NO;
  if ([((id<JavaUtilCollection>) nil_chk(fields)) removeWithId:[OrgJodaTimeDateTimeFieldType weekyear]]) {
    (void) [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk(bld)) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_get_we_()];
    if ([fields removeWithId:[OrgJodaTimeDateTimeFieldType weekOfWeekyear]]) {
      [OrgJodaTimeFormatISODateTimeFormat appendSeparatorWithOrgJodaTimeFormatDateTimeFormatterBuilder:bld withBoolean:extended];
      (void) [bld appendLiteralWithChar:'W'];
      (void) [bld appendWeekOfWeekyearWithInt:2];
      if ([fields removeWithId:[OrgJodaTimeDateTimeFieldType dayOfWeek]]) {
        [OrgJodaTimeFormatISODateTimeFormat appendSeparatorWithOrgJodaTimeFormatDateTimeFormatterBuilder:bld withBoolean:extended];
        (void) [bld appendDayOfWeekWithInt:1];
      }
      else {
        reducedPrec = YES;
      }
    }
    else {
      if ([fields removeWithId:[OrgJodaTimeDateTimeFieldType dayOfWeek]]) {
        [OrgJodaTimeFormatISODateTimeFormat checkNotStrictISOWithJavaUtilCollection:fields withBoolean:strictISO];
        [OrgJodaTimeFormatISODateTimeFormat appendSeparatorWithOrgJodaTimeFormatDateTimeFormatterBuilder:bld withBoolean:extended];
        (void) [bld appendLiteralWithChar:'W'];
        (void) [bld appendLiteralWithChar:'-'];
        (void) [bld appendDayOfWeekWithInt:1];
      }
      else {
        reducedPrec = YES;
      }
    }
  }
  else if ([fields removeWithId:[OrgJodaTimeDateTimeFieldType weekOfWeekyear]]) {
    (void) [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk(bld)) appendLiteralWithChar:'-'];
    (void) [bld appendLiteralWithChar:'W'];
    (void) [bld appendWeekOfWeekyearWithInt:2];
    if ([fields removeWithId:[OrgJodaTimeDateTimeFieldType dayOfWeek]]) {
      [OrgJodaTimeFormatISODateTimeFormat appendSeparatorWithOrgJodaTimeFormatDateTimeFormatterBuilder:bld withBoolean:extended];
      (void) [bld appendDayOfWeekWithInt:1];
    }
    else {
      reducedPrec = YES;
    }
  }
  else if ([fields removeWithId:[OrgJodaTimeDateTimeFieldType dayOfWeek]]) {
    (void) [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk(bld)) appendLiteralWithChar:'-'];
    (void) [bld appendLiteralWithChar:'W'];
    (void) [bld appendLiteralWithChar:'-'];
    (void) [bld appendDayOfWeekWithInt:1];
  }
  return reducedPrec;
}

+ (void)timeWithOrgJodaTimeFormatDateTimeFormatterBuilder:(OrgJodaTimeFormatDateTimeFormatterBuilder *)bld
                                   withJavaUtilCollection:(id<JavaUtilCollection>)fields
                                              withBoolean:(BOOL)extended
                                              withBoolean:(BOOL)strictISO
                                              withBoolean:(BOOL)reducedPrec
                                              withBoolean:(BOOL)datePresent {
  BOOL hour = [((id<JavaUtilCollection>) nil_chk(fields)) removeWithId:[OrgJodaTimeDateTimeFieldType hourOfDay]];
  BOOL minute = [fields removeWithId:[OrgJodaTimeDateTimeFieldType minuteOfHour]];
  BOOL second = [fields removeWithId:[OrgJodaTimeDateTimeFieldType secondOfMinute]];
  BOOL milli = [fields removeWithId:[OrgJodaTimeDateTimeFieldType millisOfSecond]];
  if (!hour && !minute && !second && !milli) {
    return;
  }
  if (hour || minute || second || milli) {
    if (strictISO && reducedPrec) {
      @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:[NSString stringWithFormat:@"No valid ISO8601 format for fields because Date was reduced precision: %@", fields]];
    }
    if (datePresent) {
      (void) [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk(bld)) appendLiteralWithChar:'T'];
    }
  }
  if ((hour && minute && second) || (hour && !second && !milli)) {
  }
  else {
    if (strictISO && datePresent) {
      @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:[NSString stringWithFormat:@"No valid ISO8601 format for fields because Time was truncated: %@", fields]];
    }
    if (!hour && ((minute && second) || (minute && !milli) || second)) {
    }
    else {
      if (strictISO) {
        @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:[NSString stringWithFormat:@"No valid ISO8601 format for fields: %@", fields]];
      }
    }
  }
  if (hour) {
    (void) [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk(bld)) appendHourOfDayWithInt:2];
  }
  else if (minute || second || milli) {
    (void) [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk(bld)) appendLiteralWithChar:'-'];
  }
  if (extended && hour && minute) {
    (void) [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk(bld)) appendLiteralWithChar:':'];
  }
  if (minute) {
    (void) [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk(bld)) appendMinuteOfHourWithInt:2];
  }
  else if (second || milli) {
    (void) [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk(bld)) appendLiteralWithChar:'-'];
  }
  if (extended && minute && second) {
    (void) [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk(bld)) appendLiteralWithChar:':'];
  }
  if (second) {
    (void) [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk(bld)) appendSecondOfMinuteWithInt:2];
  }
  else if (milli) {
    (void) [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk(bld)) appendLiteralWithChar:'-'];
  }
  if (milli) {
    (void) [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk(bld)) appendLiteralWithChar:'.'];
    (void) [bld appendMillisOfSecondWithInt:3];
  }
}

+ (void)checkNotStrictISOWithJavaUtilCollection:(id<JavaUtilCollection>)fields
                                    withBoolean:(BOOL)strictISO {
  if (strictISO) {
    @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:[NSString stringWithFormat:@"No valid ISO8601 format for fields: %@", fields]];
  }
}

+ (void)appendSeparatorWithOrgJodaTimeFormatDateTimeFormatterBuilder:(OrgJodaTimeFormatDateTimeFormatterBuilder *)bld
                                                         withBoolean:(BOOL)extended {
  if (extended) {
    (void) [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk(bld)) appendLiteralWithChar:'-'];
  }
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateParser {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_dp_();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)localDateParser {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_ldp_();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateElementParser {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_dpe_();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)timeParser {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_tp_();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)localTimeParser {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_ltp_();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)timeElementParser {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_tpe_();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateTimeParser {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_dtp_();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateOptionalTimeParser {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_dotp_();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)localDateOptionalTimeParser {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_ldotp_();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)date {
  return [OrgJodaTimeFormatISODateTimeFormat yearMonthDay];
}

+ (OrgJodaTimeFormatDateTimeFormatter *)time {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_t_();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)timeNoMillis {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_tx_();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)tTime {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_tt_();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)tTimeNoMillis {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_ttx_();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateTime {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_dt_();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateTimeNoMillis {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_dtx_();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)ordinalDate {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_od_();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)ordinalDateTime {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_odt_();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)ordinalDateTimeNoMillis {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_odtx_();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)weekDate {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_wwd_();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)weekDateTime {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_wdt_();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)weekDateTimeNoMillis {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_wdtx_();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicDate {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_bd_();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicTime {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_bt_();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicTimeNoMillis {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_btx_();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicTTime {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_btt_();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicTTimeNoMillis {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_bttx_();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicDateTime {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_bdt_();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicDateTimeNoMillis {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_bdtx_();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicOrdinalDate {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_bod_();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicOrdinalDateTime {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_bodt_();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicOrdinalDateTimeNoMillis {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_bodtx_();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicWeekDate {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_bwd_();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicWeekDateTime {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_bwdt_();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicWeekDateTimeNoMillis {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_bwdtx_();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)year {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_ye_();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)yearMonth {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_ym_();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)yearMonthDay {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_ymd_();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)weekyear {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_we_();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)weekyearWeek {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_ww_();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)weekyearWeekDay {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_wwd_();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)hour {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_hde_();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)hourMinute {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_hm_();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)hourMinuteSecond {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_hms_();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)hourMinuteSecondMillis {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_hmsl_();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)hourMinuteSecondFraction {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_hmsf_();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateHour {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_dh_();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateHourMinute {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_dhm_();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateHourMinuteSecond {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_dhms_();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateHourMinuteSecondMillis {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_dhmsl_();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateHourMinuteSecondFraction {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_dhmsf_();
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "init", "ISODateTimeFormat", NULL, 0x4, NULL },
    { "forFieldsWithJavaUtilCollection:withBoolean:withBoolean:", "forFields", "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "dateByMonthWithOrgJodaTimeFormatDateTimeFormatterBuilder:withJavaUtilCollection:withBoolean:withBoolean:", "dateByMonth", "Z", 0xa, NULL },
    { "dateByOrdinalWithOrgJodaTimeFormatDateTimeFormatterBuilder:withJavaUtilCollection:withBoolean:withBoolean:", "dateByOrdinal", "Z", 0xa, NULL },
    { "dateByWeekWithOrgJodaTimeFormatDateTimeFormatterBuilder:withJavaUtilCollection:withBoolean:withBoolean:", "dateByWeek", "Z", 0xa, NULL },
    { "timeWithOrgJodaTimeFormatDateTimeFormatterBuilder:withJavaUtilCollection:withBoolean:withBoolean:withBoolean:withBoolean:", "time", "V", 0xa, NULL },
    { "checkNotStrictISOWithJavaUtilCollection:withBoolean:", "checkNotStrictISO", "V", 0xa, NULL },
    { "appendSeparatorWithOrgJodaTimeFormatDateTimeFormatterBuilder:withBoolean:", "appendSeparator", "V", 0xa, NULL },
    { "dateParser", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "localDateParser", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "dateElementParser", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "timeParser", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "localTimeParser", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "timeElementParser", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "dateTimeParser", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "dateOptionalTimeParser", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "localDateOptionalTimeParser", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "date", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "time", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "timeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "tTime", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "tTimeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "dateTime", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "dateTimeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "ordinalDate", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "ordinalDateTime", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "ordinalDateTimeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "weekDate", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "weekDateTime", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "weekDateTimeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "basicDate", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "basicTime", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "basicTimeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "basicTTime", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "basicTTimeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "basicDateTime", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "basicDateTimeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "basicOrdinalDate", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "basicOrdinalDateTime", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "basicOrdinalDateTimeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "basicWeekDate", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "basicWeekDateTime", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "basicWeekDateTimeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "year", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "yearMonth", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "yearMonthDay", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "weekyear", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "weekyearWeek", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "weekyearWeekDay", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "hour", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "hourMinute", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "hourMinuteSecond", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "hourMinuteSecondMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "hourMinuteSecondFraction", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "dateHour", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "dateHourMinute", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "dateHourMinuteSecond", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "dateHourMinuteSecondMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "dateHourMinuteSecondFraction", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
  };
  static J2ObjcClassInfo _OrgJodaTimeFormatISODateTimeFormat = { "ISODateTimeFormat", "org.joda.time.format", NULL, 0x1, 59, methods, 0, NULL, 0, NULL};
  return &_OrgJodaTimeFormatISODateTimeFormat;
}

@end

BOOL OrgJodaTimeFormatISODateTimeFormat_Constants_initialized = NO;

@implementation OrgJodaTimeFormatISODateTimeFormat_Constants

OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_ye_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_mye_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_dme_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_we_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_wwe_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_dwe_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_dye_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_hde_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_mhe_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_sme_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_fse_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_ze_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_lte_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_ym_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_ymd_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_ww_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_wwd_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_hm_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_hms_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_hmsl_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_hmsf_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_dh_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_dhm_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_dhms_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_dhmsl_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_dhmsf_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_t_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_tx_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_tt_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_ttx_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_dt_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_dtx_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_wdt_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_wdtx_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_od_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_odt_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_odtx_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_bd_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_bt_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_btx_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_btt_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_bttx_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_bdt_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_bdtx_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_bod_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_bodt_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_bodtx_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_bwd_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_bwdt_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_bwdtx_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_dpe_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_tpe_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_dp_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_ldp_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_tp_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_ltp_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_dtp_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_dotp_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_ldotp_;

+ (OrgJodaTimeFormatDateTimeFormatter *)dateParser {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_dp_ == nil) {
    id<OrgJodaTimeFormatDateTimeParser> tOffset = [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendLiteralWithChar:'T'])) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants offsetElement]])) toParser];
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants dateElementParser]])) appendOptionalWithOrgJodaTimeFormatDateTimeParser:tOffset])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dp_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)localDateParser {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_ldp_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatter *) nil_chk([OrgJodaTimeFormatISODateTimeFormat_Constants dateElementParser])) withZoneUTC];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_ldp_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateElementParser {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_dpe_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendWithOrgJodaTimeFormatDateTimePrinter:nil withOrgJodaTimeFormatDateTimeParserArray:[IOSObjectArray arrayWithObjects:(id[]){ [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants yearElement]])) appendOptionalWithOrgJodaTimeFormatDateTimeParser:[((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants monthElement]])) appendOptionalWithOrgJodaTimeFormatDateTimeParser:[((OrgJodaTimeFormatDateTimeFormatter *) nil_chk([OrgJodaTimeFormatISODateTimeFormat_Constants dayOfMonthElement])) getParser]])) toParser]])) toParser], [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants weekyearElement]])) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants weekElement]])) appendOptionalWithOrgJodaTimeFormatDateTimeParser:[((OrgJodaTimeFormatDateTimeFormatter *) nil_chk([OrgJodaTimeFormatISODateTimeFormat_Constants dayOfWeekElement])) getParser]])) toParser], [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants yearElement]])) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants dayOfYearElement]])) toParser] } count:3 type:[IOSClass classWithProtocol:@protocol(OrgJodaTimeFormatDateTimeParser)]]])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dpe_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)timeParser {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_tp_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendOptionalWithOrgJodaTimeFormatDateTimeParser:[((OrgJodaTimeFormatDateTimeFormatter *) nil_chk([OrgJodaTimeFormatISODateTimeFormat_Constants literalTElement])) getParser]])) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants timeElementParser]])) appendOptionalWithOrgJodaTimeFormatDateTimeParser:[((OrgJodaTimeFormatDateTimeFormatter *) nil_chk([OrgJodaTimeFormatISODateTimeFormat_Constants offsetElement])) getParser]])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_tp_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)localTimeParser {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_ltp_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatter *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendOptionalWithOrgJodaTimeFormatDateTimeParser:[((OrgJodaTimeFormatDateTimeFormatter *) nil_chk([OrgJodaTimeFormatISODateTimeFormat_Constants literalTElement])) getParser]])) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants timeElementParser]])) toFormatter])) withZoneUTC];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_ltp_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)timeElementParser {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_tpe_ == nil) {
    id<OrgJodaTimeFormatDateTimeParser> decimalPoint = [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendWithOrgJodaTimeFormatDateTimePrinter:nil withOrgJodaTimeFormatDateTimeParserArray:[IOSObjectArray arrayWithObjects:(id[]){ [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendLiteralWithChar:'.'])) toParser], [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendLiteralWithChar:','])) toParser] } count:2 type:[IOSClass classWithProtocol:@protocol(OrgJodaTimeFormatDateTimeParser)]]])) toParser];
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants hourElement]])) appendWithOrgJodaTimeFormatDateTimePrinter:nil withOrgJodaTimeFormatDateTimeParserArray:[IOSObjectArray arrayWithObjects:(id[]){ [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants minuteElement]])) appendWithOrgJodaTimeFormatDateTimePrinter:nil withOrgJodaTimeFormatDateTimeParserArray:[IOSObjectArray arrayWithObjects:(id[]){ [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants secondElement]])) appendOptionalWithOrgJodaTimeFormatDateTimeParser:[((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendWithOrgJodaTimeFormatDateTimeParser:decimalPoint])) appendFractionOfSecondWithInt:1 withInt:9])) toParser]])) toParser], [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendWithOrgJodaTimeFormatDateTimeParser:decimalPoint])) appendFractionOfMinuteWithInt:1 withInt:9])) toParser], nil } count:3 type:[IOSClass classWithProtocol:@protocol(OrgJodaTimeFormatDateTimeParser)]]])) toParser], [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendWithOrgJodaTimeFormatDateTimeParser:decimalPoint])) appendFractionOfHourWithInt:1 withInt:9])) toParser], nil } count:3 type:[IOSClass classWithProtocol:@protocol(OrgJodaTimeFormatDateTimeParser)]]])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_tpe_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateTimeParser {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_dtp_ == nil) {
    id<OrgJodaTimeFormatDateTimeParser> time = [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendLiteralWithChar:'T'])) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants timeElementParser]])) appendOptionalWithOrgJodaTimeFormatDateTimeParser:[((OrgJodaTimeFormatDateTimeFormatter *) nil_chk([OrgJodaTimeFormatISODateTimeFormat_Constants offsetElement])) getParser]])) toParser];
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendWithOrgJodaTimeFormatDateTimePrinter:nil withOrgJodaTimeFormatDateTimeParserArray:[IOSObjectArray arrayWithObjects:(id[]){ time, [((OrgJodaTimeFormatDateTimeFormatter *) nil_chk([OrgJodaTimeFormatISODateTimeFormat_Constants dateOptionalTimeParser])) getParser] } count:2 type:[IOSClass classWithProtocol:@protocol(OrgJodaTimeFormatDateTimeParser)]]])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dtp_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateOptionalTimeParser {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_dotp_ == nil) {
    id<OrgJodaTimeFormatDateTimeParser> timeOrOffset = [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendLiteralWithChar:'T'])) appendOptionalWithOrgJodaTimeFormatDateTimeParser:[((OrgJodaTimeFormatDateTimeFormatter *) nil_chk([OrgJodaTimeFormatISODateTimeFormat_Constants timeElementParser])) getParser]])) appendOptionalWithOrgJodaTimeFormatDateTimeParser:[((OrgJodaTimeFormatDateTimeFormatter *) nil_chk([OrgJodaTimeFormatISODateTimeFormat_Constants offsetElement])) getParser]])) toParser];
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants dateElementParser]])) appendOptionalWithOrgJodaTimeFormatDateTimeParser:timeOrOffset])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dotp_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)localDateOptionalTimeParser {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_ldotp_ == nil) {
    id<OrgJodaTimeFormatDateTimeParser> time = [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendLiteralWithChar:'T'])) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants timeElementParser]])) toParser];
    return [((OrgJodaTimeFormatDateTimeFormatter *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants dateElementParser]])) appendOptionalWithOrgJodaTimeFormatDateTimeParser:time])) toFormatter])) withZoneUTC];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_ldotp_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)time {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_t_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants hourMinuteSecondFraction]])) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants offsetElement]])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_t_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)timeNoMillis {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_tx_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants hourMinuteSecond]])) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants offsetElement]])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_tx_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)tTime {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_tt_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants literalTElement]])) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants time]])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_tt_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)tTimeNoMillis {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_ttx_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants literalTElement]])) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants timeNoMillis]])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_ttx_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateTime {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_dt_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat date]])) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants tTime]])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dt_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateTimeNoMillis {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_dtx_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat date]])) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants tTimeNoMillis]])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dtx_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)ordinalDate {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_od_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants yearElement]])) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants dayOfYearElement]])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_od_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)ordinalDateTime {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_odt_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants ordinalDate]])) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants tTime]])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_odt_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)ordinalDateTimeNoMillis {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_odtx_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants ordinalDate]])) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants tTimeNoMillis]])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_odtx_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)weekDateTime {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_wdt_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat weekDate]])) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants tTime]])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_wdt_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)weekDateTimeNoMillis {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_wdtx_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat weekDate]])) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants tTimeNoMillis]])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_wdtx_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicDate {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_bd_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendYearWithInt:4 withInt:4])) appendFixedDecimalWithOrgJodaTimeDateTimeFieldType:[OrgJodaTimeDateTimeFieldType monthOfYear] withInt:2])) appendFixedDecimalWithOrgJodaTimeDateTimeFieldType:[OrgJodaTimeDateTimeFieldType dayOfMonth] withInt:2])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_bd_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicTime {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_bt_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendFixedDecimalWithOrgJodaTimeDateTimeFieldType:[OrgJodaTimeDateTimeFieldType hourOfDay] withInt:2])) appendFixedDecimalWithOrgJodaTimeDateTimeFieldType:[OrgJodaTimeDateTimeFieldType minuteOfHour] withInt:2])) appendFixedDecimalWithOrgJodaTimeDateTimeFieldType:[OrgJodaTimeDateTimeFieldType secondOfMinute] withInt:2])) appendLiteralWithChar:'.'])) appendFractionOfSecondWithInt:3 withInt:9])) appendTimeZoneOffsetWithNSString:@"Z" withBoolean:NO withInt:2 withInt:2])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_bt_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicTimeNoMillis {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_btx_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendFixedDecimalWithOrgJodaTimeDateTimeFieldType:[OrgJodaTimeDateTimeFieldType hourOfDay] withInt:2])) appendFixedDecimalWithOrgJodaTimeDateTimeFieldType:[OrgJodaTimeDateTimeFieldType minuteOfHour] withInt:2])) appendFixedDecimalWithOrgJodaTimeDateTimeFieldType:[OrgJodaTimeDateTimeFieldType secondOfMinute] withInt:2])) appendTimeZoneOffsetWithNSString:@"Z" withBoolean:NO withInt:2 withInt:2])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_btx_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicTTime {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_btt_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants literalTElement]])) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants basicTime]])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_btt_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicTTimeNoMillis {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_bttx_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants literalTElement]])) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants basicTimeNoMillis]])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_bttx_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicDateTime {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_bdt_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants basicDate]])) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants basicTTime]])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_bdt_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicDateTimeNoMillis {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_bdtx_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants basicDate]])) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants basicTTimeNoMillis]])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_bdtx_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicOrdinalDate {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_bod_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendYearWithInt:4 withInt:4])) appendFixedDecimalWithOrgJodaTimeDateTimeFieldType:[OrgJodaTimeDateTimeFieldType dayOfYear] withInt:3])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_bod_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicOrdinalDateTime {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_bodt_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants basicOrdinalDate]])) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants basicTTime]])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_bodt_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicOrdinalDateTimeNoMillis {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_bodtx_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants basicOrdinalDate]])) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants basicTTimeNoMillis]])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_bodtx_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicWeekDate {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_bwd_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendWeekyearWithInt:4 withInt:4])) appendLiteralWithChar:'W'])) appendFixedDecimalWithOrgJodaTimeDateTimeFieldType:[OrgJodaTimeDateTimeFieldType weekOfWeekyear] withInt:2])) appendFixedDecimalWithOrgJodaTimeDateTimeFieldType:[OrgJodaTimeDateTimeFieldType dayOfWeek] withInt:1])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_bwd_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicWeekDateTime {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_bwdt_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants basicWeekDate]])) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants basicTTime]])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_bwdt_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicWeekDateTimeNoMillis {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_bwdtx_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants basicWeekDate]])) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants basicTTimeNoMillis]])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_bwdtx_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)yearMonth {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_ym_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants yearElement]])) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants monthElement]])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_ym_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)yearMonthDay {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_ymd_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants yearElement]])) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants monthElement]])) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants dayOfMonthElement]])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_ymd_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)weekyearWeek {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_ww_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants weekyearElement]])) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants weekElement]])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_ww_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)weekyearWeekDay {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_wwd_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants weekyearElement]])) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants weekElement]])) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants dayOfWeekElement]])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_wwd_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)hourMinute {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_hm_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants hourElement]])) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants minuteElement]])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_hm_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)hourMinuteSecond {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_hms_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants hourElement]])) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants minuteElement]])) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants secondElement]])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_hms_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)hourMinuteSecondMillis {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_hmsl_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants hourElement]])) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants minuteElement]])) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants secondElement]])) appendLiteralWithChar:'.'])) appendFractionOfSecondWithInt:3 withInt:3])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_hmsl_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)hourMinuteSecondFraction {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_hmsf_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants hourElement]])) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants minuteElement]])) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants secondElement]])) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants fractionElement]])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_hmsf_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateHour {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_dh_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat date]])) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants literalTElement]])) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat hour]])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dh_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateHourMinute {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_dhm_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat date]])) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants literalTElement]])) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants hourMinute]])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dhm_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateHourMinuteSecond {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_dhms_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat date]])) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants literalTElement]])) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants hourMinuteSecond]])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dhms_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateHourMinuteSecondMillis {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_dhmsl_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat date]])) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants literalTElement]])) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants hourMinuteSecondMillis]])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dhmsl_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateHourMinuteSecondFraction {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_dhmsf_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat date]])) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants literalTElement]])) appendWithOrgJodaTimeFormatDateTimeFormatter:[OrgJodaTimeFormatISODateTimeFormat_Constants hourMinuteSecondFraction]])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dhmsf_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)yearElement {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_ye_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendYearWithInt:4 withInt:9])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_ye_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)monthElement {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_mye_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendLiteralWithChar:'-'])) appendMonthOfYearWithInt:2])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_mye_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dayOfMonthElement {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_dme_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendLiteralWithChar:'-'])) appendDayOfMonthWithInt:2])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dme_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)weekyearElement {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_we_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendWeekyearWithInt:4 withInt:9])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_we_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)weekElement {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_wwe_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendLiteralWithNSString:@"-W"])) appendWeekOfWeekyearWithInt:2])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_wwe_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dayOfWeekElement {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_dwe_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendLiteralWithChar:'-'])) appendDayOfWeekWithInt:1])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dwe_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dayOfYearElement {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_dye_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendLiteralWithChar:'-'])) appendDayOfYearWithInt:3])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dye_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)literalTElement {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_lte_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendLiteralWithChar:'T'])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_lte_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)hourElement {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_hde_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendHourOfDayWithInt:2])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_hde_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)minuteElement {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_mhe_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendLiteralWithChar:':'])) appendMinuteOfHourWithInt:2])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_mhe_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)secondElement {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_sme_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendLiteralWithChar:':'])) appendSecondOfMinuteWithInt:2])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_sme_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)fractionElement {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_fse_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendLiteralWithChar:'.'])) appendFractionOfSecondWithInt:3 withInt:9])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_fse_;
}

+ (OrgJodaTimeFormatDateTimeFormatter *)offsetElement {
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_ze_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init]) appendTimeZoneOffsetWithNSString:@"Z" withBoolean:YES withInt:2 withInt:4])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_ze_;
}

- (instancetype)init {
  return [super init];
}

+ (void)initialize {
  if (self == [OrgJodaTimeFormatISODateTimeFormat_Constants class]) {
    OrgJodaTimeFormatISODateTimeFormat_Constants_ye_ = [OrgJodaTimeFormatISODateTimeFormat_Constants yearElement];
    OrgJodaTimeFormatISODateTimeFormat_Constants_mye_ = [OrgJodaTimeFormatISODateTimeFormat_Constants monthElement];
    OrgJodaTimeFormatISODateTimeFormat_Constants_dme_ = [OrgJodaTimeFormatISODateTimeFormat_Constants dayOfMonthElement];
    OrgJodaTimeFormatISODateTimeFormat_Constants_we_ = [OrgJodaTimeFormatISODateTimeFormat_Constants weekyearElement];
    OrgJodaTimeFormatISODateTimeFormat_Constants_wwe_ = [OrgJodaTimeFormatISODateTimeFormat_Constants weekElement];
    OrgJodaTimeFormatISODateTimeFormat_Constants_dwe_ = [OrgJodaTimeFormatISODateTimeFormat_Constants dayOfWeekElement];
    OrgJodaTimeFormatISODateTimeFormat_Constants_dye_ = [OrgJodaTimeFormatISODateTimeFormat_Constants dayOfYearElement];
    OrgJodaTimeFormatISODateTimeFormat_Constants_hde_ = [OrgJodaTimeFormatISODateTimeFormat_Constants hourElement];
    OrgJodaTimeFormatISODateTimeFormat_Constants_mhe_ = [OrgJodaTimeFormatISODateTimeFormat_Constants minuteElement];
    OrgJodaTimeFormatISODateTimeFormat_Constants_sme_ = [OrgJodaTimeFormatISODateTimeFormat_Constants secondElement];
    OrgJodaTimeFormatISODateTimeFormat_Constants_fse_ = [OrgJodaTimeFormatISODateTimeFormat_Constants fractionElement];
    OrgJodaTimeFormatISODateTimeFormat_Constants_ze_ = [OrgJodaTimeFormatISODateTimeFormat_Constants offsetElement];
    OrgJodaTimeFormatISODateTimeFormat_Constants_lte_ = [OrgJodaTimeFormatISODateTimeFormat_Constants literalTElement];
    OrgJodaTimeFormatISODateTimeFormat_Constants_ym_ = [OrgJodaTimeFormatISODateTimeFormat_Constants yearMonth];
    OrgJodaTimeFormatISODateTimeFormat_Constants_ymd_ = [OrgJodaTimeFormatISODateTimeFormat_Constants yearMonthDay];
    OrgJodaTimeFormatISODateTimeFormat_Constants_ww_ = [OrgJodaTimeFormatISODateTimeFormat_Constants weekyearWeek];
    OrgJodaTimeFormatISODateTimeFormat_Constants_wwd_ = [OrgJodaTimeFormatISODateTimeFormat_Constants weekyearWeekDay];
    OrgJodaTimeFormatISODateTimeFormat_Constants_hm_ = [OrgJodaTimeFormatISODateTimeFormat_Constants hourMinute];
    OrgJodaTimeFormatISODateTimeFormat_Constants_hms_ = [OrgJodaTimeFormatISODateTimeFormat_Constants hourMinuteSecond];
    OrgJodaTimeFormatISODateTimeFormat_Constants_hmsl_ = [OrgJodaTimeFormatISODateTimeFormat_Constants hourMinuteSecondMillis];
    OrgJodaTimeFormatISODateTimeFormat_Constants_hmsf_ = [OrgJodaTimeFormatISODateTimeFormat_Constants hourMinuteSecondFraction];
    OrgJodaTimeFormatISODateTimeFormat_Constants_dh_ = [OrgJodaTimeFormatISODateTimeFormat_Constants dateHour];
    OrgJodaTimeFormatISODateTimeFormat_Constants_dhm_ = [OrgJodaTimeFormatISODateTimeFormat_Constants dateHourMinute];
    OrgJodaTimeFormatISODateTimeFormat_Constants_dhms_ = [OrgJodaTimeFormatISODateTimeFormat_Constants dateHourMinuteSecond];
    OrgJodaTimeFormatISODateTimeFormat_Constants_dhmsl_ = [OrgJodaTimeFormatISODateTimeFormat_Constants dateHourMinuteSecondMillis];
    OrgJodaTimeFormatISODateTimeFormat_Constants_dhmsf_ = [OrgJodaTimeFormatISODateTimeFormat_Constants dateHourMinuteSecondFraction];
    OrgJodaTimeFormatISODateTimeFormat_Constants_t_ = [OrgJodaTimeFormatISODateTimeFormat_Constants time];
    OrgJodaTimeFormatISODateTimeFormat_Constants_tx_ = [OrgJodaTimeFormatISODateTimeFormat_Constants timeNoMillis];
    OrgJodaTimeFormatISODateTimeFormat_Constants_tt_ = [OrgJodaTimeFormatISODateTimeFormat_Constants tTime];
    OrgJodaTimeFormatISODateTimeFormat_Constants_ttx_ = [OrgJodaTimeFormatISODateTimeFormat_Constants tTimeNoMillis];
    OrgJodaTimeFormatISODateTimeFormat_Constants_dt_ = [OrgJodaTimeFormatISODateTimeFormat_Constants dateTime];
    OrgJodaTimeFormatISODateTimeFormat_Constants_dtx_ = [OrgJodaTimeFormatISODateTimeFormat_Constants dateTimeNoMillis];
    OrgJodaTimeFormatISODateTimeFormat_Constants_wdt_ = [OrgJodaTimeFormatISODateTimeFormat_Constants weekDateTime];
    OrgJodaTimeFormatISODateTimeFormat_Constants_wdtx_ = [OrgJodaTimeFormatISODateTimeFormat_Constants weekDateTimeNoMillis];
    OrgJodaTimeFormatISODateTimeFormat_Constants_od_ = [OrgJodaTimeFormatISODateTimeFormat_Constants ordinalDate];
    OrgJodaTimeFormatISODateTimeFormat_Constants_odt_ = [OrgJodaTimeFormatISODateTimeFormat_Constants ordinalDateTime];
    OrgJodaTimeFormatISODateTimeFormat_Constants_odtx_ = [OrgJodaTimeFormatISODateTimeFormat_Constants ordinalDateTimeNoMillis];
    OrgJodaTimeFormatISODateTimeFormat_Constants_bd_ = [OrgJodaTimeFormatISODateTimeFormat_Constants basicDate];
    OrgJodaTimeFormatISODateTimeFormat_Constants_bt_ = [OrgJodaTimeFormatISODateTimeFormat_Constants basicTime];
    OrgJodaTimeFormatISODateTimeFormat_Constants_btx_ = [OrgJodaTimeFormatISODateTimeFormat_Constants basicTimeNoMillis];
    OrgJodaTimeFormatISODateTimeFormat_Constants_btt_ = [OrgJodaTimeFormatISODateTimeFormat_Constants basicTTime];
    OrgJodaTimeFormatISODateTimeFormat_Constants_bttx_ = [OrgJodaTimeFormatISODateTimeFormat_Constants basicTTimeNoMillis];
    OrgJodaTimeFormatISODateTimeFormat_Constants_bdt_ = [OrgJodaTimeFormatISODateTimeFormat_Constants basicDateTime];
    OrgJodaTimeFormatISODateTimeFormat_Constants_bdtx_ = [OrgJodaTimeFormatISODateTimeFormat_Constants basicDateTimeNoMillis];
    OrgJodaTimeFormatISODateTimeFormat_Constants_bod_ = [OrgJodaTimeFormatISODateTimeFormat_Constants basicOrdinalDate];
    OrgJodaTimeFormatISODateTimeFormat_Constants_bodt_ = [OrgJodaTimeFormatISODateTimeFormat_Constants basicOrdinalDateTime];
    OrgJodaTimeFormatISODateTimeFormat_Constants_bodtx_ = [OrgJodaTimeFormatISODateTimeFormat_Constants basicOrdinalDateTimeNoMillis];
    OrgJodaTimeFormatISODateTimeFormat_Constants_bwd_ = [OrgJodaTimeFormatISODateTimeFormat_Constants basicWeekDate];
    OrgJodaTimeFormatISODateTimeFormat_Constants_bwdt_ = [OrgJodaTimeFormatISODateTimeFormat_Constants basicWeekDateTime];
    OrgJodaTimeFormatISODateTimeFormat_Constants_bwdtx_ = [OrgJodaTimeFormatISODateTimeFormat_Constants basicWeekDateTimeNoMillis];
    OrgJodaTimeFormatISODateTimeFormat_Constants_dpe_ = [OrgJodaTimeFormatISODateTimeFormat_Constants dateElementParser];
    OrgJodaTimeFormatISODateTimeFormat_Constants_tpe_ = [OrgJodaTimeFormatISODateTimeFormat_Constants timeElementParser];
    OrgJodaTimeFormatISODateTimeFormat_Constants_dp_ = [OrgJodaTimeFormatISODateTimeFormat_Constants dateParser];
    OrgJodaTimeFormatISODateTimeFormat_Constants_ldp_ = [OrgJodaTimeFormatISODateTimeFormat_Constants localDateParser];
    OrgJodaTimeFormatISODateTimeFormat_Constants_tp_ = [OrgJodaTimeFormatISODateTimeFormat_Constants timeParser];
    OrgJodaTimeFormatISODateTimeFormat_Constants_ltp_ = [OrgJodaTimeFormatISODateTimeFormat_Constants localTimeParser];
    OrgJodaTimeFormatISODateTimeFormat_Constants_dtp_ = [OrgJodaTimeFormatISODateTimeFormat_Constants dateTimeParser];
    OrgJodaTimeFormatISODateTimeFormat_Constants_dotp_ = [OrgJodaTimeFormatISODateTimeFormat_Constants dateOptionalTimeParser];
    OrgJodaTimeFormatISODateTimeFormat_Constants_ldotp_ = [OrgJodaTimeFormatISODateTimeFormat_Constants localDateOptionalTimeParser];
    OrgJodaTimeFormatISODateTimeFormat_Constants_initialized = YES;
  }
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "dateParser", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "localDateParser", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "dateElementParser", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "timeParser", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "localTimeParser", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "timeElementParser", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "dateTimeParser", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "dateOptionalTimeParser", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "localDateOptionalTimeParser", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "time", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "timeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "tTime", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "tTimeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "dateTime", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "dateTimeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "ordinalDate", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "ordinalDateTime", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "ordinalDateTimeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "weekDateTime", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "weekDateTimeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "basicDate", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "basicTime", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "basicTimeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "basicTTime", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "basicTTimeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "basicDateTime", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "basicDateTimeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "basicOrdinalDate", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "basicOrdinalDateTime", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "basicOrdinalDateTimeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "basicWeekDate", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "basicWeekDateTime", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "basicWeekDateTimeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "yearMonth", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "yearMonthDay", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "weekyearWeek", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "weekyearWeekDay", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "hourMinute", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "hourMinuteSecond", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "hourMinuteSecondMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "hourMinuteSecondFraction", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "dateHour", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "dateHourMinute", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "dateHourMinuteSecond", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "dateHourMinuteSecondMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "dateHourMinuteSecondFraction", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "yearElement", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "monthElement", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "dayOfMonthElement", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "weekyearElement", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "weekElement", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "dayOfWeekElement", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "dayOfYearElement", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "literalTElement", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "hourElement", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "minuteElement", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "secondElement", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "fractionElement", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "offsetElement", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "init", NULL, NULL, 0x0, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "ye_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_ye_,  },
    { "mye_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_mye_,  },
    { "dme_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_dme_,  },
    { "we_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_we_,  },
    { "wwe_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_wwe_,  },
    { "dwe_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_dwe_,  },
    { "dye_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_dye_,  },
    { "hde_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_hde_,  },
    { "mhe_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_mhe_,  },
    { "sme_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_sme_,  },
    { "fse_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_fse_,  },
    { "ze_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_ze_,  },
    { "lte_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_lte_,  },
    { "ym_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_ym_,  },
    { "ymd_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_ymd_,  },
    { "ww_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_ww_,  },
    { "wwd_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_wwd_,  },
    { "hm_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_hm_,  },
    { "hms_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_hms_,  },
    { "hmsl_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_hmsl_,  },
    { "hmsf_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_hmsf_,  },
    { "dh_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_dh_,  },
    { "dhm_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_dhm_,  },
    { "dhms_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_dhms_,  },
    { "dhmsl_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_dhmsl_,  },
    { "dhmsf_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_dhmsf_,  },
    { "t_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_t_,  },
    { "tx_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_tx_,  },
    { "tt_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_tt_,  },
    { "ttx_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_ttx_,  },
    { "dt_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_dt_,  },
    { "dtx_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_dtx_,  },
    { "wdt_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_wdt_,  },
    { "wdtx_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_wdtx_,  },
    { "od_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_od_,  },
    { "odt_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_odt_,  },
    { "odtx_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_odtx_,  },
    { "bd_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_bd_,  },
    { "bt_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_bt_,  },
    { "btx_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_btx_,  },
    { "btt_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_btt_,  },
    { "bttx_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_bttx_,  },
    { "bdt_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_bdt_,  },
    { "bdtx_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_bdtx_,  },
    { "bod_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_bod_,  },
    { "bodt_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_bodt_,  },
    { "bodtx_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_bodtx_,  },
    { "bwd_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_bwd_,  },
    { "bwdt_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_bwdt_,  },
    { "bwdtx_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_bwdtx_,  },
    { "dpe_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_dpe_,  },
    { "tpe_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_tpe_,  },
    { "dp_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_dp_,  },
    { "ldp_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_ldp_,  },
    { "tp_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_tp_,  },
    { "ltp_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_ltp_,  },
    { "dtp_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_dtp_,  },
    { "dotp_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_dotp_,  },
    { "ldotp_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_ldotp_,  },
  };
  static J2ObjcClassInfo _OrgJodaTimeFormatISODateTimeFormat_Constants = { "Constants", "org.joda.time.format", "ISODateTimeFormat", 0x18, 60, methods, 59, fields, 0, NULL};
  return &_OrgJodaTimeFormatISODateTimeFormat_Constants;
}

@end

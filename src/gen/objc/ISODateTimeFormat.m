//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nbransby/Documents/joda-time/src/main/java/org/joda/time/format/ISODateTimeFormat.java
//

#include "DateTimeFieldType.h"
#include "DateTimeFormatter.h"
#include "DateTimeFormatterBuilder.h"
#include "DateTimeParser.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "ISODateTimeFormat.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/Collection.h"
#include "java/util/HashSet.h"
#include "java/util/Set.h"

__attribute__((unused)) static jboolean OrgJodaTimeFormatISODateTimeFormat_dateByMonthWithOrgJodaTimeFormatDateTimeFormatterBuilder_withJavaUtilCollection_withBoolean_withBoolean_(OrgJodaTimeFormatDateTimeFormatterBuilder *bld, id<JavaUtilCollection> fields, jboolean extended, jboolean strictISO);
__attribute__((unused)) static jboolean OrgJodaTimeFormatISODateTimeFormat_dateByOrdinalWithOrgJodaTimeFormatDateTimeFormatterBuilder_withJavaUtilCollection_withBoolean_withBoolean_(OrgJodaTimeFormatDateTimeFormatterBuilder *bld, id<JavaUtilCollection> fields, jboolean extended, jboolean strictISO);
__attribute__((unused)) static jboolean OrgJodaTimeFormatISODateTimeFormat_dateByWeekWithOrgJodaTimeFormatDateTimeFormatterBuilder_withJavaUtilCollection_withBoolean_withBoolean_(OrgJodaTimeFormatDateTimeFormatterBuilder *bld, id<JavaUtilCollection> fields, jboolean extended, jboolean strictISO);
__attribute__((unused)) static void OrgJodaTimeFormatISODateTimeFormat_timeWithOrgJodaTimeFormatDateTimeFormatterBuilder_withJavaUtilCollection_withBoolean_withBoolean_withBoolean_withBoolean_(OrgJodaTimeFormatDateTimeFormatterBuilder *bld, id<JavaUtilCollection> fields, jboolean extended, jboolean strictISO, jboolean reducedPrec, jboolean datePresent);
__attribute__((unused)) static void OrgJodaTimeFormatISODateTimeFormat_checkNotStrictISOWithJavaUtilCollection_withBoolean_(id<JavaUtilCollection> fields, jboolean strictISO);
__attribute__((unused)) static void OrgJodaTimeFormatISODateTimeFormat_appendSeparatorWithOrgJodaTimeFormatDateTimeFormatterBuilder_withBoolean_(OrgJodaTimeFormatDateTimeFormatterBuilder *bld, jboolean extended);
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dateParser();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_localDateParser();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dateElementParser();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_timeParser();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_localTimeParser();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_timeElementParser();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dateTimeParser();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dateOptionalTimeParser();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_localDateOptionalTimeParser();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_time();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_timeNoMillis();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_tTime();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_tTimeNoMillis();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dateTime();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dateTimeNoMillis();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_ordinalDate();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_ordinalDateTime();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_ordinalDateTimeNoMillis();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_weekDateTime();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_weekDateTimeNoMillis();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_basicDate();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_basicTime();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_basicTimeNoMillis();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_basicTTime();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_basicTTimeNoMillis();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_basicDateTime();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_basicDateTimeNoMillis();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_basicOrdinalDate();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_basicOrdinalDateTime();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_basicOrdinalDateTimeNoMillis();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_basicWeekDate();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_basicWeekDateTime();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_basicWeekDateTimeNoMillis();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_yearMonth();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_yearMonthDay();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_weekyearWeek();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_weekyearWeekDay();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_hourMinute();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_hourMinuteSecond();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_hourMinuteSecondMillis();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_hourMinuteSecondFraction();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dateHour();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dateHourMinute();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dateHourMinuteSecond();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dateHourMinuteSecondMillis();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dateHourMinuteSecondFraction();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_yearElement();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_monthElement();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dayOfMonthElement();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_weekyearElement();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_weekElement();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dayOfWeekElement();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dayOfYearElement();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_literalTElement();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_hourElement();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_minuteElement();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_secondElement();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_fractionElement();
__attribute__((unused)) static OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_offsetElement();

@implementation OrgJodaTimeFormatISODateTimeFormat

- (instancetype)init {
  return [super init];
}

+ (OrgJodaTimeFormatDateTimeFormatter *)forFieldsWithJavaUtilCollection:(id<JavaUtilCollection>)fields
                                                            withBoolean:(jboolean)extended
                                                            withBoolean:(jboolean)strictISO {
  return OrgJodaTimeFormatISODateTimeFormat_forFieldsWithJavaUtilCollection_withBoolean_withBoolean_(fields, extended, strictISO);
}

+ (jboolean)dateByMonthWithOrgJodaTimeFormatDateTimeFormatterBuilder:(OrgJodaTimeFormatDateTimeFormatterBuilder *)bld
                                              withJavaUtilCollection:(id<JavaUtilCollection>)fields
                                                         withBoolean:(jboolean)extended
                                                         withBoolean:(jboolean)strictISO {
  return OrgJodaTimeFormatISODateTimeFormat_dateByMonthWithOrgJodaTimeFormatDateTimeFormatterBuilder_withJavaUtilCollection_withBoolean_withBoolean_(bld, fields, extended, strictISO);
}

+ (jboolean)dateByOrdinalWithOrgJodaTimeFormatDateTimeFormatterBuilder:(OrgJodaTimeFormatDateTimeFormatterBuilder *)bld
                                                withJavaUtilCollection:(id<JavaUtilCollection>)fields
                                                           withBoolean:(jboolean)extended
                                                           withBoolean:(jboolean)strictISO {
  return OrgJodaTimeFormatISODateTimeFormat_dateByOrdinalWithOrgJodaTimeFormatDateTimeFormatterBuilder_withJavaUtilCollection_withBoolean_withBoolean_(bld, fields, extended, strictISO);
}

+ (jboolean)dateByWeekWithOrgJodaTimeFormatDateTimeFormatterBuilder:(OrgJodaTimeFormatDateTimeFormatterBuilder *)bld
                                             withJavaUtilCollection:(id<JavaUtilCollection>)fields
                                                        withBoolean:(jboolean)extended
                                                        withBoolean:(jboolean)strictISO {
  return OrgJodaTimeFormatISODateTimeFormat_dateByWeekWithOrgJodaTimeFormatDateTimeFormatterBuilder_withJavaUtilCollection_withBoolean_withBoolean_(bld, fields, extended, strictISO);
}

+ (void)timeWithOrgJodaTimeFormatDateTimeFormatterBuilder:(OrgJodaTimeFormatDateTimeFormatterBuilder *)bld
                                   withJavaUtilCollection:(id<JavaUtilCollection>)fields
                                              withBoolean:(jboolean)extended
                                              withBoolean:(jboolean)strictISO
                                              withBoolean:(jboolean)reducedPrec
                                              withBoolean:(jboolean)datePresent {
  OrgJodaTimeFormatISODateTimeFormat_timeWithOrgJodaTimeFormatDateTimeFormatterBuilder_withJavaUtilCollection_withBoolean_withBoolean_withBoolean_withBoolean_(bld, fields, extended, strictISO, reducedPrec, datePresent);
}

+ (void)checkNotStrictISOWithJavaUtilCollection:(id<JavaUtilCollection>)fields
                                    withBoolean:(jboolean)strictISO {
  OrgJodaTimeFormatISODateTimeFormat_checkNotStrictISOWithJavaUtilCollection_withBoolean_(fields, strictISO);
}

+ (void)appendSeparatorWithOrgJodaTimeFormatDateTimeFormatterBuilder:(OrgJodaTimeFormatDateTimeFormatterBuilder *)bld
                                                         withBoolean:(jboolean)extended {
  OrgJodaTimeFormatISODateTimeFormat_appendSeparatorWithOrgJodaTimeFormatDateTimeFormatterBuilder_withBoolean_(bld, extended);
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateParser {
  return OrgJodaTimeFormatISODateTimeFormat_dateParser();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)localDateParser {
  return OrgJodaTimeFormatISODateTimeFormat_localDateParser();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateElementParser {
  return OrgJodaTimeFormatISODateTimeFormat_dateElementParser();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)timeParser {
  return OrgJodaTimeFormatISODateTimeFormat_timeParser();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)localTimeParser {
  return OrgJodaTimeFormatISODateTimeFormat_localTimeParser();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)timeElementParser {
  return OrgJodaTimeFormatISODateTimeFormat_timeElementParser();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateTimeParser {
  return OrgJodaTimeFormatISODateTimeFormat_dateTimeParser();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateOptionalTimeParser {
  return OrgJodaTimeFormatISODateTimeFormat_dateOptionalTimeParser();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)localDateOptionalTimeParser {
  return OrgJodaTimeFormatISODateTimeFormat_localDateOptionalTimeParser();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)date {
  return OrgJodaTimeFormatISODateTimeFormat_date();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)time {
  return OrgJodaTimeFormatISODateTimeFormat_time();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)timeNoMillis {
  return OrgJodaTimeFormatISODateTimeFormat_timeNoMillis();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)tTime {
  return OrgJodaTimeFormatISODateTimeFormat_tTime();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)tTimeNoMillis {
  return OrgJodaTimeFormatISODateTimeFormat_tTimeNoMillis();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateTime {
  return OrgJodaTimeFormatISODateTimeFormat_dateTime();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateTimeNoMillis {
  return OrgJodaTimeFormatISODateTimeFormat_dateTimeNoMillis();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)ordinalDate {
  return OrgJodaTimeFormatISODateTimeFormat_ordinalDate();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)ordinalDateTime {
  return OrgJodaTimeFormatISODateTimeFormat_ordinalDateTime();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)ordinalDateTimeNoMillis {
  return OrgJodaTimeFormatISODateTimeFormat_ordinalDateTimeNoMillis();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)weekDate {
  return OrgJodaTimeFormatISODateTimeFormat_weekDate();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)weekDateTime {
  return OrgJodaTimeFormatISODateTimeFormat_weekDateTime();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)weekDateTimeNoMillis {
  return OrgJodaTimeFormatISODateTimeFormat_weekDateTimeNoMillis();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicDate {
  return OrgJodaTimeFormatISODateTimeFormat_basicDate();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicTime {
  return OrgJodaTimeFormatISODateTimeFormat_basicTime();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicTimeNoMillis {
  return OrgJodaTimeFormatISODateTimeFormat_basicTimeNoMillis();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicTTime {
  return OrgJodaTimeFormatISODateTimeFormat_basicTTime();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicTTimeNoMillis {
  return OrgJodaTimeFormatISODateTimeFormat_basicTTimeNoMillis();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicDateTime {
  return OrgJodaTimeFormatISODateTimeFormat_basicDateTime();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicDateTimeNoMillis {
  return OrgJodaTimeFormatISODateTimeFormat_basicDateTimeNoMillis();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicOrdinalDate {
  return OrgJodaTimeFormatISODateTimeFormat_basicOrdinalDate();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicOrdinalDateTime {
  return OrgJodaTimeFormatISODateTimeFormat_basicOrdinalDateTime();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicOrdinalDateTimeNoMillis {
  return OrgJodaTimeFormatISODateTimeFormat_basicOrdinalDateTimeNoMillis();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicWeekDate {
  return OrgJodaTimeFormatISODateTimeFormat_basicWeekDate();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicWeekDateTime {
  return OrgJodaTimeFormatISODateTimeFormat_basicWeekDateTime();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicWeekDateTimeNoMillis {
  return OrgJodaTimeFormatISODateTimeFormat_basicWeekDateTimeNoMillis();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)year {
  return OrgJodaTimeFormatISODateTimeFormat_year();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)yearMonth {
  return OrgJodaTimeFormatISODateTimeFormat_yearMonth();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)yearMonthDay {
  return OrgJodaTimeFormatISODateTimeFormat_yearMonthDay();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)weekyear {
  return OrgJodaTimeFormatISODateTimeFormat_weekyear();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)weekyearWeek {
  return OrgJodaTimeFormatISODateTimeFormat_weekyearWeek();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)weekyearWeekDay {
  return OrgJodaTimeFormatISODateTimeFormat_weekyearWeekDay();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)hour {
  return OrgJodaTimeFormatISODateTimeFormat_hour();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)hourMinute {
  return OrgJodaTimeFormatISODateTimeFormat_hourMinute();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)hourMinuteSecond {
  return OrgJodaTimeFormatISODateTimeFormat_hourMinuteSecond();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)hourMinuteSecondMillis {
  return OrgJodaTimeFormatISODateTimeFormat_hourMinuteSecondMillis();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)hourMinuteSecondFraction {
  return OrgJodaTimeFormatISODateTimeFormat_hourMinuteSecondFraction();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateHour {
  return OrgJodaTimeFormatISODateTimeFormat_dateHour();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateHourMinute {
  return OrgJodaTimeFormatISODateTimeFormat_dateHourMinute();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateHourMinuteSecond {
  return OrgJodaTimeFormatISODateTimeFormat_dateHourMinuteSecond();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateHourMinuteSecondMillis {
  return OrgJodaTimeFormatISODateTimeFormat_dateHourMinuteSecondMillis();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateHourMinuteSecondFraction {
  return OrgJodaTimeFormatISODateTimeFormat_dateHourMinuteSecondFraction();
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "ISODateTimeFormat", NULL, 0x4, NULL },
    { "forFieldsWithJavaUtilCollection:withBoolean:withBoolean:", "forFields", "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "dateByMonthWithOrgJodaTimeFormatDateTimeFormatterBuilder:withJavaUtilCollection:withBoolean:withBoolean:", "dateByMonth", "Z", 0xa, NULL },
    { "dateByOrdinalWithOrgJodaTimeFormatDateTimeFormatterBuilder:withJavaUtilCollection:withBoolean:withBoolean:", "dateByOrdinal", "Z", 0xa, NULL },
    { "dateByWeekWithOrgJodaTimeFormatDateTimeFormatterBuilder:withJavaUtilCollection:withBoolean:withBoolean:", "dateByWeek", "Z", 0xa, NULL },
    { "timeWithOrgJodaTimeFormatDateTimeFormatterBuilder:withJavaUtilCollection:withBoolean:withBoolean:withBoolean:withBoolean:", "time", "V", 0xa, NULL },
    { "checkNotStrictISOWithJavaUtilCollection:withBoolean:", "checkNotStrictISO", "V", 0xa, NULL },
    { "appendSeparatorWithOrgJodaTimeFormatDateTimeFormatterBuilder:withBoolean:", "appendSeparator", "V", 0xa, NULL },
    { "dateParser", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "localDateParser", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "dateElementParser", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "timeParser", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "localTimeParser", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "timeElementParser", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "dateTimeParser", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "dateOptionalTimeParser", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "localDateOptionalTimeParser", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "date", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "time", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "timeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "tTime", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "tTimeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "dateTime", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "dateTimeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "ordinalDate", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "ordinalDateTime", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "ordinalDateTimeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "weekDate", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "weekDateTime", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "weekDateTimeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "basicDate", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "basicTime", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "basicTimeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "basicTTime", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "basicTTimeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "basicDateTime", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "basicDateTimeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "basicOrdinalDate", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "basicOrdinalDateTime", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "basicOrdinalDateTimeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "basicWeekDate", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "basicWeekDateTime", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "basicWeekDateTimeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "year", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "yearMonth", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "yearMonthDay", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "weekyear", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "weekyearWeek", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "weekyearWeekDay", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "hour", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "hourMinute", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "hourMinuteSecond", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "hourMinuteSecondMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "hourMinuteSecondFraction", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "dateHour", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "dateHourMinute", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "dateHourMinuteSecond", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "dateHourMinuteSecondMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
    { "dateHourMinuteSecondFraction", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0x9, NULL },
  };
  static const J2ObjcClassInfo _OrgJodaTimeFormatISODateTimeFormat = { "ISODateTimeFormat", "org.joda.time.format", NULL, 0x1, 59, methods, 0, NULL, 0, NULL};
  return &_OrgJodaTimeFormatISODateTimeFormat;
}

@end

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_forFieldsWithJavaUtilCollection_withBoolean_withBoolean_(id<JavaUtilCollection> fields, jboolean extended, jboolean strictISO) {
  OrgJodaTimeFormatISODateTimeFormat_init();
  if (fields == nil || [fields size] == 0) {
    @throw [[[JavaLangIllegalArgumentException alloc] initWithNSString:@"The fields must not be null or empty"] autorelease];
  }
  id<JavaUtilSet> workingFields = [[[JavaUtilHashSet alloc] initWithJavaUtilCollection:fields] autorelease];
  jint inputSize = [workingFields size];
  jboolean reducedPrec = NO;
  OrgJodaTimeFormatDateTimeFormatterBuilder *bld = [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease];
  if ([workingFields containsWithId:OrgJodaTimeDateTimeFieldType_monthOfYear()]) {
    reducedPrec = OrgJodaTimeFormatISODateTimeFormat_dateByMonthWithOrgJodaTimeFormatDateTimeFormatterBuilder_withJavaUtilCollection_withBoolean_withBoolean_(bld, workingFields, extended, strictISO);
  }
  else if ([workingFields containsWithId:OrgJodaTimeDateTimeFieldType_dayOfYear()]) {
    reducedPrec = OrgJodaTimeFormatISODateTimeFormat_dateByOrdinalWithOrgJodaTimeFormatDateTimeFormatterBuilder_withJavaUtilCollection_withBoolean_withBoolean_(bld, workingFields, extended, strictISO);
  }
  else if ([workingFields containsWithId:OrgJodaTimeDateTimeFieldType_weekOfWeekyear()]) {
    reducedPrec = OrgJodaTimeFormatISODateTimeFormat_dateByWeekWithOrgJodaTimeFormatDateTimeFormatterBuilder_withJavaUtilCollection_withBoolean_withBoolean_(bld, workingFields, extended, strictISO);
  }
  else if ([workingFields containsWithId:OrgJodaTimeDateTimeFieldType_dayOfMonth()]) {
    reducedPrec = OrgJodaTimeFormatISODateTimeFormat_dateByMonthWithOrgJodaTimeFormatDateTimeFormatterBuilder_withJavaUtilCollection_withBoolean_withBoolean_(bld, workingFields, extended, strictISO);
  }
  else if ([workingFields containsWithId:OrgJodaTimeDateTimeFieldType_dayOfWeek()]) {
    reducedPrec = OrgJodaTimeFormatISODateTimeFormat_dateByWeekWithOrgJodaTimeFormatDateTimeFormatterBuilder_withJavaUtilCollection_withBoolean_withBoolean_(bld, workingFields, extended, strictISO);
  }
  else if ([workingFields removeWithId:OrgJodaTimeDateTimeFieldType_year()]) {
    [bld appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_get_ye_()];
    reducedPrec = YES;
  }
  else if ([workingFields removeWithId:OrgJodaTimeDateTimeFieldType_weekyear()]) {
    [bld appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_get_we_()];
    reducedPrec = YES;
  }
  jboolean datePresent = ([workingFields size] < inputSize);
  OrgJodaTimeFormatISODateTimeFormat_timeWithOrgJodaTimeFormatDateTimeFormatterBuilder_withJavaUtilCollection_withBoolean_withBoolean_withBoolean_withBoolean_(bld, workingFields, extended, strictISO, reducedPrec, datePresent);
  if ([bld canBuildFormatter] == NO) {
    @throw [[[JavaLangIllegalArgumentException alloc] initWithNSString:JreStrcat("$@", @"No valid format for fields: ", fields)] autorelease];
  }
  @try {
    [((id<JavaUtilCollection>) nil_chk(fields)) retainAllWithJavaUtilCollection:workingFields];
  }
  @catch (JavaLangUnsupportedOperationException *ex) {
  }
  return [bld toFormatter];
}

jboolean OrgJodaTimeFormatISODateTimeFormat_dateByMonthWithOrgJodaTimeFormatDateTimeFormatterBuilder_withJavaUtilCollection_withBoolean_withBoolean_(OrgJodaTimeFormatDateTimeFormatterBuilder *bld, id<JavaUtilCollection> fields, jboolean extended, jboolean strictISO) {
  OrgJodaTimeFormatISODateTimeFormat_init();
  jboolean reducedPrec = NO;
  if ([((id<JavaUtilCollection>) nil_chk(fields)) removeWithId:OrgJodaTimeDateTimeFieldType_year()]) {
    [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk(bld)) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_get_ye_()];
    if ([fields removeWithId:OrgJodaTimeDateTimeFieldType_monthOfYear()]) {
      if ([fields removeWithId:OrgJodaTimeDateTimeFieldType_dayOfMonth()]) {
        OrgJodaTimeFormatISODateTimeFormat_appendSeparatorWithOrgJodaTimeFormatDateTimeFormatterBuilder_withBoolean_(bld, extended);
        [bld appendMonthOfYearWithInt:2];
        OrgJodaTimeFormatISODateTimeFormat_appendSeparatorWithOrgJodaTimeFormatDateTimeFormatterBuilder_withBoolean_(bld, extended);
        [bld appendDayOfMonthWithInt:2];
      }
      else {
        [bld appendLiteralWithChar:'-'];
        [bld appendMonthOfYearWithInt:2];
        reducedPrec = YES;
      }
    }
    else {
      if ([fields removeWithId:OrgJodaTimeDateTimeFieldType_dayOfMonth()]) {
        OrgJodaTimeFormatISODateTimeFormat_checkNotStrictISOWithJavaUtilCollection_withBoolean_(fields, strictISO);
        [bld appendLiteralWithChar:'-'];
        [bld appendLiteralWithChar:'-'];
        [bld appendDayOfMonthWithInt:2];
      }
      else {
        reducedPrec = YES;
      }
    }
  }
  else if ([fields removeWithId:OrgJodaTimeDateTimeFieldType_monthOfYear()]) {
    [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk(bld)) appendLiteralWithChar:'-'];
    [bld appendLiteralWithChar:'-'];
    [bld appendMonthOfYearWithInt:2];
    if ([fields removeWithId:OrgJodaTimeDateTimeFieldType_dayOfMonth()]) {
      OrgJodaTimeFormatISODateTimeFormat_appendSeparatorWithOrgJodaTimeFormatDateTimeFormatterBuilder_withBoolean_(bld, extended);
      [bld appendDayOfMonthWithInt:2];
    }
    else {
      reducedPrec = YES;
    }
  }
  else if ([fields removeWithId:OrgJodaTimeDateTimeFieldType_dayOfMonth()]) {
    [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk(bld)) appendLiteralWithChar:'-'];
    [bld appendLiteralWithChar:'-'];
    [bld appendLiteralWithChar:'-'];
    [bld appendDayOfMonthWithInt:2];
  }
  return reducedPrec;
}

jboolean OrgJodaTimeFormatISODateTimeFormat_dateByOrdinalWithOrgJodaTimeFormatDateTimeFormatterBuilder_withJavaUtilCollection_withBoolean_withBoolean_(OrgJodaTimeFormatDateTimeFormatterBuilder *bld, id<JavaUtilCollection> fields, jboolean extended, jboolean strictISO) {
  OrgJodaTimeFormatISODateTimeFormat_init();
  jboolean reducedPrec = NO;
  if ([((id<JavaUtilCollection>) nil_chk(fields)) removeWithId:OrgJodaTimeDateTimeFieldType_year()]) {
    [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk(bld)) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_get_ye_()];
    if ([fields removeWithId:OrgJodaTimeDateTimeFieldType_dayOfYear()]) {
      OrgJodaTimeFormatISODateTimeFormat_appendSeparatorWithOrgJodaTimeFormatDateTimeFormatterBuilder_withBoolean_(bld, extended);
      [bld appendDayOfYearWithInt:3];
    }
    else {
      reducedPrec = YES;
    }
  }
  else if ([fields removeWithId:OrgJodaTimeDateTimeFieldType_dayOfYear()]) {
    [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk(bld)) appendLiteralWithChar:'-'];
    [bld appendDayOfYearWithInt:3];
  }
  return reducedPrec;
}

jboolean OrgJodaTimeFormatISODateTimeFormat_dateByWeekWithOrgJodaTimeFormatDateTimeFormatterBuilder_withJavaUtilCollection_withBoolean_withBoolean_(OrgJodaTimeFormatDateTimeFormatterBuilder *bld, id<JavaUtilCollection> fields, jboolean extended, jboolean strictISO) {
  OrgJodaTimeFormatISODateTimeFormat_init();
  jboolean reducedPrec = NO;
  if ([((id<JavaUtilCollection>) nil_chk(fields)) removeWithId:OrgJodaTimeDateTimeFieldType_weekyear()]) {
    [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk(bld)) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_get_we_()];
    if ([fields removeWithId:OrgJodaTimeDateTimeFieldType_weekOfWeekyear()]) {
      OrgJodaTimeFormatISODateTimeFormat_appendSeparatorWithOrgJodaTimeFormatDateTimeFormatterBuilder_withBoolean_(bld, extended);
      [bld appendLiteralWithChar:'W'];
      [bld appendWeekOfWeekyearWithInt:2];
      if ([fields removeWithId:OrgJodaTimeDateTimeFieldType_dayOfWeek()]) {
        OrgJodaTimeFormatISODateTimeFormat_appendSeparatorWithOrgJodaTimeFormatDateTimeFormatterBuilder_withBoolean_(bld, extended);
        [bld appendDayOfWeekWithInt:1];
      }
      else {
        reducedPrec = YES;
      }
    }
    else {
      if ([fields removeWithId:OrgJodaTimeDateTimeFieldType_dayOfWeek()]) {
        OrgJodaTimeFormatISODateTimeFormat_checkNotStrictISOWithJavaUtilCollection_withBoolean_(fields, strictISO);
        OrgJodaTimeFormatISODateTimeFormat_appendSeparatorWithOrgJodaTimeFormatDateTimeFormatterBuilder_withBoolean_(bld, extended);
        [bld appendLiteralWithChar:'W'];
        [bld appendLiteralWithChar:'-'];
        [bld appendDayOfWeekWithInt:1];
      }
      else {
        reducedPrec = YES;
      }
    }
  }
  else if ([fields removeWithId:OrgJodaTimeDateTimeFieldType_weekOfWeekyear()]) {
    [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk(bld)) appendLiteralWithChar:'-'];
    [bld appendLiteralWithChar:'W'];
    [bld appendWeekOfWeekyearWithInt:2];
    if ([fields removeWithId:OrgJodaTimeDateTimeFieldType_dayOfWeek()]) {
      OrgJodaTimeFormatISODateTimeFormat_appendSeparatorWithOrgJodaTimeFormatDateTimeFormatterBuilder_withBoolean_(bld, extended);
      [bld appendDayOfWeekWithInt:1];
    }
    else {
      reducedPrec = YES;
    }
  }
  else if ([fields removeWithId:OrgJodaTimeDateTimeFieldType_dayOfWeek()]) {
    [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk(bld)) appendLiteralWithChar:'-'];
    [bld appendLiteralWithChar:'W'];
    [bld appendLiteralWithChar:'-'];
    [bld appendDayOfWeekWithInt:1];
  }
  return reducedPrec;
}

void OrgJodaTimeFormatISODateTimeFormat_timeWithOrgJodaTimeFormatDateTimeFormatterBuilder_withJavaUtilCollection_withBoolean_withBoolean_withBoolean_withBoolean_(OrgJodaTimeFormatDateTimeFormatterBuilder *bld, id<JavaUtilCollection> fields, jboolean extended, jboolean strictISO, jboolean reducedPrec, jboolean datePresent) {
  OrgJodaTimeFormatISODateTimeFormat_init();
  jboolean hour = [((id<JavaUtilCollection>) nil_chk(fields)) removeWithId:OrgJodaTimeDateTimeFieldType_hourOfDay()];
  jboolean minute = [fields removeWithId:OrgJodaTimeDateTimeFieldType_minuteOfHour()];
  jboolean second = [fields removeWithId:OrgJodaTimeDateTimeFieldType_secondOfMinute()];
  jboolean milli = [fields removeWithId:OrgJodaTimeDateTimeFieldType_millisOfSecond()];
  if (!hour && !minute && !second && !milli) {
    return;
  }
  if (hour || minute || second || milli) {
    if (strictISO && reducedPrec) {
      @throw [[[JavaLangIllegalArgumentException alloc] initWithNSString:JreStrcat("$@", @"No valid ISO8601 format for fields because Date was reduced precision: ", fields)] autorelease];
    }
    if (datePresent) {
      [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk(bld)) appendLiteralWithChar:'T'];
    }
  }
  if ((hour && minute && second) || (hour && !second && !milli)) {
  }
  else {
    if (strictISO && datePresent) {
      @throw [[[JavaLangIllegalArgumentException alloc] initWithNSString:JreStrcat("$@", @"No valid ISO8601 format for fields because Time was truncated: ", fields)] autorelease];
    }
    if (!hour && ((minute && second) || (minute && !milli) || second)) {
    }
    else {
      if (strictISO) {
        @throw [[[JavaLangIllegalArgumentException alloc] initWithNSString:JreStrcat("$@", @"No valid ISO8601 format for fields: ", fields)] autorelease];
      }
    }
  }
  if (hour) {
    [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk(bld)) appendHourOfDayWithInt:2];
  }
  else if (minute || second || milli) {
    [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk(bld)) appendLiteralWithChar:'-'];
  }
  if (extended && hour && minute) {
    [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk(bld)) appendLiteralWithChar:':'];
  }
  if (minute) {
    [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk(bld)) appendMinuteOfHourWithInt:2];
  }
  else if (second || milli) {
    [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk(bld)) appendLiteralWithChar:'-'];
  }
  if (extended && minute && second) {
    [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk(bld)) appendLiteralWithChar:':'];
  }
  if (second) {
    [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk(bld)) appendSecondOfMinuteWithInt:2];
  }
  else if (milli) {
    [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk(bld)) appendLiteralWithChar:'-'];
  }
  if (milli) {
    [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk(bld)) appendLiteralWithChar:'.'];
    [bld appendMillisOfSecondWithInt:3];
  }
}

void OrgJodaTimeFormatISODateTimeFormat_checkNotStrictISOWithJavaUtilCollection_withBoolean_(id<JavaUtilCollection> fields, jboolean strictISO) {
  OrgJodaTimeFormatISODateTimeFormat_init();
  if (strictISO) {
    @throw [[[JavaLangIllegalArgumentException alloc] initWithNSString:JreStrcat("$@", @"No valid ISO8601 format for fields: ", fields)] autorelease];
  }
}

void OrgJodaTimeFormatISODateTimeFormat_appendSeparatorWithOrgJodaTimeFormatDateTimeFormatterBuilder_withBoolean_(OrgJodaTimeFormatDateTimeFormatterBuilder *bld, jboolean extended) {
  OrgJodaTimeFormatISODateTimeFormat_init();
  if (extended) {
    [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk(bld)) appendLiteralWithChar:'-'];
  }
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_dateParser() {
  OrgJodaTimeFormatISODateTimeFormat_init();
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_dp_();
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_localDateParser() {
  OrgJodaTimeFormatISODateTimeFormat_init();
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_ldp_();
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_dateElementParser() {
  OrgJodaTimeFormatISODateTimeFormat_init();
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_dpe_();
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_timeParser() {
  OrgJodaTimeFormatISODateTimeFormat_init();
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_tp_();
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_localTimeParser() {
  OrgJodaTimeFormatISODateTimeFormat_init();
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_ltp_();
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_timeElementParser() {
  OrgJodaTimeFormatISODateTimeFormat_init();
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_tpe_();
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_dateTimeParser() {
  OrgJodaTimeFormatISODateTimeFormat_init();
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_dtp_();
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_dateOptionalTimeParser() {
  OrgJodaTimeFormatISODateTimeFormat_init();
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_dotp_();
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_localDateOptionalTimeParser() {
  OrgJodaTimeFormatISODateTimeFormat_init();
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_ldotp_();
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_date() {
  OrgJodaTimeFormatISODateTimeFormat_init();
  return OrgJodaTimeFormatISODateTimeFormat_yearMonthDay();
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_time() {
  OrgJodaTimeFormatISODateTimeFormat_init();
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_t_();
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_timeNoMillis() {
  OrgJodaTimeFormatISODateTimeFormat_init();
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_tx_();
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_tTime() {
  OrgJodaTimeFormatISODateTimeFormat_init();
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_tt_();
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_tTimeNoMillis() {
  OrgJodaTimeFormatISODateTimeFormat_init();
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_ttx_();
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_dateTime() {
  OrgJodaTimeFormatISODateTimeFormat_init();
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_dt_();
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_dateTimeNoMillis() {
  OrgJodaTimeFormatISODateTimeFormat_init();
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_dtx_();
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_ordinalDate() {
  OrgJodaTimeFormatISODateTimeFormat_init();
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_od_();
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_ordinalDateTime() {
  OrgJodaTimeFormatISODateTimeFormat_init();
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_odt_();
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_ordinalDateTimeNoMillis() {
  OrgJodaTimeFormatISODateTimeFormat_init();
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_odtx_();
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_weekDate() {
  OrgJodaTimeFormatISODateTimeFormat_init();
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_wwd_();
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_weekDateTime() {
  OrgJodaTimeFormatISODateTimeFormat_init();
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_wdt_();
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_weekDateTimeNoMillis() {
  OrgJodaTimeFormatISODateTimeFormat_init();
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_wdtx_();
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_basicDate() {
  OrgJodaTimeFormatISODateTimeFormat_init();
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_bd_();
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_basicTime() {
  OrgJodaTimeFormatISODateTimeFormat_init();
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_bt_();
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_basicTimeNoMillis() {
  OrgJodaTimeFormatISODateTimeFormat_init();
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_btx_();
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_basicTTime() {
  OrgJodaTimeFormatISODateTimeFormat_init();
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_btt_();
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_basicTTimeNoMillis() {
  OrgJodaTimeFormatISODateTimeFormat_init();
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_bttx_();
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_basicDateTime() {
  OrgJodaTimeFormatISODateTimeFormat_init();
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_bdt_();
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_basicDateTimeNoMillis() {
  OrgJodaTimeFormatISODateTimeFormat_init();
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_bdtx_();
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_basicOrdinalDate() {
  OrgJodaTimeFormatISODateTimeFormat_init();
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_bod_();
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_basicOrdinalDateTime() {
  OrgJodaTimeFormatISODateTimeFormat_init();
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_bodt_();
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_basicOrdinalDateTimeNoMillis() {
  OrgJodaTimeFormatISODateTimeFormat_init();
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_bodtx_();
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_basicWeekDate() {
  OrgJodaTimeFormatISODateTimeFormat_init();
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_bwd_();
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_basicWeekDateTime() {
  OrgJodaTimeFormatISODateTimeFormat_init();
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_bwdt_();
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_basicWeekDateTimeNoMillis() {
  OrgJodaTimeFormatISODateTimeFormat_init();
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_bwdtx_();
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_year() {
  OrgJodaTimeFormatISODateTimeFormat_init();
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_ye_();
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_yearMonth() {
  OrgJodaTimeFormatISODateTimeFormat_init();
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_ym_();
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_yearMonthDay() {
  OrgJodaTimeFormatISODateTimeFormat_init();
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_ymd_();
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_weekyear() {
  OrgJodaTimeFormatISODateTimeFormat_init();
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_we_();
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_weekyearWeek() {
  OrgJodaTimeFormatISODateTimeFormat_init();
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_ww_();
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_weekyearWeekDay() {
  OrgJodaTimeFormatISODateTimeFormat_init();
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_wwd_();
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_hour() {
  OrgJodaTimeFormatISODateTimeFormat_init();
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_hde_();
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_hourMinute() {
  OrgJodaTimeFormatISODateTimeFormat_init();
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_hm_();
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_hourMinuteSecond() {
  OrgJodaTimeFormatISODateTimeFormat_init();
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_hms_();
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_hourMinuteSecondMillis() {
  OrgJodaTimeFormatISODateTimeFormat_init();
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_hmsl_();
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_hourMinuteSecondFraction() {
  OrgJodaTimeFormatISODateTimeFormat_init();
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_hmsf_();
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_dateHour() {
  OrgJodaTimeFormatISODateTimeFormat_init();
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_dh_();
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_dateHourMinute() {
  OrgJodaTimeFormatISODateTimeFormat_init();
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_dhm_();
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_dateHourMinuteSecond() {
  OrgJodaTimeFormatISODateTimeFormat_init();
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_dhms_();
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_dateHourMinuteSecondMillis() {
  OrgJodaTimeFormatISODateTimeFormat_init();
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_dhmsl_();
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_dateHourMinuteSecondFraction() {
  OrgJodaTimeFormatISODateTimeFormat_init();
  return OrgJodaTimeFormatISODateTimeFormat_Constants_get_dhmsf_();
}

BOOL OrgJodaTimeFormatISODateTimeFormat_Constants_initialized = NO;

@implementation OrgJodaTimeFormatISODateTimeFormat_Constants

OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_ye_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_mye_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_dme_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_we_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_wwe_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_dwe_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_dye_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_hde_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_mhe_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_sme_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_fse_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_ze_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_lte_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_ym_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_ymd_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_ww_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_wwd_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_hm_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_hms_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_hmsl_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_hmsf_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_dh_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_dhm_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_dhms_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_dhmsl_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_dhmsf_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_t_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_tx_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_tt_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_ttx_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_dt_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_dtx_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_wdt_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_wdtx_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_od_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_odt_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_odtx_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_bd_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_bt_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_btx_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_btt_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_bttx_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_bdt_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_bdtx_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_bod_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_bodt_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_bodtx_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_bwd_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_bwdt_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_bwdtx_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_dpe_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_tpe_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_dp_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_ldp_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_tp_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_ltp_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_dtp_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_dotp_;
OrgJodaTimeFormatDateTimeFormatter * OrgJodaTimeFormatISODateTimeFormat_Constants_ldotp_;

+ (OrgJodaTimeFormatDateTimeFormatter *)dateParser {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dateParser();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)localDateParser {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_localDateParser();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateElementParser {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dateElementParser();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)timeParser {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_timeParser();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)localTimeParser {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_localTimeParser();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)timeElementParser {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_timeElementParser();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateTimeParser {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dateTimeParser();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateOptionalTimeParser {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dateOptionalTimeParser();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)localDateOptionalTimeParser {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_localDateOptionalTimeParser();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)time {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_time();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)timeNoMillis {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_timeNoMillis();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)tTime {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_tTime();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)tTimeNoMillis {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_tTimeNoMillis();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateTime {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dateTime();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateTimeNoMillis {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dateTimeNoMillis();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)ordinalDate {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_ordinalDate();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)ordinalDateTime {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_ordinalDateTime();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)ordinalDateTimeNoMillis {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_ordinalDateTimeNoMillis();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)weekDateTime {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_weekDateTime();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)weekDateTimeNoMillis {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_weekDateTimeNoMillis();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicDate {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_basicDate();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicTime {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_basicTime();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicTimeNoMillis {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_basicTimeNoMillis();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicTTime {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_basicTTime();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicTTimeNoMillis {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_basicTTimeNoMillis();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicDateTime {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_basicDateTime();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicDateTimeNoMillis {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_basicDateTimeNoMillis();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicOrdinalDate {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_basicOrdinalDate();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicOrdinalDateTime {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_basicOrdinalDateTime();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicOrdinalDateTimeNoMillis {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_basicOrdinalDateTimeNoMillis();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicWeekDate {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_basicWeekDate();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicWeekDateTime {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_basicWeekDateTime();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)basicWeekDateTimeNoMillis {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_basicWeekDateTimeNoMillis();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)yearMonth {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_yearMonth();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)yearMonthDay {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_yearMonthDay();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)weekyearWeek {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_weekyearWeek();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)weekyearWeekDay {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_weekyearWeekDay();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)hourMinute {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_hourMinute();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)hourMinuteSecond {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_hourMinuteSecond();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)hourMinuteSecondMillis {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_hourMinuteSecondMillis();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)hourMinuteSecondFraction {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_hourMinuteSecondFraction();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateHour {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dateHour();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateHourMinute {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dateHourMinute();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateHourMinuteSecond {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dateHourMinuteSecond();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateHourMinuteSecondMillis {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dateHourMinuteSecondMillis();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dateHourMinuteSecondFraction {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dateHourMinuteSecondFraction();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)yearElement {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_yearElement();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)monthElement {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_monthElement();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dayOfMonthElement {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dayOfMonthElement();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)weekyearElement {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_weekyearElement();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)weekElement {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_weekElement();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dayOfWeekElement {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dayOfWeekElement();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)dayOfYearElement {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dayOfYearElement();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)literalTElement {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_literalTElement();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)hourElement {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_hourElement();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)minuteElement {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_minuteElement();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)secondElement {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_secondElement();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)fractionElement {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_fractionElement();
}

+ (OrgJodaTimeFormatDateTimeFormatter *)offsetElement {
  return OrgJodaTimeFormatISODateTimeFormat_Constants_offsetElement();
}

- (instancetype)init {
  return [super init];
}

+ (void)initialize {
  if (self == [OrgJodaTimeFormatISODateTimeFormat_Constants class]) {
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_ye_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_yearElement());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_mye_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_monthElement());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_dme_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_dayOfMonthElement());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_we_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_weekyearElement());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_wwe_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_weekElement());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_dwe_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_dayOfWeekElement());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_dye_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_dayOfYearElement());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_hde_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_hourElement());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_mhe_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_minuteElement());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_sme_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_secondElement());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_fse_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_fractionElement());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_ze_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_offsetElement());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_lte_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_literalTElement());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_ym_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_yearMonth());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_ymd_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_yearMonthDay());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_ww_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_weekyearWeek());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_wwd_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_weekyearWeekDay());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_hm_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_hourMinute());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_hms_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_hourMinuteSecond());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_hmsl_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_hourMinuteSecondMillis());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_hmsf_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_hourMinuteSecondFraction());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_dh_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_dateHour());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_dhm_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_dateHourMinute());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_dhms_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_dateHourMinuteSecond());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_dhmsl_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_dateHourMinuteSecondMillis());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_dhmsf_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_dateHourMinuteSecondFraction());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_t_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_time());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_tx_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_timeNoMillis());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_tt_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_tTime());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_ttx_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_tTimeNoMillis());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_dt_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_dateTime());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_dtx_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_dateTimeNoMillis());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_wdt_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_weekDateTime());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_wdtx_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_weekDateTimeNoMillis());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_od_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_ordinalDate());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_odt_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_ordinalDateTime());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_odtx_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_ordinalDateTimeNoMillis());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_bd_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_basicDate());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_bt_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_basicTime());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_btx_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_basicTimeNoMillis());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_btt_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_basicTTime());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_bttx_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_basicTTimeNoMillis());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_bdt_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_basicDateTime());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_bdtx_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_basicDateTimeNoMillis());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_bod_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_basicOrdinalDate());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_bodt_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_basicOrdinalDateTime());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_bodtx_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_basicOrdinalDateTimeNoMillis());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_bwd_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_basicWeekDate());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_bwdt_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_basicWeekDateTime());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_bwdtx_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_basicWeekDateTimeNoMillis());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_dpe_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_dateElementParser());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_tpe_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_timeElementParser());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_dp_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_dateParser());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_ldp_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_localDateParser());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_tp_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_timeParser());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_ltp_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_localTimeParser());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_dtp_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_dateTimeParser());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_dotp_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_dateOptionalTimeParser());
    JreStrongAssign(&OrgJodaTimeFormatISODateTimeFormat_Constants_ldotp_, nil, OrgJodaTimeFormatISODateTimeFormat_Constants_localDateOptionalTimeParser());
    J2OBJC_SET_INITIALIZED(OrgJodaTimeFormatISODateTimeFormat_Constants)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "dateParser", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "localDateParser", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "dateElementParser", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "timeParser", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "localTimeParser", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "timeElementParser", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "dateTimeParser", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "dateOptionalTimeParser", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "localDateOptionalTimeParser", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "time", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "timeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "tTime", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "tTimeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "dateTime", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "dateTimeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "ordinalDate", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "ordinalDateTime", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "ordinalDateTimeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "weekDateTime", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "weekDateTimeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "basicDate", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "basicTime", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "basicTimeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "basicTTime", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "basicTTimeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "basicDateTime", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "basicDateTimeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "basicOrdinalDate", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "basicOrdinalDateTime", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "basicOrdinalDateTimeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "basicWeekDate", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "basicWeekDateTime", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "basicWeekDateTimeNoMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "yearMonth", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "yearMonthDay", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "weekyearWeek", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "weekyearWeekDay", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "hourMinute", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "hourMinuteSecond", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "hourMinuteSecondMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "hourMinuteSecondFraction", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "dateHour", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "dateHourMinute", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "dateHourMinuteSecond", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "dateHourMinuteSecondMillis", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "dateHourMinuteSecondFraction", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "yearElement", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "monthElement", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "dayOfMonthElement", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "weekyearElement", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "weekElement", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "dayOfWeekElement", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "dayOfYearElement", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "literalTElement", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "hourElement", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "minuteElement", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "secondElement", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "fractionElement", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "offsetElement", NULL, "Lorg.joda.time.format.DateTimeFormatter;", 0xa, NULL },
    { "init", NULL, NULL, 0x0, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "ye_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_ye_,  },
    { "mye_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_mye_,  },
    { "dme_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_dme_,  },
    { "we_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_we_,  },
    { "wwe_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_wwe_,  },
    { "dwe_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_dwe_,  },
    { "dye_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_dye_,  },
    { "hde_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_hde_,  },
    { "mhe_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_mhe_,  },
    { "sme_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_sme_,  },
    { "fse_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_fse_,  },
    { "ze_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_ze_,  },
    { "lte_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_lte_,  },
    { "ym_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_ym_,  },
    { "ymd_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_ymd_,  },
    { "ww_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_ww_,  },
    { "wwd_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_wwd_,  },
    { "hm_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_hm_,  },
    { "hms_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_hms_,  },
    { "hmsl_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_hmsl_,  },
    { "hmsf_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_hmsf_,  },
    { "dh_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_dh_,  },
    { "dhm_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_dhm_,  },
    { "dhms_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_dhms_,  },
    { "dhmsl_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_dhmsl_,  },
    { "dhmsf_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_dhmsf_,  },
    { "t_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_t_,  },
    { "tx_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_tx_,  },
    { "tt_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_tt_,  },
    { "ttx_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_ttx_,  },
    { "dt_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_dt_,  },
    { "dtx_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_dtx_,  },
    { "wdt_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_wdt_,  },
    { "wdtx_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_wdtx_,  },
    { "od_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_od_,  },
    { "odt_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_odt_,  },
    { "odtx_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_odtx_,  },
    { "bd_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_bd_,  },
    { "bt_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_bt_,  },
    { "btx_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_btx_,  },
    { "btt_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_btt_,  },
    { "bttx_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_bttx_,  },
    { "bdt_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_bdt_,  },
    { "bdtx_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_bdtx_,  },
    { "bod_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_bod_,  },
    { "bodt_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_bodt_,  },
    { "bodtx_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_bodtx_,  },
    { "bwd_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_bwd_,  },
    { "bwdt_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_bwdt_,  },
    { "bwdtx_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_bwdtx_,  },
    { "dpe_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_dpe_,  },
    { "tpe_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_tpe_,  },
    { "dp_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_dp_,  },
    { "ldp_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_ldp_,  },
    { "tp_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_tp_,  },
    { "ltp_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_ltp_,  },
    { "dtp_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_dtp_,  },
    { "dotp_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_dotp_,  },
    { "ldotp_", NULL, 0x1a, "Lorg.joda.time.format.DateTimeFormatter;", &OrgJodaTimeFormatISODateTimeFormat_Constants_ldotp_,  },
  };
  static const J2ObjcClassInfo _OrgJodaTimeFormatISODateTimeFormat_Constants = { "Constants", "org.joda.time.format", "ISODateTimeFormat", 0x18, 60, methods, 59, fields, 0, NULL};
  return &_OrgJodaTimeFormatISODateTimeFormat_Constants;
}

@end

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dateParser() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_dp_ == nil) {
    id<OrgJodaTimeFormatDateTimeParser> tOffset = [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendLiteralWithChar:'T'])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_offsetElement()])) toParser];
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_dateElementParser()])) appendOptionalWithOrgJodaTimeFormatDateTimeParser:tOffset])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dp_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_localDateParser() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_ldp_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatter *) nil_chk(OrgJodaTimeFormatISODateTimeFormat_Constants_dateElementParser())) withZoneUTC];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_ldp_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dateElementParser() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_dpe_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendWithOrgJodaTimeFormatDateTimePrinter:nil withOrgJodaTimeFormatDateTimeParserArray:[IOSObjectArray arrayWithObjects:(id[]){ [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_yearElement()])) appendOptionalWithOrgJodaTimeFormatDateTimeParser:[((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_monthElement()])) appendOptionalWithOrgJodaTimeFormatDateTimeParser:[((OrgJodaTimeFormatDateTimeFormatter *) nil_chk(OrgJodaTimeFormatISODateTimeFormat_Constants_dayOfMonthElement())) getParser]])) toParser]])) toParser], [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_weekyearElement()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_weekElement()])) appendOptionalWithOrgJodaTimeFormatDateTimeParser:[((OrgJodaTimeFormatDateTimeFormatter *) nil_chk(OrgJodaTimeFormatISODateTimeFormat_Constants_dayOfWeekElement())) getParser]])) toParser], [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_yearElement()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_dayOfYearElement()])) toParser] } count:3 type:[IOSClass classWithProtocol:@protocol(OrgJodaTimeFormatDateTimeParser)]]])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dpe_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_timeParser() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_tp_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendOptionalWithOrgJodaTimeFormatDateTimeParser:[((OrgJodaTimeFormatDateTimeFormatter *) nil_chk(OrgJodaTimeFormatISODateTimeFormat_Constants_literalTElement())) getParser]])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_timeElementParser()])) appendOptionalWithOrgJodaTimeFormatDateTimeParser:[((OrgJodaTimeFormatDateTimeFormatter *) nil_chk(OrgJodaTimeFormatISODateTimeFormat_Constants_offsetElement())) getParser]])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_tp_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_localTimeParser() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_ltp_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatter *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendOptionalWithOrgJodaTimeFormatDateTimeParser:[((OrgJodaTimeFormatDateTimeFormatter *) nil_chk(OrgJodaTimeFormatISODateTimeFormat_Constants_literalTElement())) getParser]])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_timeElementParser()])) toFormatter])) withZoneUTC];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_ltp_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_timeElementParser() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_tpe_ == nil) {
    id<OrgJodaTimeFormatDateTimeParser> decimalPoint = [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendWithOrgJodaTimeFormatDateTimePrinter:nil withOrgJodaTimeFormatDateTimeParserArray:[IOSObjectArray arrayWithObjects:(id[]){ [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendLiteralWithChar:'.'])) toParser], [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendLiteralWithChar:','])) toParser] } count:2 type:[IOSClass classWithProtocol:@protocol(OrgJodaTimeFormatDateTimeParser)]]])) toParser];
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_hourElement()])) appendWithOrgJodaTimeFormatDateTimePrinter:nil withOrgJodaTimeFormatDateTimeParserArray:[IOSObjectArray arrayWithObjects:(id[]){ [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_minuteElement()])) appendWithOrgJodaTimeFormatDateTimePrinter:nil withOrgJodaTimeFormatDateTimeParserArray:[IOSObjectArray arrayWithObjects:(id[]){ [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_secondElement()])) appendOptionalWithOrgJodaTimeFormatDateTimeParser:[((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendWithOrgJodaTimeFormatDateTimeParser:decimalPoint])) appendFractionOfSecondWithInt:1 withInt:9])) toParser]])) toParser], [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendWithOrgJodaTimeFormatDateTimeParser:decimalPoint])) appendFractionOfMinuteWithInt:1 withInt:9])) toParser], nil } count:3 type:[IOSClass classWithProtocol:@protocol(OrgJodaTimeFormatDateTimeParser)]]])) toParser], [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendWithOrgJodaTimeFormatDateTimeParser:decimalPoint])) appendFractionOfHourWithInt:1 withInt:9])) toParser], nil } count:3 type:[IOSClass classWithProtocol:@protocol(OrgJodaTimeFormatDateTimeParser)]]])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_tpe_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dateTimeParser() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_dtp_ == nil) {
    id<OrgJodaTimeFormatDateTimeParser> time = [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendLiteralWithChar:'T'])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_timeElementParser()])) appendOptionalWithOrgJodaTimeFormatDateTimeParser:[((OrgJodaTimeFormatDateTimeFormatter *) nil_chk(OrgJodaTimeFormatISODateTimeFormat_Constants_offsetElement())) getParser]])) toParser];
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendWithOrgJodaTimeFormatDateTimePrinter:nil withOrgJodaTimeFormatDateTimeParserArray:[IOSObjectArray arrayWithObjects:(id[]){ time, [((OrgJodaTimeFormatDateTimeFormatter *) nil_chk(OrgJodaTimeFormatISODateTimeFormat_Constants_dateOptionalTimeParser())) getParser] } count:2 type:[IOSClass classWithProtocol:@protocol(OrgJodaTimeFormatDateTimeParser)]]])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dtp_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dateOptionalTimeParser() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_dotp_ == nil) {
    id<OrgJodaTimeFormatDateTimeParser> timeOrOffset = [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendLiteralWithChar:'T'])) appendOptionalWithOrgJodaTimeFormatDateTimeParser:[((OrgJodaTimeFormatDateTimeFormatter *) nil_chk(OrgJodaTimeFormatISODateTimeFormat_Constants_timeElementParser())) getParser]])) appendOptionalWithOrgJodaTimeFormatDateTimeParser:[((OrgJodaTimeFormatDateTimeFormatter *) nil_chk(OrgJodaTimeFormatISODateTimeFormat_Constants_offsetElement())) getParser]])) toParser];
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_dateElementParser()])) appendOptionalWithOrgJodaTimeFormatDateTimeParser:timeOrOffset])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dotp_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_localDateOptionalTimeParser() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_ldotp_ == nil) {
    id<OrgJodaTimeFormatDateTimeParser> time = [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendLiteralWithChar:'T'])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_timeElementParser()])) toParser];
    return [((OrgJodaTimeFormatDateTimeFormatter *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_dateElementParser()])) appendOptionalWithOrgJodaTimeFormatDateTimeParser:time])) toFormatter])) withZoneUTC];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_ldotp_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_time() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_t_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_hourMinuteSecondFraction()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_offsetElement()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_t_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_timeNoMillis() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_tx_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_hourMinuteSecond()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_offsetElement()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_tx_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_tTime() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_tt_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_literalTElement()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_time()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_tt_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_tTimeNoMillis() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_ttx_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_literalTElement()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_timeNoMillis()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_ttx_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dateTime() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_dt_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_date()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_tTime()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dt_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dateTimeNoMillis() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_dtx_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_date()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_tTimeNoMillis()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dtx_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_ordinalDate() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_od_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_yearElement()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_dayOfYearElement()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_od_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_ordinalDateTime() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_odt_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_ordinalDate()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_tTime()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_odt_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_ordinalDateTimeNoMillis() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_odtx_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_ordinalDate()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_tTimeNoMillis()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_odtx_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_weekDateTime() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_wdt_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_weekDate()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_tTime()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_wdt_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_weekDateTimeNoMillis() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_wdtx_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_weekDate()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_tTimeNoMillis()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_wdtx_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_basicDate() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_bd_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendYearWithInt:4 withInt:4])) appendFixedDecimalWithOrgJodaTimeDateTimeFieldType:OrgJodaTimeDateTimeFieldType_monthOfYear() withInt:2])) appendFixedDecimalWithOrgJodaTimeDateTimeFieldType:OrgJodaTimeDateTimeFieldType_dayOfMonth() withInt:2])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_bd_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_basicTime() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_bt_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendFixedDecimalWithOrgJodaTimeDateTimeFieldType:OrgJodaTimeDateTimeFieldType_hourOfDay() withInt:2])) appendFixedDecimalWithOrgJodaTimeDateTimeFieldType:OrgJodaTimeDateTimeFieldType_minuteOfHour() withInt:2])) appendFixedDecimalWithOrgJodaTimeDateTimeFieldType:OrgJodaTimeDateTimeFieldType_secondOfMinute() withInt:2])) appendLiteralWithChar:'.'])) appendFractionOfSecondWithInt:3 withInt:9])) appendTimeZoneOffsetWithNSString:@"Z" withBoolean:NO withInt:2 withInt:2])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_bt_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_basicTimeNoMillis() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_btx_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendFixedDecimalWithOrgJodaTimeDateTimeFieldType:OrgJodaTimeDateTimeFieldType_hourOfDay() withInt:2])) appendFixedDecimalWithOrgJodaTimeDateTimeFieldType:OrgJodaTimeDateTimeFieldType_minuteOfHour() withInt:2])) appendFixedDecimalWithOrgJodaTimeDateTimeFieldType:OrgJodaTimeDateTimeFieldType_secondOfMinute() withInt:2])) appendTimeZoneOffsetWithNSString:@"Z" withBoolean:NO withInt:2 withInt:2])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_btx_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_basicTTime() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_btt_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_literalTElement()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_basicTime()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_btt_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_basicTTimeNoMillis() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_bttx_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_literalTElement()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_basicTimeNoMillis()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_bttx_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_basicDateTime() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_bdt_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_basicDate()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_basicTTime()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_bdt_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_basicDateTimeNoMillis() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_bdtx_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_basicDate()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_basicTTimeNoMillis()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_bdtx_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_basicOrdinalDate() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_bod_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendYearWithInt:4 withInt:4])) appendFixedDecimalWithOrgJodaTimeDateTimeFieldType:OrgJodaTimeDateTimeFieldType_dayOfYear() withInt:3])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_bod_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_basicOrdinalDateTime() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_bodt_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_basicOrdinalDate()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_basicTTime()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_bodt_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_basicOrdinalDateTimeNoMillis() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_bodtx_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_basicOrdinalDate()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_basicTTimeNoMillis()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_bodtx_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_basicWeekDate() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_bwd_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendWeekyearWithInt:4 withInt:4])) appendLiteralWithChar:'W'])) appendFixedDecimalWithOrgJodaTimeDateTimeFieldType:OrgJodaTimeDateTimeFieldType_weekOfWeekyear() withInt:2])) appendFixedDecimalWithOrgJodaTimeDateTimeFieldType:OrgJodaTimeDateTimeFieldType_dayOfWeek() withInt:1])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_bwd_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_basicWeekDateTime() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_bwdt_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_basicWeekDate()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_basicTTime()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_bwdt_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_basicWeekDateTimeNoMillis() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_bwdtx_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_basicWeekDate()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_basicTTimeNoMillis()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_bwdtx_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_yearMonth() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_ym_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_yearElement()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_monthElement()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_ym_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_yearMonthDay() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_ymd_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_yearElement()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_monthElement()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_dayOfMonthElement()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_ymd_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_weekyearWeek() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_ww_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_weekyearElement()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_weekElement()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_ww_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_weekyearWeekDay() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_wwd_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_weekyearElement()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_weekElement()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_dayOfWeekElement()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_wwd_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_hourMinute() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_hm_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_hourElement()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_minuteElement()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_hm_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_hourMinuteSecond() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_hms_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_hourElement()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_minuteElement()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_secondElement()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_hms_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_hourMinuteSecondMillis() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_hmsl_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_hourElement()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_minuteElement()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_secondElement()])) appendLiteralWithChar:'.'])) appendFractionOfSecondWithInt:3 withInt:3])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_hmsl_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_hourMinuteSecondFraction() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_hmsf_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_hourElement()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_minuteElement()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_secondElement()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_fractionElement()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_hmsf_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dateHour() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_dh_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_date()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_literalTElement()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_hour()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dh_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dateHourMinute() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_dhm_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_date()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_literalTElement()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_hourMinute()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dhm_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dateHourMinuteSecond() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_dhms_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_date()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_literalTElement()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_hourMinuteSecond()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dhms_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dateHourMinuteSecondMillis() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_dhmsl_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_date()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_literalTElement()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_hourMinuteSecondMillis()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dhmsl_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dateHourMinuteSecondFraction() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_dhmsf_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_date()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_literalTElement()])) appendWithOrgJodaTimeFormatDateTimeFormatter:OrgJodaTimeFormatISODateTimeFormat_Constants_hourMinuteSecondFraction()])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dhmsf_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_yearElement() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_ye_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendYearWithInt:4 withInt:9])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_ye_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_monthElement() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_mye_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendLiteralWithChar:'-'])) appendMonthOfYearWithInt:2])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_mye_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dayOfMonthElement() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_dme_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendLiteralWithChar:'-'])) appendDayOfMonthWithInt:2])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dme_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_weekyearElement() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_we_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendWeekyearWithInt:4 withInt:9])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_we_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_weekElement() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_wwe_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendLiteralWithNSString:@"-W"])) appendWeekOfWeekyearWithInt:2])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_wwe_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dayOfWeekElement() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_dwe_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendLiteralWithChar:'-'])) appendDayOfWeekWithInt:1])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dwe_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_dayOfYearElement() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_dye_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendLiteralWithChar:'-'])) appendDayOfYearWithInt:3])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_dye_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_literalTElement() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_lte_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendLiteralWithChar:'T'])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_lte_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_hourElement() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_hde_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendHourOfDayWithInt:2])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_hde_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_minuteElement() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_mhe_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendLiteralWithChar:':'])) appendMinuteOfHourWithInt:2])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_mhe_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_secondElement() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_sme_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendLiteralWithChar:':'])) appendSecondOfMinuteWithInt:2])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_sme_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_fractionElement() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_fse_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendLiteralWithChar:'.'])) appendFractionOfSecondWithInt:3 withInt:9])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_fse_;
}

OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatISODateTimeFormat_Constants_offsetElement() {
  OrgJodaTimeFormatISODateTimeFormat_Constants_init();
  if (OrgJodaTimeFormatISODateTimeFormat_Constants_ze_ == nil) {
    return [((OrgJodaTimeFormatDateTimeFormatterBuilder *) nil_chk([((OrgJodaTimeFormatDateTimeFormatterBuilder *) [[[OrgJodaTimeFormatDateTimeFormatterBuilder alloc] init] autorelease]) appendTimeZoneOffsetWithNSString:@"Z" withBoolean:YES withInt:2 withInt:4])) toFormatter];
  }
  return OrgJodaTimeFormatISODateTimeFormat_Constants_ze_;
}

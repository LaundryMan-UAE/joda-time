//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/andrewebling/Laundrapp/Joda-time-Project/joda-time/src/main/java/org/joda/time/Minutes.java
//

#include "BaseSingleFieldPeriod.h"
#include "Chronology.h"
#include "DateTime.h"
#include "DateTimeConstants.h"
#include "DateTimeUtils.h"
#include "Days.h"
#include "Duration.h"
#include "DurationField.h"
#include "DurationFieldType.h"
#include "FieldUtils.h"
#include "FromString.h"
#include "Hours.h"
#include "IOSClass.h"
#include "ISOPeriodFormat.h"
#include "LocalTime.h"
#include "Minutes.h"
#include "Period.h"
#include "PeriodFormatter.h"
#include "PeriodType.h"
#include "ReadableInstant.h"
#include "ReadableInterval.h"
#include "ReadablePartial.h"
#include "ReadablePeriod.h"
#include "Seconds.h"
#include "ToString.h"
#include "Weeks.h"
#include "java/lang/Integer.h"

BOOL OrgJodaTimeMinutes_initialized = NO;

@implementation OrgJodaTimeMinutes

OrgJodaTimeMinutes * OrgJodaTimeMinutes_ZERO_;
OrgJodaTimeMinutes * OrgJodaTimeMinutes_ONE_;
OrgJodaTimeMinutes * OrgJodaTimeMinutes_TWO_;
OrgJodaTimeMinutes * OrgJodaTimeMinutes_THREE_;
OrgJodaTimeMinutes * OrgJodaTimeMinutes_MAX_VALUE_;
OrgJodaTimeMinutes * OrgJodaTimeMinutes_MIN_VALUE_;
OrgJodaTimeFormatPeriodFormatter * OrgJodaTimeMinutes_PARSER_;

+ (OrgJodaTimeMinutes *)minutesWithInt:(int)minutes {
  switch (minutes) {
    case 0:
    return OrgJodaTimeMinutes_ZERO_;
    case 1:
    return OrgJodaTimeMinutes_ONE_;
    case 2:
    return OrgJodaTimeMinutes_TWO_;
    case 3:
    return OrgJodaTimeMinutes_THREE_;
    case JavaLangInteger_MAX_VALUE:
    return OrgJodaTimeMinutes_MAX_VALUE_;
    case JavaLangInteger_MIN_VALUE:
    return OrgJodaTimeMinutes_MIN_VALUE_;
    default:
    return [[OrgJodaTimeMinutes alloc] initWithInt:minutes];
  }
}

+ (OrgJodaTimeMinutes *)minutesBetweenWithOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)start
                                      withOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)end {
  int amount = [OrgJodaTimeBaseBaseSingleFieldPeriod betweenWithOrgJodaTimeReadableInstant:start withOrgJodaTimeReadableInstant:end withOrgJodaTimeDurationFieldType:[OrgJodaTimeDurationFieldType minutes]];
  return [OrgJodaTimeMinutes minutesWithInt:amount];
}

+ (OrgJodaTimeMinutes *)minutesBetweenWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)start
                                      withOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)end {
  if ([(id) start isKindOfClass:[OrgJodaTimeLocalTime class]] && [(id) end isKindOfClass:[OrgJodaTimeLocalTime class]]) {
    OrgJodaTimeChronology *chrono = [OrgJodaTimeDateTimeUtils getChronologyWithOrgJodaTimeChronology:[((id<OrgJodaTimeReadablePartial>) nil_chk(start)) getChronology]];
    int minutes = [((OrgJodaTimeDurationField *) nil_chk([((OrgJodaTimeChronology *) nil_chk(chrono)) minutes])) getDifferenceWithLong:[((OrgJodaTimeLocalTime *) nil_chk(((OrgJodaTimeLocalTime *) check_class_cast(end, [OrgJodaTimeLocalTime class])))) getLocalMillis] withLong:[((OrgJodaTimeLocalTime *) check_class_cast(start, [OrgJodaTimeLocalTime class])) getLocalMillis]];
    return [OrgJodaTimeMinutes minutesWithInt:minutes];
  }
  int amount = [OrgJodaTimeBaseBaseSingleFieldPeriod betweenWithOrgJodaTimeReadablePartial:start withOrgJodaTimeReadablePartial:end withOrgJodaTimeReadablePeriod:OrgJodaTimeMinutes_ZERO_];
  return [OrgJodaTimeMinutes minutesWithInt:amount];
}

+ (OrgJodaTimeMinutes *)minutesInWithOrgJodaTimeReadableInterval:(id<OrgJodaTimeReadableInterval>)interval {
  if (interval == nil) {
    return OrgJodaTimeMinutes_ZERO_;
  }
  int amount = [OrgJodaTimeBaseBaseSingleFieldPeriod betweenWithOrgJodaTimeReadableInstant:[((id<OrgJodaTimeReadableInterval>) nil_chk(interval)) getStart] withOrgJodaTimeReadableInstant:[interval getEnd] withOrgJodaTimeDurationFieldType:[OrgJodaTimeDurationFieldType minutes]];
  return [OrgJodaTimeMinutes minutesWithInt:amount];
}

+ (OrgJodaTimeMinutes *)standardMinutesInWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period {
  int amount = [OrgJodaTimeBaseBaseSingleFieldPeriod standardPeriodInWithOrgJodaTimeReadablePeriod:period withLong:OrgJodaTimeDateTimeConstants_MILLIS_PER_MINUTE];
  return [OrgJodaTimeMinutes minutesWithInt:amount];
}

+ (OrgJodaTimeMinutes *)parseMinutesWithNSString:(NSString *)periodStr {
  if (periodStr == nil) {
    return OrgJodaTimeMinutes_ZERO_;
  }
  OrgJodaTimePeriod *p = [((OrgJodaTimeFormatPeriodFormatter *) nil_chk(OrgJodaTimeMinutes_PARSER_)) parsePeriodWithNSString:periodStr];
  return [OrgJodaTimeMinutes minutesWithInt:[((OrgJodaTimePeriod *) nil_chk(p)) getMinutes]];
}

- (instancetype)initWithInt:(int)minutes {
  return [super initWithInt:minutes];
}

- (id)readResolve {
  return [OrgJodaTimeMinutes minutesWithInt:[self getValue]];
}

- (OrgJodaTimeDurationFieldType *)getFieldType {
  return [OrgJodaTimeDurationFieldType minutes];
}

- (OrgJodaTimePeriodType *)getPeriodType {
  return [OrgJodaTimePeriodType minutes];
}

- (OrgJodaTimeWeeks *)toStandardWeeks {
  return [OrgJodaTimeWeeks weeksWithInt:[self getValue] / OrgJodaTimeDateTimeConstants_MINUTES_PER_WEEK];
}

- (OrgJodaTimeDays *)toStandardDays {
  return [OrgJodaTimeDays daysWithInt:[self getValue] / OrgJodaTimeDateTimeConstants_MINUTES_PER_DAY];
}

- (OrgJodaTimeHours *)toStandardHours {
  return [OrgJodaTimeHours hoursWithInt:[self getValue] / OrgJodaTimeDateTimeConstants_MINUTES_PER_HOUR];
}

- (OrgJodaTimeSeconds *)toStandardSeconds {
  return [OrgJodaTimeSeconds secondsWithInt:[OrgJodaTimeFieldFieldUtils safeMultiplyWithInt:[self getValue] withInt:OrgJodaTimeDateTimeConstants_SECONDS_PER_MINUTE]];
}

- (OrgJodaTimeDuration *)toStandardDuration {
  long long int minutes = [self getValue];
  return [[OrgJodaTimeDuration alloc] initWithLong:minutes * OrgJodaTimeDateTimeConstants_MILLIS_PER_MINUTE];
}

- (int)getMinutes {
  return [self getValue];
}

- (OrgJodaTimeMinutes *)plusWithInt:(int)minutes {
  if (minutes == 0) {
    return self;
  }
  return [OrgJodaTimeMinutes minutesWithInt:[OrgJodaTimeFieldFieldUtils safeAddWithInt:[self getValue] withInt:minutes]];
}

- (OrgJodaTimeMinutes *)plusWithOrgJodaTimeMinutes:(OrgJodaTimeMinutes *)minutes {
  if (minutes == nil) {
    return self;
  }
  return [self plusWithInt:[((OrgJodaTimeMinutes *) nil_chk(minutes)) getValue]];
}

- (OrgJodaTimeMinutes *)minusWithInt:(int)minutes {
  return [self plusWithInt:[OrgJodaTimeFieldFieldUtils safeNegateWithInt:minutes]];
}

- (OrgJodaTimeMinutes *)minusWithOrgJodaTimeMinutes:(OrgJodaTimeMinutes *)minutes {
  if (minutes == nil) {
    return self;
  }
  return [self minusWithInt:[((OrgJodaTimeMinutes *) nil_chk(minutes)) getValue]];
}

- (OrgJodaTimeMinutes *)multipliedByWithInt:(int)scalar {
  return [OrgJodaTimeMinutes minutesWithInt:[OrgJodaTimeFieldFieldUtils safeMultiplyWithInt:[self getValue] withInt:scalar]];
}

- (OrgJodaTimeMinutes *)dividedByWithInt:(int)divisor {
  if (divisor == 1) {
    return self;
  }
  return [OrgJodaTimeMinutes minutesWithInt:[self getValue] / divisor];
}

- (OrgJodaTimeMinutes *)negated {
  return [OrgJodaTimeMinutes minutesWithInt:[OrgJodaTimeFieldFieldUtils safeNegateWithInt:[self getValue]]];
}

- (BOOL)isGreaterThanWithOrgJodaTimeMinutes:(OrgJodaTimeMinutes *)other {
  if (other == nil) {
    return [self getValue] > 0;
  }
  return [self getValue] > [((OrgJodaTimeMinutes *) nil_chk(other)) getValue];
}

- (BOOL)isLessThanWithOrgJodaTimeMinutes:(OrgJodaTimeMinutes *)other {
  if (other == nil) {
    return [self getValue] < 0;
  }
  return [self getValue] < [((OrgJodaTimeMinutes *) nil_chk(other)) getValue];
}

- (NSString *)description {
  return [NSString stringWithFormat:@"PT%@M", [NSString valueOfInt:[self getValue]]];
}

+ (void)initialize {
  if (self == [OrgJodaTimeMinutes class]) {
    OrgJodaTimeMinutes_ZERO_ = [[OrgJodaTimeMinutes alloc] initWithInt:0];
    OrgJodaTimeMinutes_ONE_ = [[OrgJodaTimeMinutes alloc] initWithInt:1];
    OrgJodaTimeMinutes_TWO_ = [[OrgJodaTimeMinutes alloc] initWithInt:2];
    OrgJodaTimeMinutes_THREE_ = [[OrgJodaTimeMinutes alloc] initWithInt:3];
    OrgJodaTimeMinutes_MAX_VALUE_ = [[OrgJodaTimeMinutes alloc] initWithInt:JavaLangInteger_MAX_VALUE];
    OrgJodaTimeMinutes_MIN_VALUE_ = [[OrgJodaTimeMinutes alloc] initWithInt:JavaLangInteger_MIN_VALUE];
    OrgJodaTimeMinutes_PARSER_ = [((OrgJodaTimeFormatPeriodFormatter *) nil_chk([OrgJodaTimeFormatISOPeriodFormat standard])) withParseTypeWithOrgJodaTimePeriodType:[OrgJodaTimePeriodType minutes]];
    OrgJodaTimeMinutes_initialized = YES;
  }
}
+ (IOSObjectArray *)__annotations_parseMinutesWithNSString_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[OrgJodaConvertFromString alloc] init] } count:1 type:[IOSClass classWithProtocol:@protocol(JavaLangAnnotationAnnotation)]];
}

+ (IOSObjectArray *)__annotations_description {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[OrgJodaConvertToString alloc] init] } count:1 type:[IOSClass classWithProtocol:@protocol(JavaLangAnnotationAnnotation)]];
}


+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "minutesWithInt:", "minutes", "Lorg.joda.time.Minutes;", 0x9, NULL },
    { "minutesBetweenWithOrgJodaTimeReadableInstant:withOrgJodaTimeReadableInstant:", "minutesBetween", "Lorg.joda.time.Minutes;", 0x9, NULL },
    { "minutesBetweenWithOrgJodaTimeReadablePartial:withOrgJodaTimeReadablePartial:", "minutesBetween", "Lorg.joda.time.Minutes;", 0x9, NULL },
    { "minutesInWithOrgJodaTimeReadableInterval:", "minutesIn", "Lorg.joda.time.Minutes;", 0x9, NULL },
    { "standardMinutesInWithOrgJodaTimeReadablePeriod:", "standardMinutesIn", "Lorg.joda.time.Minutes;", 0x9, NULL },
    { "parseMinutesWithNSString:", "parseMinutes", "Lorg.joda.time.Minutes;", 0x9, NULL },
    { "initWithInt:", "Minutes", NULL, 0x2, NULL },
    { "readResolve", NULL, "Ljava.lang.Object;", 0x2, NULL },
    { "getFieldType", NULL, "Lorg.joda.time.DurationFieldType;", 0x1, NULL },
    { "getPeriodType", NULL, "Lorg.joda.time.PeriodType;", 0x1, NULL },
    { "toStandardWeeks", NULL, "Lorg.joda.time.Weeks;", 0x1, NULL },
    { "toStandardDays", NULL, "Lorg.joda.time.Days;", 0x1, NULL },
    { "toStandardHours", NULL, "Lorg.joda.time.Hours;", 0x1, NULL },
    { "toStandardSeconds", NULL, "Lorg.joda.time.Seconds;", 0x1, NULL },
    { "toStandardDuration", NULL, "Lorg.joda.time.Duration;", 0x1, NULL },
    { "getMinutes", NULL, "I", 0x1, NULL },
    { "plusWithInt:", "plus", "Lorg.joda.time.Minutes;", 0x1, NULL },
    { "plusWithOrgJodaTimeMinutes:", "plus", "Lorg.joda.time.Minutes;", 0x1, NULL },
    { "minusWithInt:", "minus", "Lorg.joda.time.Minutes;", 0x1, NULL },
    { "minusWithOrgJodaTimeMinutes:", "minus", "Lorg.joda.time.Minutes;", 0x1, NULL },
    { "multipliedByWithInt:", "multipliedBy", "Lorg.joda.time.Minutes;", 0x1, NULL },
    { "dividedByWithInt:", "dividedBy", "Lorg.joda.time.Minutes;", 0x1, NULL },
    { "negated", NULL, "Lorg.joda.time.Minutes;", 0x1, NULL },
    { "isGreaterThanWithOrgJodaTimeMinutes:", "isGreaterThan", "Z", 0x1, NULL },
    { "isLessThanWithOrgJodaTimeMinutes:", "isLessThan", "Z", 0x1, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "ZERO_", NULL, 0x19, "Lorg.joda.time.Minutes;", &OrgJodaTimeMinutes_ZERO_,  },
    { "ONE_", NULL, 0x19, "Lorg.joda.time.Minutes;", &OrgJodaTimeMinutes_ONE_,  },
    { "TWO_", NULL, 0x19, "Lorg.joda.time.Minutes;", &OrgJodaTimeMinutes_TWO_,  },
    { "THREE_", NULL, 0x19, "Lorg.joda.time.Minutes;", &OrgJodaTimeMinutes_THREE_,  },
    { "MAX_VALUE_", NULL, 0x19, "Lorg.joda.time.Minutes;", &OrgJodaTimeMinutes_MAX_VALUE_,  },
    { "MIN_VALUE_", NULL, 0x19, "Lorg.joda.time.Minutes;", &OrgJodaTimeMinutes_MIN_VALUE_,  },
    { "PARSER_", NULL, 0x1a, "Lorg.joda.time.format.PeriodFormatter;", &OrgJodaTimeMinutes_PARSER_,  },
    { "serialVersionUID_Minutes_", "serialVersionUID", 0x1a, "J", NULL, .constantValue.asLong = OrgJodaTimeMinutes_serialVersionUID },
  };
  static J2ObjcClassInfo _OrgJodaTimeMinutes = { "Minutes", "org.joda.time", NULL, 0x11, 26, methods, 8, fields, 0, NULL};
  return &_OrgJodaTimeMinutes;
}

@end

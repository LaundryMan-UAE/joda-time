//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/andrewebling/Laundrapp/Joda-time-Project/joda-time/src/main/java/org/joda/time/format/FormatUtils.java
//

#ifndef _OrgJodaTimeFormatFormatUtils_H_
#define _OrgJodaTimeFormatFormatUtils_H_

@class JavaIoWriter;
@class JavaLangStringBuffer;
@protocol JavaLangAppendable;
@protocol JavaLangCharSequence;

#import "JreEmulation.h"

/**
 @brief Utility methods used by formatters.
 <p> FormatUtils is thread-safe and immutable.
 @author Brian S O'Neill
 @since 1.0
 */
@interface OrgJodaTimeFormatFormatUtils : NSObject {
}

/**
 @brief Restricted constructor.
 */
- (instancetype)init;

/**
 @brief Converts an integer to a string, prepended with a variable amount of '0' pad characters, and appends it to the given buffer.
 <p>This method is optimized for converting small values to strings.
 @param buf receives integer converted to a string
 @param value value to convert to a string
 @param size minimum amount of digits to append
 */
+ (void)appendPaddedIntegerWithJavaLangStringBuffer:(JavaLangStringBuffer *)buf
                                            withInt:(int)value
                                            withInt:(int)size;

/**
 @brief Converts an integer to a string, prepended with a variable amount of '0' pad characters, and appends it to the given appendable.
 <p>This method is optimized for converting small values to strings.
 @param appenadble receives integer converted to a string
 @param value value to convert to a string
 @param size minimum amount of digits to append
 @since 2.4
 */
+ (void)appendPaddedIntegerWithJavaLangAppendable:(id<JavaLangAppendable>)appenadble
                                          withInt:(int)value
                                          withInt:(int)size;

/**
 @brief Converts an integer to a string, prepended with a variable amount of '0' pad characters, and appends it to the given buffer.
 <p>This method is optimized for converting small values to strings.
 @param buf receives integer converted to a string
 @param value value to convert to a string
 @param size minimum amount of digits to append
 */
+ (void)appendPaddedIntegerWithJavaLangStringBuffer:(JavaLangStringBuffer *)buf
                                           withLong:(long long int)value
                                            withInt:(int)size;

/**
 @brief Converts an integer to a string, prepended with a variable amount of '0' pad characters, and appends it to the given buffer.
 <p>This method is optimized for converting small values to strings.
 @param appendable receives integer converted to a string
 @param value value to convert to a string
 @param size minimum amount of digits to append
 @since 2.4
 */
+ (void)appendPaddedIntegerWithJavaLangAppendable:(id<JavaLangAppendable>)appendable
                                         withLong:(long long int)value
                                          withInt:(int)size;

/**
 @brief Converts an integer to a string, prepended with a variable amount of '0' pad characters, and writes it to the given writer.
 <p>This method is optimized for converting small values to strings.
 @param out receives integer converted to a string
 @param value value to convert to a string
 @param size minimum amount of digits to append
 */
+ (void)writePaddedIntegerWithJavaIoWriter:(JavaIoWriter *)outArg
                                   withInt:(int)value
                                   withInt:(int)size;

/**
 @brief Converts an integer to a string, prepended with a variable amount of '0' pad characters, and writes it to the given writer.
 <p>This method is optimized for converting small values to strings.
 @param out receives integer converted to a string
 @param value value to convert to a string
 @param size minimum amount of digits to append
 */
+ (void)writePaddedIntegerWithJavaIoWriter:(JavaIoWriter *)outArg
                                  withLong:(long long int)value
                                   withInt:(int)size;

/**
 @brief Converts an integer to a string, and appends it to the given buffer.
 <p>This method is optimized for converting small values to strings.
 @param buf receives integer converted to a string
 @param value value to convert to a string
 */
+ (void)appendUnpaddedIntegerWithJavaLangStringBuffer:(JavaLangStringBuffer *)buf
                                              withInt:(int)value;

/**
 @brief Converts an integer to a string, and appends it to the given appendable.
 <p>This method is optimized for converting small values to strings.
 @param appendable receives integer converted to a string
 @param value value to convert to a string
 @since 2.4
 */
+ (void)appendUnpaddedIntegerWithJavaLangAppendable:(id<JavaLangAppendable>)appendable
                                            withInt:(int)value;

/**
 @brief Converts an integer to a string, and appends it to the given buffer.
 <p>This method is optimized for converting small values to strings.
 @param buf receives integer converted to a string
 @param value value to convert to a string
 */
+ (void)appendUnpaddedIntegerWithJavaLangStringBuffer:(JavaLangStringBuffer *)buf
                                             withLong:(long long int)value;

/**
 @brief Converts an integer to a string, and appends it to the given appendable.
 <p>This method is optimized for converting small values to strings.
 @param appendable receives integer converted to a string
 @param value value to convert to a string
 */
+ (void)appendUnpaddedIntegerWithJavaLangAppendable:(id<JavaLangAppendable>)appendable
                                           withLong:(long long int)value;

/**
 @brief Converts an integer to a string, and writes it to the given writer.
 <p>This method is optimized for converting small values to strings.
 @param out receives integer converted to a string
 @param value value to convert to a string
 */
+ (void)writeUnpaddedIntegerWithJavaIoWriter:(JavaIoWriter *)outArg
                                     withInt:(int)value;

/**
 @brief Converts an integer to a string, and writes it to the given writer.
 <p>This method is optimized for converting small values to strings.
 @param out receives integer converted to a string
 @param value value to convert to a string
 */
+ (void)writeUnpaddedIntegerWithJavaIoWriter:(JavaIoWriter *)outArg
                                    withLong:(long long int)value;

/**
 @brief Calculates the number of decimal digits for the given value, including the sign.
 */
+ (int)calculateDigitCountWithLong:(long long int)value;

+ (int)parseTwoDigitsWithJavaLangCharSequence:(id<JavaLangCharSequence>)text
                                      withInt:(int)position;

+ (NSString *)createErrorMessageWithNSString:(NSString *)text
                                     withInt:(int)errorPos;

@end

FOUNDATION_EXPORT BOOL OrgJodaTimeFormatFormatUtils_initialized;
J2OBJC_STATIC_INIT(OrgJodaTimeFormatFormatUtils)

FOUNDATION_EXPORT double OrgJodaTimeFormatFormatUtils_LOG_10_;
J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeFormatFormatUtils, LOG_10_, double)

#endif // _OrgJodaTimeFormatFormatUtils_H_

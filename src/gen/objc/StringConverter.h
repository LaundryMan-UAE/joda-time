//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nbransby/Documents/joda-time/src/main/java/org/joda/time/convert/StringConverter.java
//

#ifndef _OrgJodaTimeConvertStringConverter_H_
#define _OrgJodaTimeConvertStringConverter_H_

@class IOSClass;
@class IOSIntArray;
@class OrgJodaTimeChronology;
@class OrgJodaTimeFormatDateTimeFormatter;
@protocol OrgJodaTimeReadWritableInterval;
@protocol OrgJodaTimeReadWritablePeriod;
@protocol OrgJodaTimeReadablePartial;

#include "AbstractConverter.h"
#include "DurationConverter.h"
#include "InstantConverter.h"
#include "IntervalConverter.h"
#include "J2ObjC_header.h"
#include "PartialConverter.h"
#include "PeriodConverter.h"

/**
 @brief StringConverter converts from a String to an instant, partial, duration, period or interval..
 @author Stephen Colebourne
 @author Brian S O'Neill
 @since 1.0
 */
@interface OrgJodaTimeConvertStringConverter : OrgJodaTimeConvertAbstractConverter < OrgJodaTimeConvertInstantConverter, OrgJodaTimeConvertPartialConverter, OrgJodaTimeConvertDurationConverter, OrgJodaTimeConvertPeriodConverter, OrgJodaTimeConvertIntervalConverter > {
}

/**
 @brief Restricted constructor.
 */
- (instancetype)init;

/**
 @brief Gets the millis, which is the ISO parsed string value.
 @param object the String to convert, must not be null
 @param chrono the chronology to use, non-null result of getChronology
 @return the millisecond value
 @throws IllegalArgumentException if the value if invalid
 */
- (jlong)getInstantMillisWithId:(id)object
      withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono;

/**
 @brief Extracts the values of the partial from an object of this converter's type.
 This method checks if the parser has a zone, and uses it if present. This is most useful for parsing local times with UTC.
 @param fieldSource a partial that provides access to the fields. This partial may be incomplete and only getFieldType(int) should be used
 @param object the object to convert
 @param chrono the chronology to use, which is the non-null result of getChronology()
 @param parser the parser to use, may be null
 @return the array of field values that match the fieldSource, must be non-null valid
 @throws ClassCastException if the object is invalid
 @throws IllegalArgumentException if the value if invalid
 @since 1.3
 */
- (IOSIntArray *)getPartialValuesWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)fieldSource
                                                         withId:(id)object
                                      withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono
                         withOrgJodaTimeFormatDateTimeFormatter:(OrgJodaTimeFormatDateTimeFormatter *)parser;

/**
 @brief Gets the duration of the string using the standard type.
 This matches the toString() method of ReadableDuration.
 @param object the String to convert, must not be null
 @throws ClassCastException if the object is invalid
 */
- (jlong)getDurationMillisWithId:(id)object;

/**
 @brief Extracts duration values from an object of this converter's type, and sets them into the given ReadWritableDuration.
 @param period period to get modified
 @param object the String to convert, must not be null
 @param chrono the chronology to use
 @return the millisecond duration
 @throws ClassCastException if the object is invalid
 */
- (void)setIntoWithOrgJodaTimeReadWritablePeriod:(id<OrgJodaTimeReadWritablePeriod>)period
                                          withId:(id)object
                       withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono;

/**
 @brief Sets the value of the mutable interval from the string.
 @param writableInterval the interval to set
 @param object the String to convert, must not be null
 @param chrono the chronology to use, may be null
 */
- (void)setIntoWithOrgJodaTimeReadWritableInterval:(id<OrgJodaTimeReadWritableInterval>)writableInterval
                                            withId:(id)object
                         withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono;

/**
 @brief Returns String.class.
 @return String.class
 */
- (IOSClass *)getSupportedType;

@end

FOUNDATION_EXPORT BOOL OrgJodaTimeConvertStringConverter_initialized;
J2OBJC_STATIC_INIT(OrgJodaTimeConvertStringConverter)

CF_EXTERN_C_BEGIN

FOUNDATION_EXPORT OrgJodaTimeConvertStringConverter *OrgJodaTimeConvertStringConverter_INSTANCE_;
J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeConvertStringConverter, INSTANCE_, OrgJodaTimeConvertStringConverter *)
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeConvertStringConverter)

#endif // _OrgJodaTimeConvertStringConverter_H_

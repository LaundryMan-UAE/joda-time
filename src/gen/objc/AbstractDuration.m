//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/andrewebling/Laundrapp/Joda-time-Project/joda-time/src/main/java/org/joda/time/base/AbstractDuration.java
//

#include "AbstractDuration.h"
#include "Duration.h"
#include "FormatUtils.h"
#include "IOSClass.h"
#include "Period.h"
#include "ReadableDuration.h"
#include "ToString.h"
#include "java/lang/ClassCastException.h"
#include "java/lang/StringBuffer.h"

@implementation OrgJodaTimeBaseAbstractDuration

- (instancetype)init {
  return [super init];
}

- (OrgJodaTimeDuration *)toDuration {
  return [[OrgJodaTimeDuration alloc] initWithLong:[self getMillis]];
}

- (OrgJodaTimePeriod *)toPeriod {
  return [[OrgJodaTimePeriod alloc] initWithLong:[self getMillis]];
}

- (int)compareToWithId:(id<OrgJodaTimeReadableDuration>)other {
  if (other != nil && ![(id) other conformsToProtocol: @protocol(OrgJodaTimeReadableDuration)]) {
    @throw [[JavaLangClassCastException alloc] init];
  }
  long long int thisMillis = [self getMillis];
  long long int otherMillis = [((id<OrgJodaTimeReadableDuration>) nil_chk(other)) getMillis];
  if (thisMillis < otherMillis) {
    return -1;
  }
  if (thisMillis > otherMillis) {
    return 1;
  }
  return 0;
}

- (BOOL)isEqualWithOrgJodaTimeReadableDuration:(id<OrgJodaTimeReadableDuration>)duration {
  if (duration == nil) {
    duration = OrgJodaTimeDuration_get_ZERO_();
  }
  return [self compareToWithId:duration] == 0;
}

- (BOOL)isLongerThanWithOrgJodaTimeReadableDuration:(id<OrgJodaTimeReadableDuration>)duration {
  if (duration == nil) {
    duration = OrgJodaTimeDuration_get_ZERO_();
  }
  return [self compareToWithId:duration] > 0;
}

- (BOOL)isShorterThanWithOrgJodaTimeReadableDuration:(id<OrgJodaTimeReadableDuration>)duration {
  if (duration == nil) {
    duration = OrgJodaTimeDuration_get_ZERO_();
  }
  return [self compareToWithId:duration] < 0;
}

- (BOOL)isEqual:(id)duration {
  if (self == duration) {
    return YES;
  }
  if ([duration conformsToProtocol: @protocol(OrgJodaTimeReadableDuration)] == NO) {
    return NO;
  }
  id<OrgJodaTimeReadableDuration> other = (id<OrgJodaTimeReadableDuration>) check_protocol_cast(duration, @protocol(OrgJodaTimeReadableDuration));
  return ([self getMillis] == [((id<OrgJodaTimeReadableDuration>) nil_chk(other)) getMillis]);
}

- (NSUInteger)hash {
  long long int len = [self getMillis];
  return (int) (len ^ ((long long) (((unsigned long long) len) >> 32)));
}

- (NSString *)description {
  long long int millis = [self getMillis];
  JavaLangStringBuffer *buf = [[JavaLangStringBuffer alloc] init];
  (void) [buf appendWithNSString:@"PT"];
  BOOL negative = (millis < 0);
  [OrgJodaTimeFormatFormatUtils appendUnpaddedIntegerWithJavaLangStringBuffer:buf withLong:millis];
  while ([buf sequenceLength] < (negative ? 7 : 6)) {
    (void) [buf insertWithInt:negative ? 3 : 2 withNSString:@"0"];
  }
  if ((millis / 1000) * 1000 == millis) {
    [buf setLengthWithInt:[buf sequenceLength] - 3];
  }
  else {
    (void) [buf insertWithInt:[buf sequenceLength] - 3 withNSString:@"."];
  }
  (void) [buf appendWithChar:'S'];
  return [buf description];
}

- (long long int)getMillis {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}
+ (IOSObjectArray *)__annotations_description {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[OrgJodaConvertToString alloc] init] } count:1 type:[IOSClass classWithProtocol:@protocol(JavaLangAnnotationAnnotation)]];
}


+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "init", "AbstractDuration", NULL, 0x4, NULL },
    { "toDuration", NULL, "Lorg.joda.time.Duration;", 0x1, NULL },
    { "toPeriod", NULL, "Lorg.joda.time.Period;", 0x1, NULL },
    { "compareToWithOrgJodaTimeReadableDuration:", "compareTo", "I", 0x1, NULL },
    { "isEqualWithOrgJodaTimeReadableDuration:", "isEqual", "Z", 0x1, NULL },
    { "isLongerThanWithOrgJodaTimeReadableDuration:", "isLongerThan", "Z", 0x1, NULL },
    { "isShorterThanWithOrgJodaTimeReadableDuration:", "isShorterThan", "Z", 0x1, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL },
    { "hash", "hashCode", "I", 0x1, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL },
    { "getMillis", NULL, "J", 0x401, NULL },
  };
  static J2ObjcClassInfo _OrgJodaTimeBaseAbstractDuration = { "AbstractDuration", "org.joda.time.base", NULL, 0x401, 11, methods, 0, NULL, 0, NULL};
  return &_OrgJodaTimeBaseAbstractDuration;
}

@end

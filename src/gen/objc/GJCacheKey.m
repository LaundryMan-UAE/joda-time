//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/andrewebling/Laundrapp/Joda-time-Project/joda-time/src/main/java/org/joda/time/chrono/GJCacheKey.java
//

#include "DateTimeZone.h"
#include "GJCacheKey.h"
#include "Instant.h"

@implementation OrgJodaTimeChronoGJCacheKey

- (instancetype)initWithOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)zone
                         withOrgJodaTimeInstant:(OrgJodaTimeInstant *)cutoverInstant
                                        withInt:(int)minDaysInFirstWeek {
  if (self = [super init]) {
    self->zone_ = zone;
    self->cutoverInstant_ = cutoverInstant;
    self->minDaysInFirstWeek_ = minDaysInFirstWeek;
  }
  return self;
}

- (NSUInteger)hash {
  int prime = 31;
  int result = 1;
  result = prime * result + ((cutoverInstant_ == nil) ? 0 : ((int) [cutoverInstant_ hash]));
  result = prime * result + minDaysInFirstWeek_;
  result = prime * result + ((zone_ == nil) ? 0 : ((int) [zone_ hash]));
  return result;
}

- (BOOL)isEqual:(id)obj {
  if (self == obj) {
    return YES;
  }
  if (obj == nil) {
    return NO;
  }
  if (!([obj isKindOfClass:[OrgJodaTimeChronoGJCacheKey class]])) {
    return NO;
  }
  OrgJodaTimeChronoGJCacheKey *other = (OrgJodaTimeChronoGJCacheKey *) check_class_cast(obj, [OrgJodaTimeChronoGJCacheKey class]);
  if (cutoverInstant_ == nil) {
    if (((OrgJodaTimeChronoGJCacheKey *) nil_chk(other))->cutoverInstant_ != nil) {
      return NO;
    }
  }
  else if (![cutoverInstant_ isEqual:((OrgJodaTimeChronoGJCacheKey *) nil_chk(other))->cutoverInstant_]) {
    return NO;
  }
  if (minDaysInFirstWeek_ != ((OrgJodaTimeChronoGJCacheKey *) nil_chk(other))->minDaysInFirstWeek_) {
    return NO;
  }
  if (zone_ == nil) {
    if (other->zone_ != nil) {
      return NO;
    }
  }
  else if (![zone_ isEqual:other->zone_]) {
    return NO;
  }
  return YES;
}

- (void)copyAllFieldsTo:(OrgJodaTimeChronoGJCacheKey *)other {
  [super copyAllFieldsTo:other];
  other->cutoverInstant_ = cutoverInstant_;
  other->minDaysInFirstWeek_ = minDaysInFirstWeek_;
  other->zone_ = zone_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "initWithOrgJodaTimeDateTimeZone:withOrgJodaTimeInstant:withInt:", "GJCacheKey", NULL, 0x0, NULL },
    { "hash", "hashCode", "I", 0x1, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "zone_", NULL, 0x12, "Lorg.joda.time.DateTimeZone;", NULL,  },
    { "cutoverInstant_", NULL, 0x12, "Lorg.joda.time.Instant;", NULL,  },
    { "minDaysInFirstWeek_", NULL, 0x12, "I", NULL,  },
  };
  static J2ObjcClassInfo _OrgJodaTimeChronoGJCacheKey = { "GJCacheKey", "org.joda.time.chrono", NULL, 0x0, 3, methods, 3, fields, 0, NULL};
  return &_OrgJodaTimeChronoGJCacheKey;
}

@end

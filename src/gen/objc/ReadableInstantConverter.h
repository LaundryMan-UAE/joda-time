//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nbransby/Documents/joda-time/src/main/java/org/joda/time/convert/ReadableInstantConverter.java
//

#ifndef _OrgJodaTimeConvertReadableInstantConverter_H_
#define _OrgJodaTimeConvertReadableInstantConverter_H_

@class IOSClass;
@class OrgJodaTimeChronology;
@class OrgJodaTimeDateTimeZone;

#import "JreEmulation.h"
#include "AbstractConverter.h"
#include "InstantConverter.h"
#include "PartialConverter.h"

/**
 @brief ReadableInstantConverter extracts milliseconds and chronology from a ReadableInstant.
 @author Stephen Colebourne
 @since 1.0
 */
@interface OrgJodaTimeConvertReadableInstantConverter : OrgJodaTimeConvertAbstractConverter < OrgJodaTimeConvertInstantConverter, OrgJodaTimeConvertPartialConverter > {
}

/**
 @brief Restricted constructor.
 */
- (instancetype)init;

/**
 @brief Gets the chronology, which is taken from the ReadableInstant.
 If the chronology on the instant is null, the ISOChronology in the specified time zone is used. If the chronology on the instant is not in the specified zone, it is adapted.
 @param object the ReadableInstant to convert, must not be null
 @param zone the specified zone to use, null means default zone
 @return the chronology, never null
 */
- (OrgJodaTimeChronology *)getChronologyWithId:(id)object
                   withOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)zone;

/**
 @brief Gets the chronology, which is taken from the ReadableInstant.
 <p> If the passed in chronology is non-null, it is used. Otherwise the chronology from the instant is used.
 @param object the ReadableInstant to convert, must not be null
 @param chrono the chronology to use, null means use that from object
 @return the chronology, never null
 */
- (OrgJodaTimeChronology *)getChronologyWithId:(id)object
                     withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono;

/**
 @brief Extracts the millis from an object of this convertor's type.
 @param object the ReadableInstant to convert, must not be null
 @param chrono the non-null result of getChronology
 @return the millisecond value
 @throws NullPointerException if the object is null
 @throws ClassCastException if the object is an invalid type
 */
- (jlong)getInstantMillisWithId:(id)object
      withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono;

/**
 @brief Returns ReadableInstant.class.
 @return ReadableInstant.class
 */
- (IOSClass *)getSupportedType;

@end

FOUNDATION_EXPORT BOOL OrgJodaTimeConvertReadableInstantConverter_initialized;
J2OBJC_STATIC_INIT(OrgJodaTimeConvertReadableInstantConverter)

FOUNDATION_EXPORT OrgJodaTimeConvertReadableInstantConverter *OrgJodaTimeConvertReadableInstantConverter_INSTANCE_;
J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeConvertReadableInstantConverter, INSTANCE_, OrgJodaTimeConvertReadableInstantConverter *)

#endif // _OrgJodaTimeConvertReadableInstantConverter_H_

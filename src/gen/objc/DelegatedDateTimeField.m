//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nbransby/Documents/joda-time/src/main/java/org/joda/time/field/DelegatedDateTimeField.java
//

#include "DateTimeField.h"
#include "DateTimeFieldType.h"
#include "DelegatedDateTimeField.h"
#include "DurationField.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "ReadablePartial.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/Locale.h"

@interface OrgJodaTimeFieldDelegatedDateTimeField () {
 @public
  /**
   @brief The DateTimeField being wrapped.
   */
  OrgJodaTimeDateTimeField *iField_;
  /**
   @brief The range duration.
   */
  OrgJodaTimeDurationField *iRangeDurationField_;
  /**
   @brief The override field type.
   */
  OrgJodaTimeDateTimeFieldType *iType_;
}
@end

J2OBJC_FIELD_SETTER(OrgJodaTimeFieldDelegatedDateTimeField, iField_, OrgJodaTimeDateTimeField *)
J2OBJC_FIELD_SETTER(OrgJodaTimeFieldDelegatedDateTimeField, iRangeDurationField_, OrgJodaTimeDurationField *)
J2OBJC_FIELD_SETTER(OrgJodaTimeFieldDelegatedDateTimeField, iType_, OrgJodaTimeDateTimeFieldType *)

@implementation OrgJodaTimeFieldDelegatedDateTimeField

- (instancetype)initWithOrgJodaTimeDateTimeField:(OrgJodaTimeDateTimeField *)field {
  return [self initOrgJodaTimeFieldDelegatedDateTimeFieldWithOrgJodaTimeDateTimeField:field withOrgJodaTimeDateTimeFieldType:nil];
}

- (instancetype)initOrgJodaTimeFieldDelegatedDateTimeFieldWithOrgJodaTimeDateTimeField:(OrgJodaTimeDateTimeField *)field
                                                      withOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)type {
  return [self initOrgJodaTimeFieldDelegatedDateTimeFieldWithOrgJodaTimeDateTimeField:field withOrgJodaTimeDurationField:nil withOrgJodaTimeDateTimeFieldType:type];
}

- (instancetype)initWithOrgJodaTimeDateTimeField:(OrgJodaTimeDateTimeField *)field
                withOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)type {
  return [self initOrgJodaTimeFieldDelegatedDateTimeFieldWithOrgJodaTimeDateTimeField:field withOrgJodaTimeDateTimeFieldType:type];
}

- (instancetype)initOrgJodaTimeFieldDelegatedDateTimeFieldWithOrgJodaTimeDateTimeField:(OrgJodaTimeDateTimeField *)field
                                                          withOrgJodaTimeDurationField:(OrgJodaTimeDurationField *)rangeField
                                                      withOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)type {
  if (self = [super init]) {
    if (field == nil) {
      @throw [[[JavaLangIllegalArgumentException alloc] initWithNSString:@"The field must not be null"] autorelease];
    }
    OrgJodaTimeFieldDelegatedDateTimeField_set_iField_(self, field);
    OrgJodaTimeFieldDelegatedDateTimeField_set_iRangeDurationField_(self, rangeField);
    OrgJodaTimeFieldDelegatedDateTimeField_set_iType_(self, (type == nil ? [((OrgJodaTimeDateTimeField *) nil_chk(field)) getType] : type));
  }
  return self;
}

- (instancetype)initWithOrgJodaTimeDateTimeField:(OrgJodaTimeDateTimeField *)field
                    withOrgJodaTimeDurationField:(OrgJodaTimeDurationField *)rangeField
                withOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)type {
  return [self initOrgJodaTimeFieldDelegatedDateTimeFieldWithOrgJodaTimeDateTimeField:field withOrgJodaTimeDurationField:rangeField withOrgJodaTimeDateTimeFieldType:type];
}

- (OrgJodaTimeDateTimeField *)getWrappedField {
  return iField_;
}

- (OrgJodaTimeDateTimeFieldType *)getType {
  return iType_;
}

- (NSString *)getName {
  return [((OrgJodaTimeDateTimeFieldType *) nil_chk(iType_)) getName];
}

- (jboolean)isSupported {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) isSupported];
}

- (jboolean)isLenient {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) isLenient];
}

- (jint)getWithLong:(jlong)instant {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) getWithLong:instant];
}

- (NSString *)getAsTextWithLong:(jlong)instant
             withJavaUtilLocale:(JavaUtilLocale *)locale {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) getAsTextWithLong:instant withJavaUtilLocale:locale];
}

- (NSString *)getAsTextWithLong:(jlong)instant {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) getAsTextWithLong:instant];
}

- (NSString *)getAsTextWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)partial
                                              withInt:(jint)fieldValue
                                   withJavaUtilLocale:(JavaUtilLocale *)locale {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) getAsTextWithOrgJodaTimeReadablePartial:partial withInt:fieldValue withJavaUtilLocale:locale];
}

- (NSString *)getAsTextWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)partial
                                   withJavaUtilLocale:(JavaUtilLocale *)locale {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) getAsTextWithOrgJodaTimeReadablePartial:partial withJavaUtilLocale:locale];
}

- (NSString *)getAsTextWithInt:(jint)fieldValue
            withJavaUtilLocale:(JavaUtilLocale *)locale {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) getAsTextWithInt:fieldValue withJavaUtilLocale:locale];
}

- (NSString *)getAsShortTextWithLong:(jlong)instant
                  withJavaUtilLocale:(JavaUtilLocale *)locale {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) getAsShortTextWithLong:instant withJavaUtilLocale:locale];
}

- (NSString *)getAsShortTextWithLong:(jlong)instant {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) getAsShortTextWithLong:instant];
}

- (NSString *)getAsShortTextWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)partial
                                                   withInt:(jint)fieldValue
                                        withJavaUtilLocale:(JavaUtilLocale *)locale {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) getAsShortTextWithOrgJodaTimeReadablePartial:partial withInt:fieldValue withJavaUtilLocale:locale];
}

- (NSString *)getAsShortTextWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)partial
                                        withJavaUtilLocale:(JavaUtilLocale *)locale {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) getAsShortTextWithOrgJodaTimeReadablePartial:partial withJavaUtilLocale:locale];
}

- (NSString *)getAsShortTextWithInt:(jint)fieldValue
                 withJavaUtilLocale:(JavaUtilLocale *)locale {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) getAsShortTextWithInt:fieldValue withJavaUtilLocale:locale];
}

- (jlong)addWithLong:(jlong)instant
             withInt:(jint)value {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) addWithLong:instant withInt:value];
}

- (jlong)addWithLong:(jlong)instant
            withLong:(jlong)value {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) addWithLong:instant withLong:value];
}

- (IOSIntArray *)addWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant
                                           withInt:(jint)fieldIndex
                                      withIntArray:(IOSIntArray *)values
                                           withInt:(jint)valueToAdd {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) addWithOrgJodaTimeReadablePartial:instant withInt:fieldIndex withIntArray:values withInt:valueToAdd];
}

- (IOSIntArray *)addWrapPartialWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant
                                                      withInt:(jint)fieldIndex
                                                 withIntArray:(IOSIntArray *)values
                                                      withInt:(jint)valueToAdd {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) addWrapPartialWithOrgJodaTimeReadablePartial:instant withInt:fieldIndex withIntArray:values withInt:valueToAdd];
}

- (jlong)addWrapFieldWithLong:(jlong)instant
                      withInt:(jint)value {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) addWrapFieldWithLong:instant withInt:value];
}

- (IOSIntArray *)addWrapFieldWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant
                                                    withInt:(jint)fieldIndex
                                               withIntArray:(IOSIntArray *)values
                                                    withInt:(jint)valueToAdd {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) addWrapFieldWithOrgJodaTimeReadablePartial:instant withInt:fieldIndex withIntArray:values withInt:valueToAdd];
}

- (jint)getDifferenceWithLong:(jlong)minuendInstant
                     withLong:(jlong)subtrahendInstant {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) getDifferenceWithLong:minuendInstant withLong:subtrahendInstant];
}

- (jlong)getDifferenceAsLongWithLong:(jlong)minuendInstant
                            withLong:(jlong)subtrahendInstant {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) getDifferenceAsLongWithLong:minuendInstant withLong:subtrahendInstant];
}

- (jlong)setWithLong:(jlong)instant
             withInt:(jint)value {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) setWithLong:instant withInt:value];
}

- (jlong)setWithLong:(jlong)instant
        withNSString:(NSString *)text
  withJavaUtilLocale:(JavaUtilLocale *)locale {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) setWithLong:instant withNSString:text withJavaUtilLocale:locale];
}

- (jlong)setWithLong:(jlong)instant
        withNSString:(NSString *)text {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) setWithLong:instant withNSString:text];
}

- (IOSIntArray *)setWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant
                                           withInt:(jint)fieldIndex
                                      withIntArray:(IOSIntArray *)values
                                           withInt:(jint)newValue {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) setWithOrgJodaTimeReadablePartial:instant withInt:fieldIndex withIntArray:values withInt:newValue];
}

- (IOSIntArray *)setWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant
                                           withInt:(jint)fieldIndex
                                      withIntArray:(IOSIntArray *)values
                                      withNSString:(NSString *)text
                                withJavaUtilLocale:(JavaUtilLocale *)locale {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) setWithOrgJodaTimeReadablePartial:instant withInt:fieldIndex withIntArray:values withNSString:text withJavaUtilLocale:locale];
}

- (OrgJodaTimeDurationField *)getDurationField {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) getDurationField];
}

- (OrgJodaTimeDurationField *)getRangeDurationField {
  if (iRangeDurationField_ != nil) {
    return iRangeDurationField_;
  }
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) getRangeDurationField];
}

- (jboolean)isLeapWithLong:(jlong)instant {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) isLeapWithLong:instant];
}

- (jint)getLeapAmountWithLong:(jlong)instant {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) getLeapAmountWithLong:instant];
}

- (OrgJodaTimeDurationField *)getLeapDurationField {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) getLeapDurationField];
}

- (jint)getMinimumValue {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) getMinimumValue];
}

- (jint)getMinimumValueWithLong:(jlong)instant {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) getMinimumValueWithLong:instant];
}

- (jint)getMinimumValueWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) getMinimumValueWithOrgJodaTimeReadablePartial:instant];
}

- (jint)getMinimumValueWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant
                                         withIntArray:(IOSIntArray *)values {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) getMinimumValueWithOrgJodaTimeReadablePartial:instant withIntArray:values];
}

- (jint)getMaximumValue {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) getMaximumValue];
}

- (jint)getMaximumValueWithLong:(jlong)instant {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) getMaximumValueWithLong:instant];
}

- (jint)getMaximumValueWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) getMaximumValueWithOrgJodaTimeReadablePartial:instant];
}

- (jint)getMaximumValueWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant
                                         withIntArray:(IOSIntArray *)values {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) getMaximumValueWithOrgJodaTimeReadablePartial:instant withIntArray:values];
}

- (jint)getMaximumTextLengthWithJavaUtilLocale:(JavaUtilLocale *)locale {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) getMaximumTextLengthWithJavaUtilLocale:locale];
}

- (jint)getMaximumShortTextLengthWithJavaUtilLocale:(JavaUtilLocale *)locale {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) getMaximumShortTextLengthWithJavaUtilLocale:locale];
}

- (jlong)roundFloorWithLong:(jlong)instant {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) roundFloorWithLong:instant];
}

- (jlong)roundCeilingWithLong:(jlong)instant {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) roundCeilingWithLong:instant];
}

- (jlong)roundHalfFloorWithLong:(jlong)instant {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) roundHalfFloorWithLong:instant];
}

- (jlong)roundHalfCeilingWithLong:(jlong)instant {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) roundHalfCeilingWithLong:instant];
}

- (jlong)roundHalfEvenWithLong:(jlong)instant {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) roundHalfEvenWithLong:instant];
}

- (jlong)remainderWithLong:(jlong)instant {
  return [((OrgJodaTimeDateTimeField *) nil_chk(iField_)) remainderWithLong:instant];
}

- (NSString *)description {
  return (JreStrcat("$$C", @"DateTimeField[", [self getName], ']'));
}

- (void)dealloc {
  RELEASE_(iField_);
  RELEASE_(iRangeDurationField_);
  RELEASE_(iType_);
  [super dealloc];
}

- (void)copyAllFieldsTo:(OrgJodaTimeFieldDelegatedDateTimeField *)other {
  [super copyAllFieldsTo:other];
  OrgJodaTimeFieldDelegatedDateTimeField_set_iField_(other, iField_);
  OrgJodaTimeFieldDelegatedDateTimeField_set_iRangeDurationField_(other, iRangeDurationField_);
  OrgJodaTimeFieldDelegatedDateTimeField_set_iType_(other, iType_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgJodaTimeDateTimeField:", "DelegatedDateTimeField", NULL, 0x1, NULL },
    { "initWithOrgJodaTimeDateTimeField:withOrgJodaTimeDateTimeFieldType:", "DelegatedDateTimeField", NULL, 0x1, NULL },
    { "initWithOrgJodaTimeDateTimeField:withOrgJodaTimeDurationField:withOrgJodaTimeDateTimeFieldType:", "DelegatedDateTimeField", NULL, 0x1, NULL },
    { "getWrappedField", NULL, "Lorg.joda.time.DateTimeField;", 0x11, NULL },
    { "getType", NULL, "Lorg.joda.time.DateTimeFieldType;", 0x1, NULL },
    { "getName", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "isSupported", NULL, "Z", 0x1, NULL },
    { "isLenient", NULL, "Z", 0x1, NULL },
    { "getWithLong:", "get", "I", 0x1, NULL },
    { "getAsTextWithLong:withJavaUtilLocale:", "getAsText", "Ljava.lang.String;", 0x1, NULL },
    { "getAsTextWithLong:", "getAsText", "Ljava.lang.String;", 0x1, NULL },
    { "getAsTextWithOrgJodaTimeReadablePartial:withInt:withJavaUtilLocale:", "getAsText", "Ljava.lang.String;", 0x1, NULL },
    { "getAsTextWithOrgJodaTimeReadablePartial:withJavaUtilLocale:", "getAsText", "Ljava.lang.String;", 0x1, NULL },
    { "getAsTextWithInt:withJavaUtilLocale:", "getAsText", "Ljava.lang.String;", 0x1, NULL },
    { "getAsShortTextWithLong:withJavaUtilLocale:", "getAsShortText", "Ljava.lang.String;", 0x1, NULL },
    { "getAsShortTextWithLong:", "getAsShortText", "Ljava.lang.String;", 0x1, NULL },
    { "getAsShortTextWithOrgJodaTimeReadablePartial:withInt:withJavaUtilLocale:", "getAsShortText", "Ljava.lang.String;", 0x1, NULL },
    { "getAsShortTextWithOrgJodaTimeReadablePartial:withJavaUtilLocale:", "getAsShortText", "Ljava.lang.String;", 0x1, NULL },
    { "getAsShortTextWithInt:withJavaUtilLocale:", "getAsShortText", "Ljava.lang.String;", 0x1, NULL },
    { "addWithLong:withInt:", "add", "J", 0x1, NULL },
    { "addWithLong:withLong:", "add", "J", 0x1, NULL },
    { "addWithOrgJodaTimeReadablePartial:withInt:withIntArray:withInt:", "add", "[I", 0x1, NULL },
    { "addWrapPartialWithOrgJodaTimeReadablePartial:withInt:withIntArray:withInt:", "addWrapPartial", "[I", 0x1, NULL },
    { "addWrapFieldWithLong:withInt:", "addWrapField", "J", 0x1, NULL },
    { "addWrapFieldWithOrgJodaTimeReadablePartial:withInt:withIntArray:withInt:", "addWrapField", "[I", 0x1, NULL },
    { "getDifferenceWithLong:withLong:", "getDifference", "I", 0x1, NULL },
    { "getDifferenceAsLongWithLong:withLong:", "getDifferenceAsLong", "J", 0x1, NULL },
    { "setWithLong:withInt:", "set", "J", 0x1, NULL },
    { "setWithLong:withNSString:withJavaUtilLocale:", "set", "J", 0x1, NULL },
    { "setWithLong:withNSString:", "set", "J", 0x1, NULL },
    { "setWithOrgJodaTimeReadablePartial:withInt:withIntArray:withInt:", "set", "[I", 0x1, NULL },
    { "setWithOrgJodaTimeReadablePartial:withInt:withIntArray:withNSString:withJavaUtilLocale:", "set", "[I", 0x1, NULL },
    { "getDurationField", NULL, "Lorg.joda.time.DurationField;", 0x1, NULL },
    { "getRangeDurationField", NULL, "Lorg.joda.time.DurationField;", 0x1, NULL },
    { "isLeapWithLong:", "isLeap", "Z", 0x1, NULL },
    { "getLeapAmountWithLong:", "getLeapAmount", "I", 0x1, NULL },
    { "getLeapDurationField", NULL, "Lorg.joda.time.DurationField;", 0x1, NULL },
    { "getMinimumValue", NULL, "I", 0x1, NULL },
    { "getMinimumValueWithLong:", "getMinimumValue", "I", 0x1, NULL },
    { "getMinimumValueWithOrgJodaTimeReadablePartial:", "getMinimumValue", "I", 0x1, NULL },
    { "getMinimumValueWithOrgJodaTimeReadablePartial:withIntArray:", "getMinimumValue", "I", 0x1, NULL },
    { "getMaximumValue", NULL, "I", 0x1, NULL },
    { "getMaximumValueWithLong:", "getMaximumValue", "I", 0x1, NULL },
    { "getMaximumValueWithOrgJodaTimeReadablePartial:", "getMaximumValue", "I", 0x1, NULL },
    { "getMaximumValueWithOrgJodaTimeReadablePartial:withIntArray:", "getMaximumValue", "I", 0x1, NULL },
    { "getMaximumTextLengthWithJavaUtilLocale:", "getMaximumTextLength", "I", 0x1, NULL },
    { "getMaximumShortTextLengthWithJavaUtilLocale:", "getMaximumShortTextLength", "I", 0x1, NULL },
    { "roundFloorWithLong:", "roundFloor", "J", 0x1, NULL },
    { "roundCeilingWithLong:", "roundCeiling", "J", 0x1, NULL },
    { "roundHalfFloorWithLong:", "roundHalfFloor", "J", 0x1, NULL },
    { "roundHalfCeilingWithLong:", "roundHalfCeiling", "J", 0x1, NULL },
    { "roundHalfEvenWithLong:", "roundHalfEven", "J", 0x1, NULL },
    { "remainderWithLong:", "remainder", "J", 0x1, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, .constantValue.asLong = OrgJodaTimeFieldDelegatedDateTimeField_serialVersionUID },
    { "iField_", NULL, 0x12, "Lorg.joda.time.DateTimeField;", NULL,  },
    { "iRangeDurationField_", NULL, 0x12, "Lorg.joda.time.DurationField;", NULL,  },
    { "iType_", NULL, 0x12, "Lorg.joda.time.DateTimeFieldType;", NULL,  },
  };
  static const J2ObjcClassInfo _OrgJodaTimeFieldDelegatedDateTimeField = { 1, "DelegatedDateTimeField", "org.joda.time.field", NULL, 0x1, 54, methods, 4, fields, 0, NULL};
  return &_OrgJodaTimeFieldDelegatedDateTimeField;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaTimeFieldDelegatedDateTimeField)

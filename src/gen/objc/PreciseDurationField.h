//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nbransby/Documents/joda-time/src/main/java/org/joda/time/field/PreciseDurationField.java
//

#ifndef _OrgJodaTimeFieldPreciseDurationField_H_
#define _OrgJodaTimeFieldPreciseDurationField_H_

@class OrgJodaTimeDurationFieldType;

#import "JreEmulation.h"
#include "BaseDurationField.h"

#define OrgJodaTimeFieldPreciseDurationField_serialVersionUID -8346152187724495365LL

/**
 @brief Duration field class representing a field with a fixed unit length.
 <p> PreciseDurationField is thread-safe and immutable.
 @author Stephen Colebourne
 @author Brian S O'Neill
 @since 1.0
 */
@interface OrgJodaTimeFieldPreciseDurationField : OrgJodaTimeFieldBaseDurationField {
 @public
  /**
   @brief The size of the unit
   */
  jlong iUnitMillis_;
}

/**
 @brief Constructor.
 @param type the field type
 @param unitMillis the unit milliseconds
 */
- (instancetype)initWithOrgJodaTimeDurationFieldType:(OrgJodaTimeDurationFieldType *)type
                                            withLong:(jlong)unitMillis;

/**
 @brief This field is precise.
 @return true always
 */
- (jboolean)isPrecise;

/**
 @brief Returns the amount of milliseconds per unit value of this field.
 @return the unit size of this field, in milliseconds
 */
- (jlong)getUnitMillis;

/**
 @brief Get the value of this field from the milliseconds.
 @param duration the milliseconds to query, which may be negative
 @param instant ignored
 @return the value of the field, in the units of the field, which may be negative
 */
- (jlong)getValueAsLongWithLong:(jlong)duration
                       withLong:(jlong)instant;

/**
 @brief Get the millisecond duration of this field from its value.
 @param value the value of the field, which may be negative
 @param instant ignored
 @return the milliseconds that the field represents, which may be negative
 */
- (jlong)getMillisWithInt:(jint)value
                 withLong:(jlong)instant;

/**
 @brief Get the millisecond duration of this field from its value.
 @param value the value of the field, which may be negative
 @param instant ignored
 @return the milliseconds that the field represents, which may be negative
 */
- (jlong)getMillisWithLong:(jlong)value
                  withLong:(jlong)instant;

- (jlong)addWithLong:(jlong)instant
             withInt:(jint)value;

- (jlong)addWithLong:(jlong)instant
            withLong:(jlong)value;

- (jlong)getDifferenceAsLongWithLong:(jlong)minuendInstant
                            withLong:(jlong)subtrahendInstant;

/**
 @brief Compares this duration field to another.
 Two fields are equal if of the same type and duration.
 @param obj the object to compare to
 @return if equal
 */
- (jboolean)isEqual:(id)obj;

/**
 @brief Gets a hash code for this instance.
 @return a suitable hashcode
 */
- (NSUInteger)hash;

- (void)copyAllFieldsTo:(OrgJodaTimeFieldPreciseDurationField *)other;

@end

__attribute__((always_inline)) inline void OrgJodaTimeFieldPreciseDurationField_init() {}

J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeFieldPreciseDurationField, serialVersionUID, jlong)

#endif // _OrgJodaTimeFieldPreciseDurationField_H_

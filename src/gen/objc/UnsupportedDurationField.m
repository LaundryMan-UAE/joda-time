//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/andrewebling/Laundrapp/Joda-time-Project/joda-time/src/main/java/org/joda/time/field/UnsupportedDurationField.java
//

#include "DurationField.h"
#include "DurationFieldType.h"
#include "UnsupportedDurationField.h"
#include "java/lang/ClassCastException.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/HashMap.h"

@implementation OrgJodaTimeFieldUnsupportedDurationField

JavaUtilHashMap * OrgJodaTimeFieldUnsupportedDurationField_cCache_;

+ (OrgJodaTimeFieldUnsupportedDurationField *)getInstanceWithOrgJodaTimeDurationFieldType:(OrgJodaTimeDurationFieldType *)type {
  @synchronized([OrgJodaTimeFieldUnsupportedDurationField getClass]) {
    {
      OrgJodaTimeFieldUnsupportedDurationField *field;
      if (OrgJodaTimeFieldUnsupportedDurationField_cCache_ == nil) {
        OrgJodaTimeFieldUnsupportedDurationField_cCache_ = [[JavaUtilHashMap alloc] initWithInt:7];
        field = nil;
      }
      else {
        field = [OrgJodaTimeFieldUnsupportedDurationField_cCache_ getWithId:type];
      }
      if (field == nil) {
        field = [[OrgJodaTimeFieldUnsupportedDurationField alloc] initWithOrgJodaTimeDurationFieldType:type];
        (void) [((JavaUtilHashMap *) nil_chk(OrgJodaTimeFieldUnsupportedDurationField_cCache_)) putWithId:type withId:field];
      }
      return field;
    }
  }
}

- (instancetype)initWithOrgJodaTimeDurationFieldType:(OrgJodaTimeDurationFieldType *)type {
  if (self = [super init]) {
    iType_ = type;
  }
  return self;
}

- (OrgJodaTimeDurationFieldType *)getType {
  return iType_;
}

- (NSString *)getName {
  return [((OrgJodaTimeDurationFieldType *) nil_chk(iType_)) getName];
}

- (BOOL)isSupported {
  return NO;
}

- (BOOL)isPrecise {
  return YES;
}

- (int)getValueWithLong:(long long int)duration {
  @throw [self unsupported];
}

- (long long int)getValueAsLongWithLong:(long long int)duration {
  @throw [self unsupported];
}

- (int)getValueWithLong:(long long int)duration
               withLong:(long long int)instant {
  @throw [self unsupported];
}

- (long long int)getValueAsLongWithLong:(long long int)duration
                               withLong:(long long int)instant {
  @throw [self unsupported];
}

- (long long int)getMillisWithInt:(int)value {
  @throw [self unsupported];
}

- (long long int)getMillisWithLong:(long long int)value {
  @throw [self unsupported];
}

- (long long int)getMillisWithInt:(int)value
                         withLong:(long long int)instant {
  @throw [self unsupported];
}

- (long long int)getMillisWithLong:(long long int)value
                          withLong:(long long int)instant {
  @throw [self unsupported];
}

- (long long int)addWithLong:(long long int)instant
                     withInt:(int)value {
  @throw [self unsupported];
}

- (long long int)addWithLong:(long long int)instant
                    withLong:(long long int)value {
  @throw [self unsupported];
}

- (int)getDifferenceWithLong:(long long int)minuendInstant
                    withLong:(long long int)subtrahendInstant {
  @throw [self unsupported];
}

- (long long int)getDifferenceAsLongWithLong:(long long int)minuendInstant
                                    withLong:(long long int)subtrahendInstant {
  @throw [self unsupported];
}

- (long long int)getUnitMillis {
  return 0;
}

- (int)compareToWithId:(OrgJodaTimeDurationField *)durationField {
  if (durationField != nil && ![durationField isKindOfClass:[OrgJodaTimeDurationField class]]) {
    @throw [[JavaLangClassCastException alloc] init];
  }
  return 0;
}

- (BOOL)isEqual:(id)obj {
  if (self == obj) {
    return YES;
  }
  else if ([obj isKindOfClass:[OrgJodaTimeFieldUnsupportedDurationField class]]) {
    OrgJodaTimeFieldUnsupportedDurationField *other = (OrgJodaTimeFieldUnsupportedDurationField *) check_class_cast(obj, [OrgJodaTimeFieldUnsupportedDurationField class]);
    if ([((OrgJodaTimeFieldUnsupportedDurationField *) nil_chk(other)) getName] == nil) {
      return ([self getName] == nil);
    }
    return ([((NSString *) nil_chk([other getName])) isEqual:[self getName]]);
  }
  return NO;
}

- (NSUInteger)hash {
  return ((int) [((NSString *) nil_chk([self getName])) hash]);
}

- (NSString *)description {
  return [NSString stringWithFormat:@"UnsupportedDurationField[%@]", [self getName]];
}

- (id)readResolve {
  return [OrgJodaTimeFieldUnsupportedDurationField getInstanceWithOrgJodaTimeDurationFieldType:iType_];
}

- (JavaLangUnsupportedOperationException *)unsupported {
  return [[JavaLangUnsupportedOperationException alloc] initWithNSString:[NSString stringWithFormat:@"%@ field is unsupported", iType_]];
}

- (void)copyAllFieldsTo:(OrgJodaTimeFieldUnsupportedDurationField *)other {
  [super copyAllFieldsTo:other];
  other->iType_ = iType_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "getInstanceWithOrgJodaTimeDurationFieldType:", "getInstance", "Lorg.joda.time.field.UnsupportedDurationField;", 0x29, NULL },
    { "initWithOrgJodaTimeDurationFieldType:", "UnsupportedDurationField", NULL, 0x2, NULL },
    { "getType", NULL, "Lorg.joda.time.DurationFieldType;", 0x11, NULL },
    { "getName", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "isSupported", NULL, "Z", 0x1, NULL },
    { "isPrecise", NULL, "Z", 0x1, NULL },
    { "getValueWithLong:", "getValue", "I", 0x1, NULL },
    { "getValueAsLongWithLong:", "getValueAsLong", "J", 0x1, NULL },
    { "getValueWithLong:withLong:", "getValue", "I", 0x1, NULL },
    { "getValueAsLongWithLong:withLong:", "getValueAsLong", "J", 0x1, NULL },
    { "getMillisWithInt:", "getMillis", "J", 0x1, NULL },
    { "getMillisWithLong:", "getMillis", "J", 0x1, NULL },
    { "getMillisWithInt:withLong:", "getMillis", "J", 0x1, NULL },
    { "getMillisWithLong:withLong:", "getMillis", "J", 0x1, NULL },
    { "addWithLong:withInt:", "add", "J", 0x1, NULL },
    { "addWithLong:withLong:", "add", "J", 0x1, NULL },
    { "getDifferenceWithLong:withLong:", "getDifference", "I", 0x1, NULL },
    { "getDifferenceAsLongWithLong:withLong:", "getDifferenceAsLong", "J", 0x1, NULL },
    { "getUnitMillis", NULL, "J", 0x1, NULL },
    { "compareToWithOrgJodaTimeDurationField:", "compareTo", "I", 0x1, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL },
    { "hash", "hashCode", "I", 0x1, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL },
    { "readResolve", NULL, "Ljava.lang.Object;", 0x2, NULL },
    { "unsupported", NULL, "Ljava.lang.UnsupportedOperationException;", 0x2, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, .constantValue.asLong = OrgJodaTimeFieldUnsupportedDurationField_serialVersionUID },
    { "cCache_", NULL, 0xa, "Ljava.util.HashMap;", &OrgJodaTimeFieldUnsupportedDurationField_cCache_,  },
    { "iType_", NULL, 0x12, "Lorg.joda.time.DurationFieldType;", NULL,  },
  };
  static J2ObjcClassInfo _OrgJodaTimeFieldUnsupportedDurationField = { "UnsupportedDurationField", "org.joda.time.field", NULL, 0x11, 25, methods, 3, fields, 0, NULL};
  return &_OrgJodaTimeFieldUnsupportedDurationField;
}

@end

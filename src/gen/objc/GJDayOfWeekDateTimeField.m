//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nbransby/Documents/joda-time/src/main/java/org/joda/time/chrono/GJDayOfWeekDateTimeField.java
//

#include "BasicChronology.h"
#include "DateTimeConstants.h"
#include "DateTimeField.h"
#include "DateTimeFieldType.h"
#include "DurationField.h"
#include "GJDayOfWeekDateTimeField.h"
#include "GJLocaleSymbols.h"
#include "J2ObjC_source.h"
#include "java/util/Locale.h"

@interface OrgJodaTimeChronoGJDayOfWeekDateTimeField () {
 @public
  OrgJodaTimeChronoBasicChronology *iChronology_;
}

/**
 @brief Serialization singleton
 */
- (id)readResolve;
@end

J2OBJC_FIELD_SETTER(OrgJodaTimeChronoGJDayOfWeekDateTimeField, iChronology_, OrgJodaTimeChronoBasicChronology *)

@implementation OrgJodaTimeChronoGJDayOfWeekDateTimeField

- (instancetype)initWithOrgJodaTimeChronoBasicChronology:(OrgJodaTimeChronoBasicChronology *)chronology
                            withOrgJodaTimeDurationField:(OrgJodaTimeDurationField *)days {
  if (self = [super initWithOrgJodaTimeDateTimeFieldType:OrgJodaTimeDateTimeFieldType_dayOfWeek() withOrgJodaTimeDurationField:days]) {
    OrgJodaTimeChronoGJDayOfWeekDateTimeField_set_iChronology_(self, chronology);
  }
  return self;
}

- (jint)getWithLong:(jlong)instant {
  return [((OrgJodaTimeChronoBasicChronology *) nil_chk(iChronology_)) getDayOfWeekWithLong:instant];
}

- (NSString *)getAsTextWithInt:(jint)fieldValue
            withJavaUtilLocale:(JavaUtilLocale *)locale {
  return [((OrgJodaTimeChronoGJLocaleSymbols *) nil_chk(OrgJodaTimeChronoGJLocaleSymbols_forLocaleWithJavaUtilLocale_(locale))) dayOfWeekValueToTextWithInt:fieldValue];
}

- (NSString *)getAsShortTextWithInt:(jint)fieldValue
                 withJavaUtilLocale:(JavaUtilLocale *)locale {
  return [((OrgJodaTimeChronoGJLocaleSymbols *) nil_chk(OrgJodaTimeChronoGJLocaleSymbols_forLocaleWithJavaUtilLocale_(locale))) dayOfWeekValueToShortTextWithInt:fieldValue];
}

- (jint)convertTextWithNSString:(NSString *)text
             withJavaUtilLocale:(JavaUtilLocale *)locale {
  return [((OrgJodaTimeChronoGJLocaleSymbols *) nil_chk(OrgJodaTimeChronoGJLocaleSymbols_forLocaleWithJavaUtilLocale_(locale))) dayOfWeekTextToValueWithNSString:text];
}

- (OrgJodaTimeDurationField *)getRangeDurationField {
  return [((OrgJodaTimeChronoBasicChronology *) nil_chk(iChronology_)) weeks];
}

- (jint)getMinimumValue {
  return OrgJodaTimeDateTimeConstants_MONDAY;
}

- (jint)getMaximumValue {
  return OrgJodaTimeDateTimeConstants_SUNDAY;
}

- (jint)getMaximumTextLengthWithJavaUtilLocale:(JavaUtilLocale *)locale {
  return [((OrgJodaTimeChronoGJLocaleSymbols *) nil_chk(OrgJodaTimeChronoGJLocaleSymbols_forLocaleWithJavaUtilLocale_(locale))) getDayOfWeekMaxTextLength];
}

- (jint)getMaximumShortTextLengthWithJavaUtilLocale:(JavaUtilLocale *)locale {
  return [((OrgJodaTimeChronoGJLocaleSymbols *) nil_chk(OrgJodaTimeChronoGJLocaleSymbols_forLocaleWithJavaUtilLocale_(locale))) getDayOfWeekMaxShortTextLength];
}

- (id)readResolve {
  return [((OrgJodaTimeChronoBasicChronology *) nil_chk(iChronology_)) dayOfWeek];
}

- (void)dealloc {
  RELEASE_(iChronology_);
  [super dealloc];
}

- (void)copyAllFieldsTo:(OrgJodaTimeChronoGJDayOfWeekDateTimeField *)other {
  [super copyAllFieldsTo:other];
  OrgJodaTimeChronoGJDayOfWeekDateTimeField_set_iChronology_(other, iChronology_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgJodaTimeChronoBasicChronology:withOrgJodaTimeDurationField:", "GJDayOfWeekDateTimeField", NULL, 0x0, NULL },
    { "getWithLong:", "get", "I", 0x1, NULL },
    { "getAsTextWithInt:withJavaUtilLocale:", "getAsText", "Ljava.lang.String;", 0x1, NULL },
    { "getAsShortTextWithInt:withJavaUtilLocale:", "getAsShortText", "Ljava.lang.String;", 0x1, NULL },
    { "convertTextWithNSString:withJavaUtilLocale:", "convertText", "I", 0x4, NULL },
    { "getRangeDurationField", NULL, "Lorg.joda.time.DurationField;", 0x1, NULL },
    { "getMinimumValue", NULL, "I", 0x1, NULL },
    { "getMaximumValue", NULL, "I", 0x1, NULL },
    { "getMaximumTextLengthWithJavaUtilLocale:", "getMaximumTextLength", "I", 0x1, NULL },
    { "getMaximumShortTextLengthWithJavaUtilLocale:", "getMaximumShortTextLength", "I", 0x1, NULL },
    { "readResolve", NULL, "Ljava.lang.Object;", 0x2, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, .constantValue.asLong = OrgJodaTimeChronoGJDayOfWeekDateTimeField_serialVersionUID },
    { "iChronology_", NULL, 0x12, "Lorg.joda.time.chrono.BasicChronology;", NULL,  },
  };
  static const J2ObjcClassInfo _OrgJodaTimeChronoGJDayOfWeekDateTimeField = { 1, "GJDayOfWeekDateTimeField", "org.joda.time.chrono", NULL, 0x10, 11, methods, 2, fields, 0, NULL};
  return &_OrgJodaTimeChronoGJDayOfWeekDateTimeField;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaTimeChronoGJDayOfWeekDateTimeField)

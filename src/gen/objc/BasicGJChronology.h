//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/andrewebling/Laundrapp/Joda-time-Project/joda-time/src/main/java/org/joda/time/chrono/BasicGJChronology.java
//

#ifndef _OrgJodaTimeChronoBasicGJChronology_H_
#define _OrgJodaTimeChronoBasicGJChronology_H_

@class IOSIntArray;
@class IOSLongArray;
@class OrgJodaTimeChronology;

#import "JreEmulation.h"
#include "BasicChronology.h"

#define OrgJodaTimeChronoBasicGJChronology_FEB_29 5097600000LL
#define OrgJodaTimeChronoBasicGJChronology_serialVersionUID 538276888268LL

/**
 @brief Abstract Chronology for implementing chronologies based on Gregorian/Julian formulae.
 Most of the utility methods required by subclasses are package-private, reflecting the intention that they be defined in the same package. <p> BasicGJChronology is thread-safe and immutable, and all subclasses must be as well.
 @author Stephen Colebourne
 @author Brian S O'Neill
 @author Guy Allard
 @since 1.2, refactored from CommonGJChronology
 */
@interface OrgJodaTimeChronoBasicGJChronology : OrgJodaTimeChronoBasicChronology {
}

/**
 @brief Constructor.
 */
- (instancetype)initWithOrgJodaTimeChronology:(OrgJodaTimeChronology *)base
                                       withId:(id)param
                                      withInt:(int)minDaysInFirstWeek;

- (BOOL)isLeapDayWithLong:(long long int)instant;

- (int)getMonthOfYearWithLong:(long long int)millis
                      withInt:(int)year;

/**
 @brief Gets the number of days in the specified month and year.
 @param year the year
 @param month the month
 @return the number of days
 */
- (int)getDaysInYearMonthWithInt:(int)year
                         withInt:(int)month;

- (int)getDaysInMonthMaxWithInt:(int)month;

- (int)getDaysInMonthMaxForSetWithLong:(long long int)instant
                               withInt:(int)value;

- (long long int)getTotalMillisByYearMonthWithInt:(int)year
                                          withInt:(int)month;

- (long long int)getYearDifferenceWithLong:(long long int)minuendInstant
                                  withLong:(long long int)subtrahendInstant;

- (long long int)setYearWithLong:(long long int)instant
                         withInt:(int)year;

@end

FOUNDATION_EXPORT BOOL OrgJodaTimeChronoBasicGJChronology_initialized;
J2OBJC_STATIC_INIT(OrgJodaTimeChronoBasicGJChronology)

J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeChronoBasicGJChronology, serialVersionUID, long long int)

FOUNDATION_EXPORT IOSIntArray *OrgJodaTimeChronoBasicGJChronology_MIN_DAYS_PER_MONTH_ARRAY_;
J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeChronoBasicGJChronology, MIN_DAYS_PER_MONTH_ARRAY_, IOSIntArray *)

FOUNDATION_EXPORT IOSIntArray *OrgJodaTimeChronoBasicGJChronology_MAX_DAYS_PER_MONTH_ARRAY_;
J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeChronoBasicGJChronology, MAX_DAYS_PER_MONTH_ARRAY_, IOSIntArray *)

FOUNDATION_EXPORT IOSLongArray *OrgJodaTimeChronoBasicGJChronology_MIN_TOTAL_MILLIS_BY_MONTH_ARRAY_;
J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeChronoBasicGJChronology, MIN_TOTAL_MILLIS_BY_MONTH_ARRAY_, IOSLongArray *)

FOUNDATION_EXPORT IOSLongArray *OrgJodaTimeChronoBasicGJChronology_MAX_TOTAL_MILLIS_BY_MONTH_ARRAY_;
J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeChronoBasicGJChronology, MAX_TOTAL_MILLIS_BY_MONTH_ARRAY_, IOSLongArray *)

J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeChronoBasicGJChronology, FEB_29, long long int)

#endif // _OrgJodaTimeChronoBasicGJChronology_H_

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/andrewebling/Laundrapp/Joda-time-Project/joda-time/src/main/java/org/joda/time/DurationFieldType.java
//

#ifndef _OrgJodaTimeDurationFieldType_H_
#define _OrgJodaTimeDurationFieldType_H_

@class OrgJodaTimeChronology;
@class OrgJodaTimeDurationField;

#import "JreEmulation.h"
#include "java/io/Serializable.h"

#define OrgJodaTimeDurationFieldType_CENTURIES 2
#define OrgJodaTimeDurationFieldType_DAYS 7
#define OrgJodaTimeDurationFieldType_ERAS 1
#define OrgJodaTimeDurationFieldType_HALFDAYS 8
#define OrgJodaTimeDurationFieldType_HOURS 9
#define OrgJodaTimeDurationFieldType_MILLIS 12
#define OrgJodaTimeDurationFieldType_MINUTES 10
#define OrgJodaTimeDurationFieldType_MONTHS 5
#define OrgJodaTimeDurationFieldType_SECONDS 11
#define OrgJodaTimeDurationFieldType_WEEKS 6
#define OrgJodaTimeDurationFieldType_WEEKYEARS 3
#define OrgJodaTimeDurationFieldType_YEARS 4
#define OrgJodaTimeDurationFieldType_serialVersionUID 8765135187319LL

/**
 @brief Identifies a duration field, such as years or minutes, in a chronology-neutral way.
 <p> A duration field type defines the type of the field, such as hours. If does not directly enable any calculations, however it does provide a #getField(Chronology) method that returns the actual calculation engine for a particular chronology. <p> Instances of <code>DurationFieldType</code> are singletons. They can be compared using <code>==</code>. <p> If required, you can create your own field, for example a quarters. You must create a subclass of <code>DurationFieldType</code> that defines the field type. This class returns the actual calculation engine from #getField(Chronology) .
 @author Stephen Colebourne
 @author Brian S O'Neill
 @since 1.0
 */
@interface OrgJodaTimeDurationFieldType : NSObject < JavaIoSerializable > {
 @public
  /**
   @brief The name of the field type.
   */
  NSString *iName_;
}

/**
 @brief Constructor.
 @param name the name to use, which by convention, are plural.
 */
- (instancetype)initWithNSString:(NSString *)name;

/**
 @brief Get the millis field type.
 @return the DateTimeFieldType constant
 */
+ (OrgJodaTimeDurationFieldType *)millis;

/**
 @brief Get the seconds field type.
 @return the DateTimeFieldType constant
 */
+ (OrgJodaTimeDurationFieldType *)seconds;

/**
 @brief Get the minutes field type.
 @return the DateTimeFieldType constant
 */
+ (OrgJodaTimeDurationFieldType *)minutes;

/**
 @brief Get the hours field type.
 @return the DateTimeFieldType constant
 */
+ (OrgJodaTimeDurationFieldType *)hours;

/**
 @brief Get the halfdays field type.
 @return the DateTimeFieldType constant
 */
+ (OrgJodaTimeDurationFieldType *)halfdays;

/**
 @brief Get the days field type.
 @return the DateTimeFieldType constant
 */
+ (OrgJodaTimeDurationFieldType *)days;

/**
 @brief Get the weeks field type.
 @return the DateTimeFieldType constant
 */
+ (OrgJodaTimeDurationFieldType *)weeks;

/**
 @brief Get the weekyears field type.
 @return the DateTimeFieldType constant
 */
+ (OrgJodaTimeDurationFieldType *)weekyears;

/**
 @brief Get the months field type.
 @return the DateTimeFieldType constant
 */
+ (OrgJodaTimeDurationFieldType *)months;

/**
 @brief Get the years field type.
 @return the DateTimeFieldType constant
 */
+ (OrgJodaTimeDurationFieldType *)years;

/**
 @brief Get the centuries field type.
 @return the DateTimeFieldType constant
 */
+ (OrgJodaTimeDurationFieldType *)centuries;

/**
 @brief Get the eras field type.
 @return the DateTimeFieldType constant
 */
+ (OrgJodaTimeDurationFieldType *)eras;

/**
 @brief Get the name of the field.
 By convention, names are plural.
 @return field name
 */
- (NSString *)getName;

/**
 @brief Gets a suitable field for this type from the given Chronology.
 @param chronology the chronology to use, null means ISOChronology in default zone
 @return a suitable field
 */
- (OrgJodaTimeDurationField *)getFieldWithOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology;

/**
 @brief Checks whether this field supported in the given Chronology.
 @param chronology the chronology to use, null means ISOChronology in default zone
 @return true if supported
 */
- (BOOL)isSupportedWithOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology;

/**
 @brief Get a suitable debug string.
 @return debug string
 */
- (NSString *)description;

- (void)copyAllFieldsTo:(OrgJodaTimeDurationFieldType *)other;

@end

FOUNDATION_EXPORT BOOL OrgJodaTimeDurationFieldType_initialized;
J2OBJC_STATIC_INIT(OrgJodaTimeDurationFieldType)

J2OBJC_FIELD_SETTER(OrgJodaTimeDurationFieldType, iName_, NSString *)

J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDurationFieldType, serialVersionUID, long long int)

J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDurationFieldType, ERAS, char)

J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDurationFieldType, CENTURIES, char)

J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDurationFieldType, WEEKYEARS, char)

J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDurationFieldType, YEARS, char)

J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDurationFieldType, MONTHS, char)

J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDurationFieldType, WEEKS, char)

J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDurationFieldType, DAYS, char)

J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDurationFieldType, HALFDAYS, char)

J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDurationFieldType, HOURS, char)

J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDurationFieldType, MINUTES, char)

J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDurationFieldType, SECONDS, char)

J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDurationFieldType, MILLIS, char)

FOUNDATION_EXPORT OrgJodaTimeDurationFieldType *OrgJodaTimeDurationFieldType_ERAS_TYPE_;
J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDurationFieldType, ERAS_TYPE_, OrgJodaTimeDurationFieldType *)

FOUNDATION_EXPORT OrgJodaTimeDurationFieldType *OrgJodaTimeDurationFieldType_CENTURIES_TYPE_;
J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDurationFieldType, CENTURIES_TYPE_, OrgJodaTimeDurationFieldType *)

FOUNDATION_EXPORT OrgJodaTimeDurationFieldType *OrgJodaTimeDurationFieldType_WEEKYEARS_TYPE_;
J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDurationFieldType, WEEKYEARS_TYPE_, OrgJodaTimeDurationFieldType *)

FOUNDATION_EXPORT OrgJodaTimeDurationFieldType *OrgJodaTimeDurationFieldType_YEARS_TYPE_;
J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDurationFieldType, YEARS_TYPE_, OrgJodaTimeDurationFieldType *)

FOUNDATION_EXPORT OrgJodaTimeDurationFieldType *OrgJodaTimeDurationFieldType_MONTHS_TYPE_;
J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDurationFieldType, MONTHS_TYPE_, OrgJodaTimeDurationFieldType *)

FOUNDATION_EXPORT OrgJodaTimeDurationFieldType *OrgJodaTimeDurationFieldType_WEEKS_TYPE_;
J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDurationFieldType, WEEKS_TYPE_, OrgJodaTimeDurationFieldType *)

FOUNDATION_EXPORT OrgJodaTimeDurationFieldType *OrgJodaTimeDurationFieldType_DAYS_TYPE_;
J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDurationFieldType, DAYS_TYPE_, OrgJodaTimeDurationFieldType *)

FOUNDATION_EXPORT OrgJodaTimeDurationFieldType *OrgJodaTimeDurationFieldType_HALFDAYS_TYPE_;
J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDurationFieldType, HALFDAYS_TYPE_, OrgJodaTimeDurationFieldType *)

FOUNDATION_EXPORT OrgJodaTimeDurationFieldType *OrgJodaTimeDurationFieldType_HOURS_TYPE_;
J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDurationFieldType, HOURS_TYPE_, OrgJodaTimeDurationFieldType *)

FOUNDATION_EXPORT OrgJodaTimeDurationFieldType *OrgJodaTimeDurationFieldType_MINUTES_TYPE_;
J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDurationFieldType, MINUTES_TYPE_, OrgJodaTimeDurationFieldType *)

FOUNDATION_EXPORT OrgJodaTimeDurationFieldType *OrgJodaTimeDurationFieldType_SECONDS_TYPE_;
J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDurationFieldType, SECONDS_TYPE_, OrgJodaTimeDurationFieldType *)

FOUNDATION_EXPORT OrgJodaTimeDurationFieldType *OrgJodaTimeDurationFieldType_MILLIS_TYPE_;
J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDurationFieldType, MILLIS_TYPE_, OrgJodaTimeDurationFieldType *)

#define OrgJodaTimeDurationFieldType_StandardDurationFieldType_serialVersionUID 31156755687123LL

@interface OrgJodaTimeDurationFieldType_StandardDurationFieldType : OrgJodaTimeDurationFieldType {
 @public
  /**
   @brief The ordinal of the standard field type, for switch statements
   */
  char iOrdinal_;
}

/**
 @brief Constructor.
 @param name the name to use
 */
- (instancetype)initWithNSString:(NSString *)name
                        withByte:(char)ordinal;

/**
 */
- (BOOL)isEqual:(id)obj;

/**
 */
- (NSUInteger)hash;

- (OrgJodaTimeDurationField *)getFieldWithOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology;

/**
 @brief Ensure a singleton is returned.
 @return the singleton type
 */
- (id)readResolve;

- (void)copyAllFieldsTo:(OrgJodaTimeDurationFieldType_StandardDurationFieldType *)other;

@end

__attribute__((always_inline)) inline void OrgJodaTimeDurationFieldType_StandardDurationFieldType_init() {}

J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDurationFieldType_StandardDurationFieldType, serialVersionUID, long long int)

#endif // _OrgJodaTimeDurationFieldType_H_

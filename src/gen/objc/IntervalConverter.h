//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/andrewebling/Laundrapp/Joda-time-Project/joda-time/src/main/java/org/joda/time/convert/IntervalConverter.java
//

#ifndef _OrgJodaTimeConvertIntervalConverter_H_
#define _OrgJodaTimeConvertIntervalConverter_H_

@class OrgJodaTimeChronology;
@protocol OrgJodaTimeReadWritableInterval;

#import "JreEmulation.h"
#include "Converter.h"

/**
 @brief IntervalConverter defines how an object is converted to an interval.
 @author Brian S O'Neill
 @author Stephen Colebourne
 @since 1.0
 */
@protocol OrgJodaTimeConvertIntervalConverter < OrgJodaTimeConvertConverter, NSObject, JavaObject >
/**
 @brief Checks if the input is a ReadableInterval.
 <p> If it is, then the calling code should cast and copy the fields directly.
 @param object the object to convert, must not be null
 @param chrono the chronology to use, may be null
 @return true if the input is a ReadableInterval
 @throws ClassCastException if the object is invalid
 */
- (BOOL)isReadableIntervalWithId:(id)object
       withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono;

/**
 @brief Extracts interval endpoint values from an object of this converter's type, and sets them into the given ReadWritableInterval.
 @param writableInterval interval to get modified, not null
 @param object the object to convert, must not be null
 @param chrono the chronology to use, may be null
 @throws ClassCastException if the object is invalid
 */
- (void)setIntoWithOrgJodaTimeReadWritableInterval:(id<OrgJodaTimeReadWritableInterval>)writableInterval
                                            withId:(id)object
                         withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono;

@end

__attribute__((always_inline)) inline void OrgJodaTimeConvertIntervalConverter_init() {}

#endif // _OrgJodaTimeConvertIntervalConverter_H_

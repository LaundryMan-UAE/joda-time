//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/andrewebling/Laundrapp/Joda-time-Project/joda-time/src/main/java/org/joda/time/field/DelegatedDurationField.java
//

#include "DelegatedDurationField.h"
#include "DurationField.h"
#include "DurationFieldType.h"
#include "java/lang/ClassCastException.h"
#include "java/lang/IllegalArgumentException.h"

@implementation OrgJodaTimeFieldDelegatedDurationField

- (instancetype)initWithOrgJodaTimeDurationField:(OrgJodaTimeDurationField *)field {
  return [self initOrgJodaTimeFieldDelegatedDurationFieldWithOrgJodaTimeDurationField:field withOrgJodaTimeDurationFieldType:nil];
}

- (instancetype)initOrgJodaTimeFieldDelegatedDurationFieldWithOrgJodaTimeDurationField:(OrgJodaTimeDurationField *)field
                                                      withOrgJodaTimeDurationFieldType:(OrgJodaTimeDurationFieldType *)type {
  if (self = [super init]) {
    if (field == nil) {
      @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:@"The field must not be null"];
    }
    iField_ = field;
    iType_ = (type == nil ? [((OrgJodaTimeDurationField *) nil_chk(field)) getType] : type);
  }
  return self;
}

- (instancetype)initWithOrgJodaTimeDurationField:(OrgJodaTimeDurationField *)field
                withOrgJodaTimeDurationFieldType:(OrgJodaTimeDurationFieldType *)type {
  return [self initOrgJodaTimeFieldDelegatedDurationFieldWithOrgJodaTimeDurationField:field withOrgJodaTimeDurationFieldType:type];
}

- (OrgJodaTimeDurationField *)getWrappedField {
  return iField_;
}

- (OrgJodaTimeDurationFieldType *)getType {
  return iType_;
}

- (NSString *)getName {
  return [((OrgJodaTimeDurationFieldType *) nil_chk(iType_)) getName];
}

- (BOOL)isSupported {
  return [((OrgJodaTimeDurationField *) nil_chk(iField_)) isSupported];
}

- (BOOL)isPrecise {
  return [((OrgJodaTimeDurationField *) nil_chk(iField_)) isPrecise];
}

- (int)getValueWithLong:(long long int)duration {
  return [((OrgJodaTimeDurationField *) nil_chk(iField_)) getValueWithLong:duration];
}

- (long long int)getValueAsLongWithLong:(long long int)duration {
  return [((OrgJodaTimeDurationField *) nil_chk(iField_)) getValueAsLongWithLong:duration];
}

- (int)getValueWithLong:(long long int)duration
               withLong:(long long int)instant {
  return [((OrgJodaTimeDurationField *) nil_chk(iField_)) getValueWithLong:duration withLong:instant];
}

- (long long int)getValueAsLongWithLong:(long long int)duration
                               withLong:(long long int)instant {
  return [((OrgJodaTimeDurationField *) nil_chk(iField_)) getValueAsLongWithLong:duration withLong:instant];
}

- (long long int)getMillisWithInt:(int)value {
  return [((OrgJodaTimeDurationField *) nil_chk(iField_)) getMillisWithInt:value];
}

- (long long int)getMillisWithLong:(long long int)value {
  return [((OrgJodaTimeDurationField *) nil_chk(iField_)) getMillisWithLong:value];
}

- (long long int)getMillisWithInt:(int)value
                         withLong:(long long int)instant {
  return [((OrgJodaTimeDurationField *) nil_chk(iField_)) getMillisWithInt:value withLong:instant];
}

- (long long int)getMillisWithLong:(long long int)value
                          withLong:(long long int)instant {
  return [((OrgJodaTimeDurationField *) nil_chk(iField_)) getMillisWithLong:value withLong:instant];
}

- (long long int)addWithLong:(long long int)instant
                     withInt:(int)value {
  return [((OrgJodaTimeDurationField *) nil_chk(iField_)) addWithLong:instant withInt:value];
}

- (long long int)addWithLong:(long long int)instant
                    withLong:(long long int)value {
  return [((OrgJodaTimeDurationField *) nil_chk(iField_)) addWithLong:instant withLong:value];
}

- (int)getDifferenceWithLong:(long long int)minuendInstant
                    withLong:(long long int)subtrahendInstant {
  return [((OrgJodaTimeDurationField *) nil_chk(iField_)) getDifferenceWithLong:minuendInstant withLong:subtrahendInstant];
}

- (long long int)getDifferenceAsLongWithLong:(long long int)minuendInstant
                                    withLong:(long long int)subtrahendInstant {
  return [((OrgJodaTimeDurationField *) nil_chk(iField_)) getDifferenceAsLongWithLong:minuendInstant withLong:subtrahendInstant];
}

- (long long int)getUnitMillis {
  return [((OrgJodaTimeDurationField *) nil_chk(iField_)) getUnitMillis];
}

- (int)compareToWithId:(OrgJodaTimeDurationField *)durationField {
  if (durationField != nil && ![durationField isKindOfClass:[OrgJodaTimeDurationField class]]) {
    @throw [[JavaLangClassCastException alloc] init];
  }
  return [((OrgJodaTimeDurationField *) nil_chk(iField_)) compareToWithId:durationField];
}

- (BOOL)isEqual:(id)obj {
  if ([obj isKindOfClass:[OrgJodaTimeFieldDelegatedDurationField class]]) {
    return [((OrgJodaTimeDurationField *) nil_chk(iField_)) isEqual:((OrgJodaTimeFieldDelegatedDurationField *) nil_chk(((OrgJodaTimeFieldDelegatedDurationField *) check_class_cast(obj, [OrgJodaTimeFieldDelegatedDurationField class]))))->iField_];
  }
  return NO;
}

- (NSUInteger)hash {
  return ((int) [((OrgJodaTimeDurationField *) nil_chk(iField_)) hash]) ^ ((int) [((OrgJodaTimeDurationFieldType *) nil_chk(iType_)) hash]);
}

- (NSString *)description {
  return (iType_ == nil) ? [((OrgJodaTimeDurationField *) nil_chk(iField_)) description] : ([NSString stringWithFormat:@"DurationField[%@]", iType_]);
}

- (void)copyAllFieldsTo:(OrgJodaTimeFieldDelegatedDurationField *)other {
  [super copyAllFieldsTo:other];
  other->iField_ = iField_;
  other->iType_ = iType_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "initWithOrgJodaTimeDurationField:", "DelegatedDurationField", NULL, 0x4, NULL },
    { "initWithOrgJodaTimeDurationField:withOrgJodaTimeDurationFieldType:", "DelegatedDurationField", NULL, 0x4, NULL },
    { "getWrappedField", NULL, "Lorg.joda.time.DurationField;", 0x11, NULL },
    { "getType", NULL, "Lorg.joda.time.DurationFieldType;", 0x1, NULL },
    { "getName", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "isSupported", NULL, "Z", 0x1, NULL },
    { "isPrecise", NULL, "Z", 0x1, NULL },
    { "getValueWithLong:", "getValue", "I", 0x1, NULL },
    { "getValueAsLongWithLong:", "getValueAsLong", "J", 0x1, NULL },
    { "getValueWithLong:withLong:", "getValue", "I", 0x1, NULL },
    { "getValueAsLongWithLong:withLong:", "getValueAsLong", "J", 0x1, NULL },
    { "getMillisWithInt:", "getMillis", "J", 0x1, NULL },
    { "getMillisWithLong:", "getMillis", "J", 0x1, NULL },
    { "getMillisWithInt:withLong:", "getMillis", "J", 0x1, NULL },
    { "getMillisWithLong:withLong:", "getMillis", "J", 0x1, NULL },
    { "addWithLong:withInt:", "add", "J", 0x1, NULL },
    { "addWithLong:withLong:", "add", "J", 0x1, NULL },
    { "getDifferenceWithLong:withLong:", "getDifference", "I", 0x1, NULL },
    { "getDifferenceAsLongWithLong:withLong:", "getDifferenceAsLong", "J", 0x1, NULL },
    { "getUnitMillis", NULL, "J", 0x1, NULL },
    { "compareToWithOrgJodaTimeDurationField:", "compareTo", "I", 0x1, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL },
    { "hash", "hashCode", "I", 0x1, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, .constantValue.asLong = OrgJodaTimeFieldDelegatedDurationField_serialVersionUID },
    { "iField_", NULL, 0x12, "Lorg.joda.time.DurationField;", NULL,  },
    { "iType_", NULL, 0x12, "Lorg.joda.time.DurationFieldType;", NULL,  },
  };
  static J2ObjcClassInfo _OrgJodaTimeFieldDelegatedDurationField = { "DelegatedDurationField", "org.joda.time.field", NULL, 0x1, 24, methods, 3, fields, 0, NULL};
  return &_OrgJodaTimeFieldDelegatedDurationField;
}

@end

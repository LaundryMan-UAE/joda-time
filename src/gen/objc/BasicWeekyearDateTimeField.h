//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/andrewebling/Laundrapp/Joda-time-Project/joda-time/src/main/java/org/joda/time/chrono/BasicWeekyearDateTimeField.java
//

#ifndef _OrgJodaTimeChronoBasicWeekyearDateTimeField_H_
#define _OrgJodaTimeChronoBasicWeekyearDateTimeField_H_

@class OrgJodaTimeChronoBasicChronology;
@class OrgJodaTimeDurationField;

#import "JreEmulation.h"
#include "ImpreciseDateTimeField.h"

#define OrgJodaTimeChronoBasicWeekyearDateTimeField_WEEK_53 31449600000LL
#define OrgJodaTimeChronoBasicWeekyearDateTimeField_serialVersionUID 6215066916806820644LL

/**
 @brief Provides time calculations for the week of the weekyear component of time.
 @author Guy Allard
 @author Stephen Colebourne
 @author Brian S O'Neill
 @since 1.1, refactored from GJWeekyearDateTimeField
 */
@interface OrgJodaTimeChronoBasicWeekyearDateTimeField : OrgJodaTimeFieldImpreciseDateTimeField {
 @public
  OrgJodaTimeChronoBasicChronology *iChronology_;
}

/**
 @brief Restricted constructor
 */
- (instancetype)initWithOrgJodaTimeChronoBasicChronology:(OrgJodaTimeChronoBasicChronology *)chronology;

- (BOOL)isLenient;

/**
 @brief Get the Year of a week based year component of the specified time instant.
 @param instant the time instant in millis to query.
 @return the year extracted from the input.
 */
- (int)getWithLong:(long long int)instant;

/**
 @brief Add the specified years to the specified time instant.
 @param instant the time instant in millis to update.
 @param years the years to add (can be negative).
 @return the updated time instant.
 */
- (long long int)addWithLong:(long long int)instant
                     withInt:(int)years;

- (long long int)addWithLong:(long long int)instant
                    withLong:(long long int)value;

/**
 @brief Add to the year component of the specified time instant wrapping around within that component if necessary.
 @param instant the time instant in millis to update.
 @param years the years to add (can be negative).
 @return the updated time instant.
 */
- (long long int)addWrapFieldWithLong:(long long int)instant
                              withInt:(int)years;

- (long long int)getDifferenceAsLongWithLong:(long long int)minuendInstant
                                    withLong:(long long int)subtrahendInstant;

/**
 @brief Set the Year of a week based year component of the specified time instant.
 @param instant the time instant in millis to update.
 @param year the year (-9999,9999) to set the date to.
 @return the updated DateTime.
 @throws IllegalArgumentException if year is invalid.
 */
- (long long int)setWithLong:(long long int)instant
                     withInt:(int)year;

- (OrgJodaTimeDurationField *)getRangeDurationField;

- (BOOL)isLeapWithLong:(long long int)instant;

- (int)getLeapAmountWithLong:(long long int)instant;

- (OrgJodaTimeDurationField *)getLeapDurationField;

- (int)getMinimumValue;

- (int)getMaximumValue;

- (long long int)roundFloorWithLong:(long long int)instant;

- (long long int)remainderWithLong:(long long int)instant;

/**
 @brief Serialization singleton
 */
- (id)readResolve;

- (void)copyAllFieldsTo:(OrgJodaTimeChronoBasicWeekyearDateTimeField *)other;

@end

__attribute__((always_inline)) inline void OrgJodaTimeChronoBasicWeekyearDateTimeField_init() {}

J2OBJC_FIELD_SETTER(OrgJodaTimeChronoBasicWeekyearDateTimeField, iChronology_, OrgJodaTimeChronoBasicChronology *)

J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeChronoBasicWeekyearDateTimeField, serialVersionUID, long long int)

J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeChronoBasicWeekyearDateTimeField, WEEK_53, long long int)

#endif // _OrgJodaTimeChronoBasicWeekyearDateTimeField_H_

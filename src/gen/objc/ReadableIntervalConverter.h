//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/andrewebling/Laundrapp/Joda-time-Project/joda-time/src/main/java/org/joda/time/convert/ReadableIntervalConverter.java
//

#ifndef _OrgJodaTimeConvertReadableIntervalConverter_H_
#define _OrgJodaTimeConvertReadableIntervalConverter_H_

@class IOSClass;
@class OrgJodaTimeChronology;
@protocol OrgJodaTimeReadWritableInterval;
@protocol OrgJodaTimeReadWritablePeriod;

#import "JreEmulation.h"
#include "AbstractConverter.h"
#include "DurationConverter.h"
#include "IntervalConverter.h"
#include "PeriodConverter.h"

/**
 @brief Converts intervals into durations of any requested period type.
 @author Brian S O'Neill
 @since 1.0
 */
@interface OrgJodaTimeConvertReadableIntervalConverter : OrgJodaTimeConvertAbstractConverter < OrgJodaTimeConvertIntervalConverter, OrgJodaTimeConvertDurationConverter, OrgJodaTimeConvertPeriodConverter > {
}

/**
 @brief Restricted constructor.
 */
- (instancetype)init;

/**
 @brief Gets the millisecond length of the interval.
 @param object the interval
 */
- (long long int)getDurationMillisWithId:(id)object;

/**
 @brief Sets the values of the mutable duration from the specified interval.
 @param writablePeriod the period to modify
 @param object the interval to set from
 @param chrono the chronology to use
 */
- (void)setIntoWithOrgJodaTimeReadWritablePeriod:(id<OrgJodaTimeReadWritablePeriod>)writablePeriod
                                          withId:(id)object
                       withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono;

/**
 @brief Checks if the input is a ReadableInterval.
 <p> If it is, then the calling code should cast and copy the fields directly.
 @param object the object to convert, must not be null
 @param chrono the chronology to use, may be null
 @return true if the input is a ReadableInterval
 @throws ClassCastException if the object is invalid
 */
- (BOOL)isReadableIntervalWithId:(id)object
       withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono;

/**
 @brief Extracts interval endpoint values from an object of this converter's type, and sets them into the given ReadWritableInterval.
 @param writableInterval interval to get modified, not null
 @param object the object to convert, must not be null
 @param chrono the chronology to use, may be null
 @throws ClassCastException if the object is invalid
 */
- (void)setIntoWithOrgJodaTimeReadWritableInterval:(id<OrgJodaTimeReadWritableInterval>)writableInterval
                                            withId:(id)object
                         withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono;

/**
 @brief Returns ReadableInterval.class.
 */
- (IOSClass *)getSupportedType;

@end

FOUNDATION_EXPORT BOOL OrgJodaTimeConvertReadableIntervalConverter_initialized;
J2OBJC_STATIC_INIT(OrgJodaTimeConvertReadableIntervalConverter)

FOUNDATION_EXPORT OrgJodaTimeConvertReadableIntervalConverter *OrgJodaTimeConvertReadableIntervalConverter_INSTANCE_;
J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeConvertReadableIntervalConverter, INSTANCE_, OrgJodaTimeConvertReadableIntervalConverter *)

#endif // _OrgJodaTimeConvertReadableIntervalConverter_H_

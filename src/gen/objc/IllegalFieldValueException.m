//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nbransby/Documents/joda-time/src/main/java/org/joda/time/IllegalFieldValueException.java
//

#include "DateTimeFieldType.h"
#include "DurationFieldType.h"
#include "IOSClass.h"
#include "IllegalFieldValueException.h"
#include "java/lang/StringBuffer.h"
#include "java/lang/StringBuilder.h"

__attribute__((unused)) static NSString *OrgJodaTimeIllegalFieldValueException_createMessageWithNSString_withNSNumber_withNSNumber_withNSNumber_withNSString_(NSString *fieldName, NSNumber *value, NSNumber *lowerBound, NSNumber *upperBound, NSString *explain);
__attribute__((unused)) static NSString *OrgJodaTimeIllegalFieldValueException_createMessageWithNSString_withNSString_(NSString *fieldName, NSString *value);

@implementation OrgJodaTimeIllegalFieldValueException

+ (NSString *)createMessageWithNSString:(NSString *)fieldName
                           withNSNumber:(NSNumber *)value
                           withNSNumber:(NSNumber *)lowerBound
                           withNSNumber:(NSNumber *)upperBound
                           withNSString:(NSString *)explain {
  return OrgJodaTimeIllegalFieldValueException_createMessageWithNSString_withNSNumber_withNSNumber_withNSNumber_withNSString_(fieldName, value, lowerBound, upperBound, explain);
}

+ (NSString *)createMessageWithNSString:(NSString *)fieldName
                           withNSString:(NSString *)value {
  return OrgJodaTimeIllegalFieldValueException_createMessageWithNSString_withNSString_(fieldName, value);
}

- (instancetype)initWithOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)fieldType
                                        withNSNumber:(NSNumber *)value
                                        withNSNumber:(NSNumber *)lowerBound
                                        withNSNumber:(NSNumber *)upperBound {
  if (self = [super initWithNSString:OrgJodaTimeIllegalFieldValueException_createMessageWithNSString_withNSNumber_withNSNumber_withNSNumber_withNSString_([((OrgJodaTimeDateTimeFieldType *) nil_chk(fieldType)) getName], value, lowerBound, upperBound, nil)]) {
    OrgJodaTimeIllegalFieldValueException_set_iDateTimeFieldType_(self, fieldType);
    OrgJodaTimeIllegalFieldValueException_set_iDurationFieldType_(self, nil);
    OrgJodaTimeIllegalFieldValueException_set_iFieldName_(self, [fieldType getName]);
    OrgJodaTimeIllegalFieldValueException_set_iNumberValue_(self, value);
    OrgJodaTimeIllegalFieldValueException_set_iStringValue_(self, nil);
    OrgJodaTimeIllegalFieldValueException_set_iLowerBound_(self, lowerBound);
    OrgJodaTimeIllegalFieldValueException_set_iUpperBound_(self, upperBound);
    OrgJodaTimeIllegalFieldValueException_set_iMessage_(self, [super getMessage]);
  }
  return self;
}

- (instancetype)initWithOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)fieldType
                                        withNSNumber:(NSNumber *)value
                                        withNSString:(NSString *)explain {
  if (self = [super initWithNSString:OrgJodaTimeIllegalFieldValueException_createMessageWithNSString_withNSNumber_withNSNumber_withNSNumber_withNSString_([((OrgJodaTimeDateTimeFieldType *) nil_chk(fieldType)) getName], value, nil, nil, explain)]) {
    OrgJodaTimeIllegalFieldValueException_set_iDateTimeFieldType_(self, fieldType);
    OrgJodaTimeIllegalFieldValueException_set_iDurationFieldType_(self, nil);
    OrgJodaTimeIllegalFieldValueException_set_iFieldName_(self, [fieldType getName]);
    OrgJodaTimeIllegalFieldValueException_set_iNumberValue_(self, value);
    OrgJodaTimeIllegalFieldValueException_set_iStringValue_(self, nil);
    OrgJodaTimeIllegalFieldValueException_set_iLowerBound_(self, nil);
    OrgJodaTimeIllegalFieldValueException_set_iUpperBound_(self, nil);
    OrgJodaTimeIllegalFieldValueException_set_iMessage_(self, [super getMessage]);
  }
  return self;
}

- (instancetype)initWithOrgJodaTimeDurationFieldType:(OrgJodaTimeDurationFieldType *)fieldType
                                        withNSNumber:(NSNumber *)value
                                        withNSNumber:(NSNumber *)lowerBound
                                        withNSNumber:(NSNumber *)upperBound {
  if (self = [super initWithNSString:OrgJodaTimeIllegalFieldValueException_createMessageWithNSString_withNSNumber_withNSNumber_withNSNumber_withNSString_([((OrgJodaTimeDurationFieldType *) nil_chk(fieldType)) getName], value, lowerBound, upperBound, nil)]) {
    OrgJodaTimeIllegalFieldValueException_set_iDateTimeFieldType_(self, nil);
    OrgJodaTimeIllegalFieldValueException_set_iDurationFieldType_(self, fieldType);
    OrgJodaTimeIllegalFieldValueException_set_iFieldName_(self, [fieldType getName]);
    OrgJodaTimeIllegalFieldValueException_set_iNumberValue_(self, value);
    OrgJodaTimeIllegalFieldValueException_set_iStringValue_(self, nil);
    OrgJodaTimeIllegalFieldValueException_set_iLowerBound_(self, lowerBound);
    OrgJodaTimeIllegalFieldValueException_set_iUpperBound_(self, upperBound);
    OrgJodaTimeIllegalFieldValueException_set_iMessage_(self, [super getMessage]);
  }
  return self;
}

- (instancetype)initWithNSString:(NSString *)fieldName
                    withNSNumber:(NSNumber *)value
                    withNSNumber:(NSNumber *)lowerBound
                    withNSNumber:(NSNumber *)upperBound {
  if (self = [super initWithNSString:OrgJodaTimeIllegalFieldValueException_createMessageWithNSString_withNSNumber_withNSNumber_withNSNumber_withNSString_(fieldName, value, lowerBound, upperBound, nil)]) {
    OrgJodaTimeIllegalFieldValueException_set_iDateTimeFieldType_(self, nil);
    OrgJodaTimeIllegalFieldValueException_set_iDurationFieldType_(self, nil);
    OrgJodaTimeIllegalFieldValueException_set_iFieldName_(self, fieldName);
    OrgJodaTimeIllegalFieldValueException_set_iNumberValue_(self, value);
    OrgJodaTimeIllegalFieldValueException_set_iStringValue_(self, nil);
    OrgJodaTimeIllegalFieldValueException_set_iLowerBound_(self, lowerBound);
    OrgJodaTimeIllegalFieldValueException_set_iUpperBound_(self, upperBound);
    OrgJodaTimeIllegalFieldValueException_set_iMessage_(self, [super getMessage]);
  }
  return self;
}

- (instancetype)initWithOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)fieldType
                                        withNSString:(NSString *)value {
  if (self = [super initWithNSString:OrgJodaTimeIllegalFieldValueException_createMessageWithNSString_withNSString_([((OrgJodaTimeDateTimeFieldType *) nil_chk(fieldType)) getName], value)]) {
    OrgJodaTimeIllegalFieldValueException_set_iDateTimeFieldType_(self, fieldType);
    OrgJodaTimeIllegalFieldValueException_set_iDurationFieldType_(self, nil);
    OrgJodaTimeIllegalFieldValueException_set_iFieldName_(self, [fieldType getName]);
    OrgJodaTimeIllegalFieldValueException_set_iStringValue_(self, value);
    OrgJodaTimeIllegalFieldValueException_set_iNumberValue_(self, nil);
    OrgJodaTimeIllegalFieldValueException_set_iLowerBound_(self, nil);
    OrgJodaTimeIllegalFieldValueException_set_iUpperBound_(self, nil);
    OrgJodaTimeIllegalFieldValueException_set_iMessage_(self, [super getMessage]);
  }
  return self;
}

- (instancetype)initWithOrgJodaTimeDurationFieldType:(OrgJodaTimeDurationFieldType *)fieldType
                                        withNSString:(NSString *)value {
  if (self = [super initWithNSString:OrgJodaTimeIllegalFieldValueException_createMessageWithNSString_withNSString_([((OrgJodaTimeDurationFieldType *) nil_chk(fieldType)) getName], value)]) {
    OrgJodaTimeIllegalFieldValueException_set_iDateTimeFieldType_(self, nil);
    OrgJodaTimeIllegalFieldValueException_set_iDurationFieldType_(self, fieldType);
    OrgJodaTimeIllegalFieldValueException_set_iFieldName_(self, [fieldType getName]);
    OrgJodaTimeIllegalFieldValueException_set_iStringValue_(self, value);
    OrgJodaTimeIllegalFieldValueException_set_iNumberValue_(self, nil);
    OrgJodaTimeIllegalFieldValueException_set_iLowerBound_(self, nil);
    OrgJodaTimeIllegalFieldValueException_set_iUpperBound_(self, nil);
    OrgJodaTimeIllegalFieldValueException_set_iMessage_(self, [super getMessage]);
  }
  return self;
}

- (instancetype)initWithNSString:(NSString *)fieldName
                    withNSString:(NSString *)value {
  if (self = [super initWithNSString:OrgJodaTimeIllegalFieldValueException_createMessageWithNSString_withNSString_(fieldName, value)]) {
    OrgJodaTimeIllegalFieldValueException_set_iDateTimeFieldType_(self, nil);
    OrgJodaTimeIllegalFieldValueException_set_iDurationFieldType_(self, nil);
    OrgJodaTimeIllegalFieldValueException_set_iFieldName_(self, fieldName);
    OrgJodaTimeIllegalFieldValueException_set_iStringValue_(self, value);
    OrgJodaTimeIllegalFieldValueException_set_iNumberValue_(self, nil);
    OrgJodaTimeIllegalFieldValueException_set_iLowerBound_(self, nil);
    OrgJodaTimeIllegalFieldValueException_set_iUpperBound_(self, nil);
    OrgJodaTimeIllegalFieldValueException_set_iMessage_(self, [super getMessage]);
  }
  return self;
}

- (OrgJodaTimeDateTimeFieldType *)getDateTimeFieldType {
  return iDateTimeFieldType_;
}

- (OrgJodaTimeDurationFieldType *)getDurationFieldType {
  return iDurationFieldType_;
}

- (NSString *)getFieldName {
  return iFieldName_;
}

- (NSNumber *)getIllegalNumberValue {
  return iNumberValue_;
}

- (NSString *)getIllegalStringValue {
  return iStringValue_;
}

- (NSString *)getIllegalValueAsString {
  NSString *value = iStringValue_;
  if (value == nil) {
    value = NSString_valueOfWithId_(iNumberValue_);
  }
  return value;
}

- (NSNumber *)getLowerBound {
  return iLowerBound_;
}

- (NSNumber *)getUpperBound {
  return iUpperBound_;
}

- (NSString *)getMessage {
  return iMessage_;
}

- (void)prependMessageWithNSString:(NSString *)message {
  if (iMessage_ == nil) {
    OrgJodaTimeIllegalFieldValueException_set_iMessage_(self, message);
  }
  else if (message != nil) {
    OrgJodaTimeIllegalFieldValueException_set_iMessage_(self, JreStrcat("$$$", message, @": ", iMessage_));
  }
}

- (void)dealloc {
  OrgJodaTimeIllegalFieldValueException_set_iDateTimeFieldType_(self, nil);
  OrgJodaTimeIllegalFieldValueException_set_iDurationFieldType_(self, nil);
  OrgJodaTimeIllegalFieldValueException_set_iFieldName_(self, nil);
  OrgJodaTimeIllegalFieldValueException_set_iNumberValue_(self, nil);
  OrgJodaTimeIllegalFieldValueException_set_iStringValue_(self, nil);
  OrgJodaTimeIllegalFieldValueException_set_iLowerBound_(self, nil);
  OrgJodaTimeIllegalFieldValueException_set_iUpperBound_(self, nil);
  OrgJodaTimeIllegalFieldValueException_set_iMessage_(self, nil);
  [super dealloc];
}

- (void)copyAllFieldsTo:(OrgJodaTimeIllegalFieldValueException *)other {
  [super copyAllFieldsTo:other];
  OrgJodaTimeIllegalFieldValueException_set_iDateTimeFieldType_(other, iDateTimeFieldType_);
  OrgJodaTimeIllegalFieldValueException_set_iDurationFieldType_(other, iDurationFieldType_);
  OrgJodaTimeIllegalFieldValueException_set_iFieldName_(other, iFieldName_);
  OrgJodaTimeIllegalFieldValueException_set_iNumberValue_(other, iNumberValue_);
  OrgJodaTimeIllegalFieldValueException_set_iStringValue_(other, iStringValue_);
  OrgJodaTimeIllegalFieldValueException_set_iLowerBound_(other, iLowerBound_);
  OrgJodaTimeIllegalFieldValueException_set_iUpperBound_(other, iUpperBound_);
  OrgJodaTimeIllegalFieldValueException_set_iMessage_(other, iMessage_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "createMessageWithNSString:withNSNumber:withNSNumber:withNSNumber:withNSString:", "createMessage", "Ljava.lang.String;", 0xa, NULL },
    { "createMessageWithNSString:withNSString:", "createMessage", "Ljava.lang.String;", 0xa, NULL },
    { "initWithOrgJodaTimeDateTimeFieldType:withNSNumber:withNSNumber:withNSNumber:", "IllegalFieldValueException", NULL, 0x1, NULL },
    { "initWithOrgJodaTimeDateTimeFieldType:withNSNumber:withNSString:", "IllegalFieldValueException", NULL, 0x1, NULL },
    { "initWithOrgJodaTimeDurationFieldType:withNSNumber:withNSNumber:withNSNumber:", "IllegalFieldValueException", NULL, 0x1, NULL },
    { "initWithNSString:withNSNumber:withNSNumber:withNSNumber:", "IllegalFieldValueException", NULL, 0x1, NULL },
    { "initWithOrgJodaTimeDateTimeFieldType:withNSString:", "IllegalFieldValueException", NULL, 0x1, NULL },
    { "initWithOrgJodaTimeDurationFieldType:withNSString:", "IllegalFieldValueException", NULL, 0x1, NULL },
    { "initWithNSString:withNSString:", "IllegalFieldValueException", NULL, 0x1, NULL },
    { "getDateTimeFieldType", NULL, "Lorg.joda.time.DateTimeFieldType;", 0x1, NULL },
    { "getDurationFieldType", NULL, "Lorg.joda.time.DurationFieldType;", 0x1, NULL },
    { "getFieldName", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "getIllegalNumberValue", NULL, "Ljava.lang.Number;", 0x1, NULL },
    { "getIllegalStringValue", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "getIllegalValueAsString", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "getLowerBound", NULL, "Ljava.lang.Number;", 0x1, NULL },
    { "getUpperBound", NULL, "Ljava.lang.Number;", 0x1, NULL },
    { "getMessage", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "prependMessageWithNSString:", "prependMessage", "V", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, .constantValue.asLong = OrgJodaTimeIllegalFieldValueException_serialVersionUID },
    { "iDateTimeFieldType_", NULL, 0x12, "Lorg.joda.time.DateTimeFieldType;", NULL,  },
    { "iDurationFieldType_", NULL, 0x12, "Lorg.joda.time.DurationFieldType;", NULL,  },
    { "iFieldName_", NULL, 0x12, "Ljava.lang.String;", NULL,  },
    { "iNumberValue_", NULL, 0x12, "Ljava.lang.Number;", NULL,  },
    { "iStringValue_", NULL, 0x12, "Ljava.lang.String;", NULL,  },
    { "iLowerBound_", NULL, 0x12, "Ljava.lang.Number;", NULL,  },
    { "iUpperBound_", NULL, 0x12, "Ljava.lang.Number;", NULL,  },
    { "iMessage_", NULL, 0x2, "Ljava.lang.String;", NULL,  },
  };
  static const J2ObjcClassInfo _OrgJodaTimeIllegalFieldValueException = { "IllegalFieldValueException", "org.joda.time", NULL, 0x1, 19, methods, 9, fields, 0, NULL};
  return &_OrgJodaTimeIllegalFieldValueException;
}

@end

NSString *OrgJodaTimeIllegalFieldValueException_createMessageWithNSString_withNSNumber_withNSNumber_withNSNumber_withNSString_(NSString *fieldName, NSNumber *value, NSNumber *lowerBound, NSNumber *upperBound, NSString *explain) {
  OrgJodaTimeIllegalFieldValueException_init();
  JavaLangStringBuilder *buf = [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) [[[JavaLangStringBuilder alloc] init] autorelease]) appendWithNSString:@"Value "])) appendWithId:value])) appendWithNSString:@" for "])) appendWithNSString:fieldName])) appendWithChar:' '];
  if (lowerBound == nil) {
    if (upperBound == nil) {
      [((JavaLangStringBuilder *) nil_chk(buf)) appendWithNSString:@"is not supported"];
    }
    else {
      [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(buf)) appendWithNSString:@"must not be larger than "])) appendWithId:upperBound];
    }
  }
  else if (upperBound == nil) {
    [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(buf)) appendWithNSString:@"must not be smaller than "])) appendWithId:lowerBound];
  }
  else {
    [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(buf)) appendWithNSString:@"must be in the range ["])) appendWithId:lowerBound])) appendWithChar:','])) appendWithId:upperBound])) appendWithChar:']'];
  }
  if (explain != nil) {
    [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(buf)) appendWithNSString:@": "])) appendWithNSString:explain];
  }
  return [((JavaLangStringBuilder *) nil_chk(buf)) description];
}

NSString *OrgJodaTimeIllegalFieldValueException_createMessageWithNSString_withNSString_(NSString *fieldName, NSString *value) {
  OrgJodaTimeIllegalFieldValueException_init();
  JavaLangStringBuffer *buf = [((JavaLangStringBuffer *) [[[JavaLangStringBuffer alloc] init] autorelease]) appendWithNSString:@"Value "];
  if (value == nil) {
    [((JavaLangStringBuffer *) nil_chk(buf)) appendWithNSString:@"null"];
  }
  else {
    [((JavaLangStringBuffer *) nil_chk(buf)) appendWithChar:'"'];
    [buf appendWithNSString:value];
    [buf appendWithChar:'"'];
  }
  [((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk(buf)) appendWithNSString:@" for "])) appendWithNSString:fieldName])) appendWithChar:' '])) appendWithNSString:@"is not supported"];
  return [buf description];
}

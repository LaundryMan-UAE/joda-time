//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nbransby/Documents/joda-time/src/main/java/org/joda/time/convert/ReadableDurationConverter.java
//

#include "Chronology.h"
#include "DateTimeUtils.h"
#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "ReadWritablePeriod.h"
#include "ReadableDuration.h"
#include "ReadableDurationConverter.h"

BOOL OrgJodaTimeConvertReadableDurationConverter_initialized = NO;

@implementation OrgJodaTimeConvertReadableDurationConverter

OrgJodaTimeConvertReadableDurationConverter * OrgJodaTimeConvertReadableDurationConverter_INSTANCE_;

- (instancetype)init {
  return [super init];
}

- (jlong)getDurationMillisWithId:(id)object {
  return [((id<OrgJodaTimeReadableDuration>) nil_chk(((id<OrgJodaTimeReadableDuration>) check_protocol_cast(object, @protocol(OrgJodaTimeReadableDuration))))) getMillis];
}

- (void)setIntoWithOrgJodaTimeReadWritablePeriod:(id<OrgJodaTimeReadWritablePeriod>)writablePeriod
                                          withId:(id)object
                       withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono {
  id<OrgJodaTimeReadableDuration> dur = (id<OrgJodaTimeReadableDuration>) check_protocol_cast(object, @protocol(OrgJodaTimeReadableDuration));
  chrono = OrgJodaTimeDateTimeUtils_getChronologyWithOrgJodaTimeChronology_(chrono);
  jlong duration = [((id<OrgJodaTimeReadableDuration>) nil_chk(dur)) getMillis];
  IOSIntArray *values = [((OrgJodaTimeChronology *) nil_chk(chrono)) getWithOrgJodaTimeReadablePeriod:writablePeriod withLong:duration];
  for (jint i = 0; i < ((IOSIntArray *) nil_chk(values))->size_; i++) {
    [((id<OrgJodaTimeReadWritablePeriod>) nil_chk(writablePeriod)) setValueWithInt:i withInt:IOSIntArray_Get(values, i)];
  }
}

- (IOSClass *)getSupportedType {
  return OrgJodaTimeReadableDuration_class_();
}

+ (void)initialize {
  if (self == [OrgJodaTimeConvertReadableDurationConverter class]) {
    JreStrongAssignAndConsume(&OrgJodaTimeConvertReadableDurationConverter_INSTANCE_, nil, [[OrgJodaTimeConvertReadableDurationConverter alloc] init]);
    J2OBJC_SET_INITIALIZED(OrgJodaTimeConvertReadableDurationConverter)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "ReadableDurationConverter", NULL, 0x4, NULL },
    { "getDurationMillisWithId:", "getDurationMillis", "J", 0x1, NULL },
    { "setIntoWithOrgJodaTimeReadWritablePeriod:withId:withOrgJodaTimeChronology:", "setInto", "V", 0x1, NULL },
    { "getSupportedType", NULL, "Ljava.lang.Class;", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE_", NULL, 0x18, "Lorg.joda.time.convert.ReadableDurationConverter;", &OrgJodaTimeConvertReadableDurationConverter_INSTANCE_,  },
  };
  static const J2ObjcClassInfo _OrgJodaTimeConvertReadableDurationConverter = { 1, "ReadableDurationConverter", "org.joda.time.convert", NULL, 0x0, 4, methods, 1, fields, 0, NULL};
  return &_OrgJodaTimeConvertReadableDurationConverter;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaTimeConvertReadableDurationConverter)

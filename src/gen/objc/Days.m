//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/andrewebling/Laundrapp/Joda-time-Project/joda-time/src/main/java/org/joda/time/Days.java
//

#include "BaseSingleFieldPeriod.h"
#include "Chronology.h"
#include "DateTime.h"
#include "DateTimeConstants.h"
#include "DateTimeUtils.h"
#include "Days.h"
#include "Duration.h"
#include "DurationField.h"
#include "DurationFieldType.h"
#include "FieldUtils.h"
#include "FromString.h"
#include "Hours.h"
#include "IOSClass.h"
#include "ISOPeriodFormat.h"
#include "LocalDate.h"
#include "Minutes.h"
#include "Period.h"
#include "PeriodFormatter.h"
#include "PeriodType.h"
#include "ReadableInstant.h"
#include "ReadableInterval.h"
#include "ReadablePartial.h"
#include "ReadablePeriod.h"
#include "Seconds.h"
#include "ToString.h"
#include "Weeks.h"
#include "java/lang/Integer.h"

BOOL OrgJodaTimeDays_initialized = NO;

@implementation OrgJodaTimeDays

OrgJodaTimeDays * OrgJodaTimeDays_ZERO_;
OrgJodaTimeDays * OrgJodaTimeDays_ONE_;
OrgJodaTimeDays * OrgJodaTimeDays_TWO_;
OrgJodaTimeDays * OrgJodaTimeDays_THREE_;
OrgJodaTimeDays * OrgJodaTimeDays_FOUR_;
OrgJodaTimeDays * OrgJodaTimeDays_FIVE_;
OrgJodaTimeDays * OrgJodaTimeDays_SIX_;
OrgJodaTimeDays * OrgJodaTimeDays_SEVEN_;
OrgJodaTimeDays * OrgJodaTimeDays_MAX_VALUE_;
OrgJodaTimeDays * OrgJodaTimeDays_MIN_VALUE_;
OrgJodaTimeFormatPeriodFormatter * OrgJodaTimeDays_PARSER_;

+ (OrgJodaTimeDays *)daysWithInt:(int)days {
  switch (days) {
    case 0:
    return OrgJodaTimeDays_ZERO_;
    case 1:
    return OrgJodaTimeDays_ONE_;
    case 2:
    return OrgJodaTimeDays_TWO_;
    case 3:
    return OrgJodaTimeDays_THREE_;
    case 4:
    return OrgJodaTimeDays_FOUR_;
    case 5:
    return OrgJodaTimeDays_FIVE_;
    case 6:
    return OrgJodaTimeDays_SIX_;
    case 7:
    return OrgJodaTimeDays_SEVEN_;
    case JavaLangInteger_MAX_VALUE:
    return OrgJodaTimeDays_MAX_VALUE_;
    case JavaLangInteger_MIN_VALUE:
    return OrgJodaTimeDays_MIN_VALUE_;
    default:
    return [[OrgJodaTimeDays alloc] initWithInt:days];
  }
}

+ (OrgJodaTimeDays *)daysBetweenWithOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)start
                                withOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)end {
  int amount = [OrgJodaTimeBaseBaseSingleFieldPeriod betweenWithOrgJodaTimeReadableInstant:start withOrgJodaTimeReadableInstant:end withOrgJodaTimeDurationFieldType:[OrgJodaTimeDurationFieldType days]];
  return [OrgJodaTimeDays daysWithInt:amount];
}

+ (OrgJodaTimeDays *)daysBetweenWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)start
                                withOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)end {
  if ([(id) start isKindOfClass:[OrgJodaTimeLocalDate class]] && [(id) end isKindOfClass:[OrgJodaTimeLocalDate class]]) {
    OrgJodaTimeChronology *chrono = [OrgJodaTimeDateTimeUtils getChronologyWithOrgJodaTimeChronology:[((id<OrgJodaTimeReadablePartial>) nil_chk(start)) getChronology]];
    int days = [((OrgJodaTimeDurationField *) nil_chk([((OrgJodaTimeChronology *) nil_chk(chrono)) days])) getDifferenceWithLong:[((OrgJodaTimeLocalDate *) nil_chk(((OrgJodaTimeLocalDate *) check_class_cast(end, [OrgJodaTimeLocalDate class])))) getLocalMillis] withLong:[((OrgJodaTimeLocalDate *) check_class_cast(start, [OrgJodaTimeLocalDate class])) getLocalMillis]];
    return [OrgJodaTimeDays daysWithInt:days];
  }
  int amount = [OrgJodaTimeBaseBaseSingleFieldPeriod betweenWithOrgJodaTimeReadablePartial:start withOrgJodaTimeReadablePartial:end withOrgJodaTimeReadablePeriod:OrgJodaTimeDays_ZERO_];
  return [OrgJodaTimeDays daysWithInt:amount];
}

+ (OrgJodaTimeDays *)daysInWithOrgJodaTimeReadableInterval:(id<OrgJodaTimeReadableInterval>)interval {
  if (interval == nil) {
    return OrgJodaTimeDays_ZERO_;
  }
  int amount = [OrgJodaTimeBaseBaseSingleFieldPeriod betweenWithOrgJodaTimeReadableInstant:[((id<OrgJodaTimeReadableInterval>) nil_chk(interval)) getStart] withOrgJodaTimeReadableInstant:[interval getEnd] withOrgJodaTimeDurationFieldType:[OrgJodaTimeDurationFieldType days]];
  return [OrgJodaTimeDays daysWithInt:amount];
}

+ (OrgJodaTimeDays *)standardDaysInWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period {
  int amount = [OrgJodaTimeBaseBaseSingleFieldPeriod standardPeriodInWithOrgJodaTimeReadablePeriod:period withLong:OrgJodaTimeDateTimeConstants_MILLIS_PER_DAY];
  return [OrgJodaTimeDays daysWithInt:amount];
}

+ (OrgJodaTimeDays *)parseDaysWithNSString:(NSString *)periodStr {
  if (periodStr == nil) {
    return OrgJodaTimeDays_ZERO_;
  }
  OrgJodaTimePeriod *p = [((OrgJodaTimeFormatPeriodFormatter *) nil_chk(OrgJodaTimeDays_PARSER_)) parsePeriodWithNSString:periodStr];
  return [OrgJodaTimeDays daysWithInt:[((OrgJodaTimePeriod *) nil_chk(p)) getDays]];
}

- (instancetype)initWithInt:(int)days {
  return [super initWithInt:days];
}

- (id)readResolve {
  return [OrgJodaTimeDays daysWithInt:[self getValue]];
}

- (OrgJodaTimeDurationFieldType *)getFieldType {
  return [OrgJodaTimeDurationFieldType days];
}

- (OrgJodaTimePeriodType *)getPeriodType {
  return [OrgJodaTimePeriodType days];
}

- (OrgJodaTimeWeeks *)toStandardWeeks {
  return [OrgJodaTimeWeeks weeksWithInt:[self getValue] / OrgJodaTimeDateTimeConstants_DAYS_PER_WEEK];
}

- (OrgJodaTimeHours *)toStandardHours {
  return [OrgJodaTimeHours hoursWithInt:[OrgJodaTimeFieldFieldUtils safeMultiplyWithInt:[self getValue] withInt:OrgJodaTimeDateTimeConstants_HOURS_PER_DAY]];
}

- (OrgJodaTimeMinutes *)toStandardMinutes {
  return [OrgJodaTimeMinutes minutesWithInt:[OrgJodaTimeFieldFieldUtils safeMultiplyWithInt:[self getValue] withInt:OrgJodaTimeDateTimeConstants_MINUTES_PER_DAY]];
}

- (OrgJodaTimeSeconds *)toStandardSeconds {
  return [OrgJodaTimeSeconds secondsWithInt:[OrgJodaTimeFieldFieldUtils safeMultiplyWithInt:[self getValue] withInt:OrgJodaTimeDateTimeConstants_SECONDS_PER_DAY]];
}

- (OrgJodaTimeDuration *)toStandardDuration {
  long long int days = [self getValue];
  return [[OrgJodaTimeDuration alloc] initWithLong:days * OrgJodaTimeDateTimeConstants_MILLIS_PER_DAY];
}

- (int)getDays {
  return [self getValue];
}

- (OrgJodaTimeDays *)plusWithInt:(int)days {
  if (days == 0) {
    return self;
  }
  return [OrgJodaTimeDays daysWithInt:[OrgJodaTimeFieldFieldUtils safeAddWithInt:[self getValue] withInt:days]];
}

- (OrgJodaTimeDays *)plusWithOrgJodaTimeDays:(OrgJodaTimeDays *)days {
  if (days == nil) {
    return self;
  }
  return [self plusWithInt:[((OrgJodaTimeDays *) nil_chk(days)) getValue]];
}

- (OrgJodaTimeDays *)minusWithInt:(int)days {
  return [self plusWithInt:[OrgJodaTimeFieldFieldUtils safeNegateWithInt:days]];
}

- (OrgJodaTimeDays *)minusWithOrgJodaTimeDays:(OrgJodaTimeDays *)days {
  if (days == nil) {
    return self;
  }
  return [self minusWithInt:[((OrgJodaTimeDays *) nil_chk(days)) getValue]];
}

- (OrgJodaTimeDays *)multipliedByWithInt:(int)scalar {
  return [OrgJodaTimeDays daysWithInt:[OrgJodaTimeFieldFieldUtils safeMultiplyWithInt:[self getValue] withInt:scalar]];
}

- (OrgJodaTimeDays *)dividedByWithInt:(int)divisor {
  if (divisor == 1) {
    return self;
  }
  return [OrgJodaTimeDays daysWithInt:[self getValue] / divisor];
}

- (OrgJodaTimeDays *)negated {
  return [OrgJodaTimeDays daysWithInt:[OrgJodaTimeFieldFieldUtils safeNegateWithInt:[self getValue]]];
}

- (BOOL)isGreaterThanWithOrgJodaTimeDays:(OrgJodaTimeDays *)other {
  if (other == nil) {
    return [self getValue] > 0;
  }
  return [self getValue] > [((OrgJodaTimeDays *) nil_chk(other)) getValue];
}

- (BOOL)isLessThanWithOrgJodaTimeDays:(OrgJodaTimeDays *)other {
  if (other == nil) {
    return [self getValue] < 0;
  }
  return [self getValue] < [((OrgJodaTimeDays *) nil_chk(other)) getValue];
}

- (NSString *)description {
  return [NSString stringWithFormat:@"P%@D", [NSString valueOfInt:[self getValue]]];
}

+ (void)initialize {
  if (self == [OrgJodaTimeDays class]) {
    OrgJodaTimeDays_ZERO_ = [[OrgJodaTimeDays alloc] initWithInt:0];
    OrgJodaTimeDays_ONE_ = [[OrgJodaTimeDays alloc] initWithInt:1];
    OrgJodaTimeDays_TWO_ = [[OrgJodaTimeDays alloc] initWithInt:2];
    OrgJodaTimeDays_THREE_ = [[OrgJodaTimeDays alloc] initWithInt:3];
    OrgJodaTimeDays_FOUR_ = [[OrgJodaTimeDays alloc] initWithInt:4];
    OrgJodaTimeDays_FIVE_ = [[OrgJodaTimeDays alloc] initWithInt:5];
    OrgJodaTimeDays_SIX_ = [[OrgJodaTimeDays alloc] initWithInt:6];
    OrgJodaTimeDays_SEVEN_ = [[OrgJodaTimeDays alloc] initWithInt:7];
    OrgJodaTimeDays_MAX_VALUE_ = [[OrgJodaTimeDays alloc] initWithInt:JavaLangInteger_MAX_VALUE];
    OrgJodaTimeDays_MIN_VALUE_ = [[OrgJodaTimeDays alloc] initWithInt:JavaLangInteger_MIN_VALUE];
    OrgJodaTimeDays_PARSER_ = [((OrgJodaTimeFormatPeriodFormatter *) nil_chk([OrgJodaTimeFormatISOPeriodFormat standard])) withParseTypeWithOrgJodaTimePeriodType:[OrgJodaTimePeriodType days]];
    OrgJodaTimeDays_initialized = YES;
  }
}
+ (IOSObjectArray *)__annotations_parseDaysWithNSString_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[OrgJodaConvertFromString alloc] init] } count:1 type:[IOSClass classWithProtocol:@protocol(JavaLangAnnotationAnnotation)]];
}

+ (IOSObjectArray *)__annotations_description {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[OrgJodaConvertToString alloc] init] } count:1 type:[IOSClass classWithProtocol:@protocol(JavaLangAnnotationAnnotation)]];
}


+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "daysWithInt:", "days", "Lorg.joda.time.Days;", 0x9, NULL },
    { "daysBetweenWithOrgJodaTimeReadableInstant:withOrgJodaTimeReadableInstant:", "daysBetween", "Lorg.joda.time.Days;", 0x9, NULL },
    { "daysBetweenWithOrgJodaTimeReadablePartial:withOrgJodaTimeReadablePartial:", "daysBetween", "Lorg.joda.time.Days;", 0x9, NULL },
    { "daysInWithOrgJodaTimeReadableInterval:", "daysIn", "Lorg.joda.time.Days;", 0x9, NULL },
    { "standardDaysInWithOrgJodaTimeReadablePeriod:", "standardDaysIn", "Lorg.joda.time.Days;", 0x9, NULL },
    { "parseDaysWithNSString:", "parseDays", "Lorg.joda.time.Days;", 0x9, NULL },
    { "initWithInt:", "Days", NULL, 0x2, NULL },
    { "readResolve", NULL, "Ljava.lang.Object;", 0x2, NULL },
    { "getFieldType", NULL, "Lorg.joda.time.DurationFieldType;", 0x1, NULL },
    { "getPeriodType", NULL, "Lorg.joda.time.PeriodType;", 0x1, NULL },
    { "toStandardWeeks", NULL, "Lorg.joda.time.Weeks;", 0x1, NULL },
    { "toStandardHours", NULL, "Lorg.joda.time.Hours;", 0x1, NULL },
    { "toStandardMinutes", NULL, "Lorg.joda.time.Minutes;", 0x1, NULL },
    { "toStandardSeconds", NULL, "Lorg.joda.time.Seconds;", 0x1, NULL },
    { "toStandardDuration", NULL, "Lorg.joda.time.Duration;", 0x1, NULL },
    { "getDays", NULL, "I", 0x1, NULL },
    { "plusWithInt:", "plus", "Lorg.joda.time.Days;", 0x1, NULL },
    { "plusWithOrgJodaTimeDays:", "plus", "Lorg.joda.time.Days;", 0x1, NULL },
    { "minusWithInt:", "minus", "Lorg.joda.time.Days;", 0x1, NULL },
    { "minusWithOrgJodaTimeDays:", "minus", "Lorg.joda.time.Days;", 0x1, NULL },
    { "multipliedByWithInt:", "multipliedBy", "Lorg.joda.time.Days;", 0x1, NULL },
    { "dividedByWithInt:", "dividedBy", "Lorg.joda.time.Days;", 0x1, NULL },
    { "negated", NULL, "Lorg.joda.time.Days;", 0x1, NULL },
    { "isGreaterThanWithOrgJodaTimeDays:", "isGreaterThan", "Z", 0x1, NULL },
    { "isLessThanWithOrgJodaTimeDays:", "isLessThan", "Z", 0x1, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "ZERO_", NULL, 0x19, "Lorg.joda.time.Days;", &OrgJodaTimeDays_ZERO_,  },
    { "ONE_", NULL, 0x19, "Lorg.joda.time.Days;", &OrgJodaTimeDays_ONE_,  },
    { "TWO_", NULL, 0x19, "Lorg.joda.time.Days;", &OrgJodaTimeDays_TWO_,  },
    { "THREE_", NULL, 0x19, "Lorg.joda.time.Days;", &OrgJodaTimeDays_THREE_,  },
    { "FOUR_", NULL, 0x19, "Lorg.joda.time.Days;", &OrgJodaTimeDays_FOUR_,  },
    { "FIVE_", NULL, 0x19, "Lorg.joda.time.Days;", &OrgJodaTimeDays_FIVE_,  },
    { "SIX_", NULL, 0x19, "Lorg.joda.time.Days;", &OrgJodaTimeDays_SIX_,  },
    { "SEVEN_", NULL, 0x19, "Lorg.joda.time.Days;", &OrgJodaTimeDays_SEVEN_,  },
    { "MAX_VALUE_", NULL, 0x19, "Lorg.joda.time.Days;", &OrgJodaTimeDays_MAX_VALUE_,  },
    { "MIN_VALUE_", NULL, 0x19, "Lorg.joda.time.Days;", &OrgJodaTimeDays_MIN_VALUE_,  },
    { "PARSER_", NULL, 0x1a, "Lorg.joda.time.format.PeriodFormatter;", &OrgJodaTimeDays_PARSER_,  },
    { "serialVersionUID_Days_", "serialVersionUID", 0x1a, "J", NULL, .constantValue.asLong = OrgJodaTimeDays_serialVersionUID },
  };
  static J2ObjcClassInfo _OrgJodaTimeDays = { "Days", "org.joda.time", NULL, 0x11, 26, methods, 12, fields, 0, NULL};
  return &_OrgJodaTimeDays;
}

@end

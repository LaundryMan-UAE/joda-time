//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/andrewebling/Laundrapp/Joda-time-Project/joda-time/src/main/java/org/joda/time/chrono/BasicFixedMonthChronology.java
//

#include "BasicChronology.h"
#include "BasicFixedMonthChronology.h"
#include "Chronology.h"
#include "DateTimeConstants.h"

@implementation OrgJodaTimeChronoBasicFixedMonthChronology

- (instancetype)initWithOrgJodaTimeChronology:(OrgJodaTimeChronology *)base
                                       withId:(id)param
                                      withInt:(int)minDaysInFirstWeek {
  return [super initWithOrgJodaTimeChronology:base withId:param withInt:minDaysInFirstWeek];
}

- (long long int)setYearWithLong:(long long int)instant
                         withInt:(int)year {
  int thisYear = [self getYearWithLong:instant];
  int dayOfYear = [self getDayOfYearWithLong:instant withInt:thisYear];
  int millisOfDay = [self getMillisOfDayWithLong:instant];
  if (dayOfYear > 365) {
    if (![self isLeapYearWithInt:year]) {
      dayOfYear--;
    }
  }
  instant = [self getYearMonthDayMillisWithInt:year withInt:1 withInt:dayOfYear];
  instant += millisOfDay;
  return instant;
}

- (long long int)getYearDifferenceWithLong:(long long int)minuendInstant
                                  withLong:(long long int)subtrahendInstant {
  int minuendYear = [self getYearWithLong:minuendInstant];
  int subtrahendYear = [self getYearWithLong:subtrahendInstant];
  long long int minuendRem = minuendInstant - [self getYearMillisWithInt:minuendYear];
  long long int subtrahendRem = subtrahendInstant - [self getYearMillisWithInt:subtrahendYear];
  int difference = minuendYear - subtrahendYear;
  if (minuendRem < subtrahendRem) {
    difference--;
  }
  return difference;
}

- (long long int)getTotalMillisByYearMonthWithInt:(int)year
                                          withInt:(int)month {
  return ((month - 1) * OrgJodaTimeChronoBasicFixedMonthChronology_MILLIS_PER_MONTH);
}

- (int)getDayOfMonthWithLong:(long long int)millis {
  return ([self getDayOfYearWithLong:millis] - 1) % OrgJodaTimeChronoBasicFixedMonthChronology_MONTH_LENGTH + 1;
}

- (BOOL)isLeapYearWithInt:(int)year {
  return (year & 3) == 3;
}

- (int)getDaysInYearMonthWithInt:(int)year
                         withInt:(int)month {
  return (month != 13) ? OrgJodaTimeChronoBasicFixedMonthChronology_MONTH_LENGTH : ([self isLeapYearWithInt:year] ? 6 : 5);
}

- (int)getDaysInMonthMax {
  return OrgJodaTimeChronoBasicFixedMonthChronology_MONTH_LENGTH;
}

- (int)getDaysInMonthMaxWithInt:(int)month {
  return (month != 13 ? OrgJodaTimeChronoBasicFixedMonthChronology_MONTH_LENGTH : 6);
}

- (int)getMonthOfYearWithLong:(long long int)millis {
  return ([self getDayOfYearWithLong:millis] - 1) / OrgJodaTimeChronoBasicFixedMonthChronology_MONTH_LENGTH + 1;
}

- (int)getMonthOfYearWithLong:(long long int)millis
                      withInt:(int)year {
  long long int monthZeroBased = (millis - [self getYearMillisWithInt:year]) / OrgJodaTimeChronoBasicFixedMonthChronology_MILLIS_PER_MONTH;
  return ((int) monthZeroBased) + 1;
}

- (int)getMaxMonth {
  return 13;
}

- (long long int)getAverageMillisPerYear {
  return OrgJodaTimeChronoBasicFixedMonthChronology_MILLIS_PER_YEAR;
}

- (long long int)getAverageMillisPerYearDividedByTwo {
  return OrgJodaTimeChronoBasicFixedMonthChronology_MILLIS_PER_YEAR / 2;
}

- (long long int)getAverageMillisPerMonth {
  return OrgJodaTimeChronoBasicFixedMonthChronology_MILLIS_PER_MONTH;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "initWithOrgJodaTimeChronology:withId:withInt:", "BasicFixedMonthChronology", NULL, 0x0, NULL },
    { "setYearWithLong:withInt:", "setYear", "J", 0x0, NULL },
    { "getYearDifferenceWithLong:withLong:", "getYearDifference", "J", 0x0, NULL },
    { "getTotalMillisByYearMonthWithInt:withInt:", "getTotalMillisByYearMonth", "J", 0x0, NULL },
    { "getDayOfMonthWithLong:", "getDayOfMonth", "I", 0x0, NULL },
    { "isLeapYearWithInt:", "isLeapYear", "Z", 0x0, NULL },
    { "getDaysInYearMonthWithInt:withInt:", "getDaysInYearMonth", "I", 0x0, NULL },
    { "getDaysInMonthMax", NULL, "I", 0x0, NULL },
    { "getDaysInMonthMaxWithInt:", "getDaysInMonthMax", "I", 0x0, NULL },
    { "getMonthOfYearWithLong:", "getMonthOfYear", "I", 0x0, NULL },
    { "getMonthOfYearWithLong:withInt:", "getMonthOfYear", "I", 0x0, NULL },
    { "getMaxMonth", NULL, "I", 0x0, NULL },
    { "getAverageMillisPerYear", NULL, "J", 0x0, NULL },
    { "getAverageMillisPerYearDividedByTwo", NULL, "J", 0x0, NULL },
    { "getAverageMillisPerMonth", NULL, "J", 0x0, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_BasicFixedMonthChronology_", "serialVersionUID", 0x1a, "J", NULL, .constantValue.asLong = OrgJodaTimeChronoBasicFixedMonthChronology_serialVersionUID },
    { "MONTH_LENGTH_", NULL, 0x18, "I", NULL, .constantValue.asInt = OrgJodaTimeChronoBasicFixedMonthChronology_MONTH_LENGTH },
    { "MILLIS_PER_YEAR_", NULL, 0x18, "J", NULL, .constantValue.asLong = OrgJodaTimeChronoBasicFixedMonthChronology_MILLIS_PER_YEAR },
    { "MILLIS_PER_MONTH_", NULL, 0x18, "J", NULL, .constantValue.asLong = OrgJodaTimeChronoBasicFixedMonthChronology_MILLIS_PER_MONTH },
  };
  static J2ObjcClassInfo _OrgJodaTimeChronoBasicFixedMonthChronology = { "BasicFixedMonthChronology", "org.joda.time.chrono", NULL, 0x400, 15, methods, 4, fields, 0, NULL};
  return &_OrgJodaTimeChronoBasicFixedMonthChronology;
}

@end

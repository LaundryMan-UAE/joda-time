//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nbransby/Documents/joda-time/src/main/java/org/joda/time/chrono/BasicFixedMonthChronology.java
//

#ifndef _OrgJodaTimeChronoBasicFixedMonthChronology_H_
#define _OrgJodaTimeChronoBasicFixedMonthChronology_H_

@class OrgJodaTimeChronology;

#include "BasicChronology.h"
#include "J2ObjC_header.h"

#define OrgJodaTimeChronoBasicFixedMonthChronology_MILLIS_PER_MONTH 2592000000LL
#define OrgJodaTimeChronoBasicFixedMonthChronology_MILLIS_PER_YEAR 31557600000LL
#define OrgJodaTimeChronoBasicFixedMonthChronology_MONTH_LENGTH 30
#define OrgJodaTimeChronoBasicFixedMonthChronology_serialVersionUID 261387371998LL

/**
 @brief Abstract implementation of a calendar system based around fixed length months.
 <p> As the month length is fixed various calculations can be optimised. This implementation assumes any additional days after twelve months fall into a thirteenth month. <p> BasicFixedMonthChronology is thread-safe and immutable, and all subclasses must be as well.
 @author Brian S O'Neill
 @author Stephen Colebourne
 @since 1.2, refactored from CopticChronology
 */
@interface OrgJodaTimeChronoBasicFixedMonthChronology : OrgJodaTimeChronoBasicChronology {
}

/**
 @brief Restricted constructor.
 @param base the base chronology
 @param param the init parameter
 @param minDaysInFirstWeek the minimum days in the first week
 */
- (instancetype)initWithOrgJodaTimeChronology:(OrgJodaTimeChronology *)base
                                       withId:(id)param
                                      withInt:(jint)minDaysInFirstWeek;

- (jlong)setYearWithLong:(jlong)instant
                 withInt:(jint)year;

- (jlong)getYearDifferenceWithLong:(jlong)minuendInstant
                          withLong:(jlong)subtrahendInstant;

- (jlong)getTotalMillisByYearMonthWithInt:(jint)year
                                  withInt:(jint)month;

- (jint)getDayOfMonthWithLong:(jlong)millis;

- (jboolean)isLeapYearWithInt:(jint)year;

- (jint)getDaysInYearMonthWithInt:(jint)year
                          withInt:(jint)month;

- (jint)getDaysInMonthMax;

- (jint)getDaysInMonthMaxWithInt:(jint)month;

- (jint)getMonthOfYearWithLong:(jlong)millis;

- (jint)getMonthOfYearWithLong:(jlong)millis
                       withInt:(jint)year;

- (jint)getMaxMonth;

- (jlong)getAverageMillisPerYear;

- (jlong)getAverageMillisPerYearDividedByTwo;

- (jlong)getAverageMillisPerMonth;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeChronoBasicFixedMonthChronology)

CF_EXTERN_C_BEGIN

J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeChronoBasicFixedMonthChronology, serialVersionUID, jlong)

J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeChronoBasicFixedMonthChronology, MONTH_LENGTH, jint)

J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeChronoBasicFixedMonthChronology, MILLIS_PER_YEAR, jlong)

J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeChronoBasicFixedMonthChronology, MILLIS_PER_MONTH, jlong)
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeChronoBasicFixedMonthChronology)

#endif // _OrgJodaTimeChronoBasicFixedMonthChronology_H_

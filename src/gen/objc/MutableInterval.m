//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/andrewebling/Laundrapp/Joda-time-Project/joda-time/src/main/java/org/joda/time/MutableInterval.java
//

#include "BaseInterval.h"
#include "Chronology.h"
#include "DateTimeUtils.h"
#include "FieldUtils.h"
#include "MutableInterval.h"
#include "ReadableDuration.h"
#include "ReadableInstant.h"
#include "ReadableInterval.h"
#include "ReadablePeriod.h"
#include "java/lang/CloneNotSupportedException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/InternalError.h"

@implementation OrgJodaTimeMutableInterval

+ (OrgJodaTimeMutableInterval *)parseWithNSString:(NSString *)str {
  return [[OrgJodaTimeMutableInterval alloc] initWithId:str];
}

- (instancetype)init {
  return [super initWithLong:0LL withLong:0LL withOrgJodaTimeChronology:nil];
}

- (instancetype)initWithLong:(long long int)startInstant
                    withLong:(long long int)endInstant {
  return [super initWithLong:startInstant withLong:endInstant withOrgJodaTimeChronology:nil];
}

- (instancetype)initWithLong:(long long int)startInstant
                    withLong:(long long int)endInstant
   withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology {
  return [super initWithLong:startInstant withLong:endInstant withOrgJodaTimeChronology:chronology];
}

- (instancetype)initWithOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)start
                    withOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)end {
  return [super initWithOrgJodaTimeReadableInstant:start withOrgJodaTimeReadableInstant:end];
}

- (instancetype)initWithOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)start
                   withOrgJodaTimeReadableDuration:(id<OrgJodaTimeReadableDuration>)duration {
  return [super initWithOrgJodaTimeReadableInstant:start withOrgJodaTimeReadableDuration:duration];
}

- (instancetype)initWithOrgJodaTimeReadableDuration:(id<OrgJodaTimeReadableDuration>)duration
                     withOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)end {
  return [super initWithOrgJodaTimeReadableDuration:duration withOrgJodaTimeReadableInstant:end];
}

- (instancetype)initWithOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)start
                     withOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period {
  return [super initWithOrgJodaTimeReadableInstant:start withOrgJodaTimeReadablePeriod:period];
}

- (instancetype)initWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period
                   withOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)end {
  return [super initWithOrgJodaTimeReadablePeriod:period withOrgJodaTimeReadableInstant:end];
}

- (instancetype)initWithId:(id)interval {
  return [super initWithId:interval withOrgJodaTimeChronology:nil];
}

- (instancetype)initWithId:(id)interval
 withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology {
  return [super initWithId:interval withOrgJodaTimeChronology:chronology];
}

- (void)setIntervalWithLong:(long long int)startInstant
                   withLong:(long long int)endInstant {
  [super setIntervalWithLong:startInstant withLong:endInstant withOrgJodaTimeChronology:[self getChronology]];
}

- (void)setIntervalWithOrgJodaTimeReadableInterval:(id<OrgJodaTimeReadableInterval>)interval {
  if (interval == nil) {
    @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:@"Interval must not be null"];
  }
  long long int startMillis = [((id<OrgJodaTimeReadableInterval>) nil_chk(interval)) getStartMillis];
  long long int endMillis = [interval getEndMillis];
  OrgJodaTimeChronology *chrono = [interval getChronology];
  [super setIntervalWithLong:startMillis withLong:endMillis withOrgJodaTimeChronology:chrono];
}

- (void)setIntervalWithOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)start
                   withOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)end {
  if (start == nil && end == nil) {
    long long int now = [OrgJodaTimeDateTimeUtils currentTimeMillis];
    [self setIntervalWithLong:now withLong:now];
  }
  else {
    long long int startMillis = [OrgJodaTimeDateTimeUtils getInstantMillisWithOrgJodaTimeReadableInstant:start];
    long long int endMillis = [OrgJodaTimeDateTimeUtils getInstantMillisWithOrgJodaTimeReadableInstant:end];
    OrgJodaTimeChronology *chrono = [OrgJodaTimeDateTimeUtils getInstantChronologyWithOrgJodaTimeReadableInstant:start];
    [super setIntervalWithLong:startMillis withLong:endMillis withOrgJodaTimeChronology:chrono];
  }
}

- (void)setChronologyWithOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono {
  [super setIntervalWithLong:[self getStartMillis] withLong:[self getEndMillis] withOrgJodaTimeChronology:chrono];
}

- (void)setStartMillisWithLong:(long long int)startInstant {
  [super setIntervalWithLong:startInstant withLong:[self getEndMillis] withOrgJodaTimeChronology:[self getChronology]];
}

- (void)setStartWithOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)start {
  long long int startMillis = [OrgJodaTimeDateTimeUtils getInstantMillisWithOrgJodaTimeReadableInstant:start];
  [super setIntervalWithLong:startMillis withLong:[self getEndMillis] withOrgJodaTimeChronology:[self getChronology]];
}

- (void)setEndMillisWithLong:(long long int)endInstant {
  [super setIntervalWithLong:[self getStartMillis] withLong:endInstant withOrgJodaTimeChronology:[self getChronology]];
}

- (void)setEndWithOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)end {
  long long int endMillis = [OrgJodaTimeDateTimeUtils getInstantMillisWithOrgJodaTimeReadableInstant:end];
  [super setIntervalWithLong:[self getStartMillis] withLong:endMillis withOrgJodaTimeChronology:[self getChronology]];
}

- (void)setDurationAfterStartWithLong:(long long int)duration {
  [self setEndMillisWithLong:[OrgJodaTimeFieldFieldUtils safeAddWithLong:[self getStartMillis] withLong:duration]];
}

- (void)setDurationBeforeEndWithLong:(long long int)duration {
  [self setStartMillisWithLong:[OrgJodaTimeFieldFieldUtils safeAddWithLong:[self getEndMillis] withLong:-duration]];
}

- (void)setDurationAfterStartWithOrgJodaTimeReadableDuration:(id<OrgJodaTimeReadableDuration>)duration {
  long long int durationMillis = [OrgJodaTimeDateTimeUtils getDurationMillisWithOrgJodaTimeReadableDuration:duration];
  [self setEndMillisWithLong:[OrgJodaTimeFieldFieldUtils safeAddWithLong:[self getStartMillis] withLong:durationMillis]];
}

- (void)setDurationBeforeEndWithOrgJodaTimeReadableDuration:(id<OrgJodaTimeReadableDuration>)duration {
  long long int durationMillis = [OrgJodaTimeDateTimeUtils getDurationMillisWithOrgJodaTimeReadableDuration:duration];
  [self setStartMillisWithLong:[OrgJodaTimeFieldFieldUtils safeAddWithLong:[self getEndMillis] withLong:-durationMillis]];
}

- (void)setPeriodAfterStartWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period {
  if (period == nil) {
    [self setEndMillisWithLong:[self getStartMillis]];
  }
  else {
    [self setEndMillisWithLong:[((OrgJodaTimeChronology *) nil_chk([self getChronology])) addWithOrgJodaTimeReadablePeriod:period withLong:[self getStartMillis] withInt:1]];
  }
}

- (void)setPeriodBeforeEndWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period {
  if (period == nil) {
    [self setStartMillisWithLong:[self getEndMillis]];
  }
  else {
    [self setStartMillisWithLong:[((OrgJodaTimeChronology *) nil_chk([self getChronology])) addWithOrgJodaTimeReadablePeriod:period withLong:[self getEndMillis] withInt:-1]];
  }
}

- (OrgJodaTimeMutableInterval *)copy__ {
  return (OrgJodaTimeMutableInterval *) check_class_cast([self clone], [OrgJodaTimeMutableInterval class]);
}

- (id)clone {
  @try {
    return [super clone];
  }
  @catch (JavaLangCloneNotSupportedException *ex) {
    @throw [[JavaLangInternalError alloc] initWithNSString:@"Clone error"];
  }
}

- (id)copyWithZone:(NSZone *)zone {
  return [self clone];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "parseWithNSString:", "parse", "Lorg.joda.time.MutableInterval;", 0x9, NULL },
    { "init", "MutableInterval", NULL, 0x1, NULL },
    { "initWithLong:withLong:", "MutableInterval", NULL, 0x1, NULL },
    { "initWithLong:withLong:withOrgJodaTimeChronology:", "MutableInterval", NULL, 0x1, NULL },
    { "initWithOrgJodaTimeReadableInstant:withOrgJodaTimeReadableInstant:", "MutableInterval", NULL, 0x1, NULL },
    { "initWithOrgJodaTimeReadableInstant:withOrgJodaTimeReadableDuration:", "MutableInterval", NULL, 0x1, NULL },
    { "initWithOrgJodaTimeReadableDuration:withOrgJodaTimeReadableInstant:", "MutableInterval", NULL, 0x1, NULL },
    { "initWithOrgJodaTimeReadableInstant:withOrgJodaTimeReadablePeriod:", "MutableInterval", NULL, 0x1, NULL },
    { "initWithOrgJodaTimeReadablePeriod:withOrgJodaTimeReadableInstant:", "MutableInterval", NULL, 0x1, NULL },
    { "initWithId:", "MutableInterval", NULL, 0x1, NULL },
    { "initWithId:withOrgJodaTimeChronology:", "MutableInterval", NULL, 0x1, NULL },
    { "setIntervalWithLong:withLong:", "setInterval", "V", 0x1, NULL },
    { "setIntervalWithOrgJodaTimeReadableInterval:", "setInterval", "V", 0x1, NULL },
    { "setIntervalWithOrgJodaTimeReadableInstant:withOrgJodaTimeReadableInstant:", "setInterval", "V", 0x1, NULL },
    { "setChronologyWithOrgJodaTimeChronology:", "setChronology", "V", 0x1, NULL },
    { "setStartMillisWithLong:", "setStartMillis", "V", 0x1, NULL },
    { "setStartWithOrgJodaTimeReadableInstant:", "setStart", "V", 0x1, NULL },
    { "setEndMillisWithLong:", "setEndMillis", "V", 0x1, NULL },
    { "setEndWithOrgJodaTimeReadableInstant:", "setEnd", "V", 0x1, NULL },
    { "setDurationAfterStartWithLong:", "setDurationAfterStart", "V", 0x1, NULL },
    { "setDurationBeforeEndWithLong:", "setDurationBeforeEnd", "V", 0x1, NULL },
    { "setDurationAfterStartWithOrgJodaTimeReadableDuration:", "setDurationAfterStart", "V", 0x1, NULL },
    { "setDurationBeforeEndWithOrgJodaTimeReadableDuration:", "setDurationBeforeEnd", "V", 0x1, NULL },
    { "setPeriodAfterStartWithOrgJodaTimeReadablePeriod:", "setPeriodAfterStart", "V", 0x1, NULL },
    { "setPeriodBeforeEndWithOrgJodaTimeReadablePeriod:", "setPeriodBeforeEnd", "V", 0x1, NULL },
    { "copy__", "copy", "Lorg.joda.time.MutableInterval;", 0x1, NULL },
    { "clone", NULL, "Ljava.lang.Object;", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_MutableInterval_", "serialVersionUID", 0x1a, "J", NULL, .constantValue.asLong = OrgJodaTimeMutableInterval_serialVersionUID },
  };
  static J2ObjcClassInfo _OrgJodaTimeMutableInterval = { "MutableInterval", "org.joda.time", NULL, 0x1, 27, methods, 1, fields, 0, NULL};
  return &_OrgJodaTimeMutableInterval;
}

@end

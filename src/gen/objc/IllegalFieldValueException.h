//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nbransby/Documents/joda-time/src/main/java/org/joda/time/IllegalFieldValueException.java
//

#ifndef _OrgJodaTimeIllegalFieldValueException_H_
#define _OrgJodaTimeIllegalFieldValueException_H_

@class OrgJodaTimeDateTimeFieldType;
@class OrgJodaTimeDurationFieldType;

#import "JreEmulation.h"
#include "java/lang/IllegalArgumentException.h"

#define OrgJodaTimeIllegalFieldValueException_serialVersionUID 6305711765985447737LL

/**
 @brief Exception thrown when attempting to set a field outside its supported range.
 @author Brian S O'Neill
 @since 1.1
 */
@interface OrgJodaTimeIllegalFieldValueException : JavaLangIllegalArgumentException {
 @public
  OrgJodaTimeDateTimeFieldType *iDateTimeFieldType_;
  OrgJodaTimeDurationFieldType *iDurationFieldType_;
  NSString *iFieldName_;
  NSNumber *iNumberValue_;
  NSString *iStringValue_;
  NSNumber *iLowerBound_;
  NSNumber *iUpperBound_;
  NSString *iMessage_;
}

/**
 @brief Creates a message for the exception.
 @param fieldName the field name
 @param value the value rejected
 @param lowerBound the lower bound allowed
 @param upperBound the uppe bound allowed
 @param explain an explanation
 @return the message
 */
+ (NSString *)createMessageWithNSString:(NSString *)fieldName
                           withNSNumber:(NSNumber *)value
                           withNSNumber:(NSNumber *)lowerBound
                           withNSNumber:(NSNumber *)upperBound
                           withNSString:(NSString *)explain;

/**
 @brief Creates a message for the exception.
 @param fieldName the field name
 @param value the value rejected
 @return the message
 */
+ (NSString *)createMessageWithNSString:(NSString *)fieldName
                           withNSString:(NSString *)value;

/**
 @brief Constructor.
 @param fieldType type of field being set
 @param value illegal value being set
 @param lowerBound lower legal field value, or null if not applicable
 @param upperBound upper legal field value, or null if not applicable
 */
- (instancetype)initWithOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)fieldType
                                        withNSNumber:(NSNumber *)value
                                        withNSNumber:(NSNumber *)lowerBound
                                        withNSNumber:(NSNumber *)upperBound;

/**
 @brief Constructor.
 @param fieldType type of field being set
 @param value illegal value being set
 @param explain an explanation
 @since 1.5
 */
- (instancetype)initWithOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)fieldType
                                        withNSNumber:(NSNumber *)value
                                        withNSString:(NSString *)explain;

/**
 @brief Constructor.
 @param fieldType type of field being set
 @param value illegal value being set
 @param lowerBound lower legal field value, or null if not applicable
 @param upperBound upper legal field value, or null if not applicable
 */
- (instancetype)initWithOrgJodaTimeDurationFieldType:(OrgJodaTimeDurationFieldType *)fieldType
                                        withNSNumber:(NSNumber *)value
                                        withNSNumber:(NSNumber *)lowerBound
                                        withNSNumber:(NSNumber *)upperBound;

/**
 @brief Constructor.
 @param fieldName name of field being set
 @param value illegal value being set
 @param lowerBound lower legal field value, or null if not applicable
 @param upperBound upper legal field value, or null if not applicable
 */
- (instancetype)initWithNSString:(NSString *)fieldName
                    withNSNumber:(NSNumber *)value
                    withNSNumber:(NSNumber *)lowerBound
                    withNSNumber:(NSNumber *)upperBound;

/**
 @brief Constructor.
 @param fieldType type of field being set
 @param value illegal value being set
 */
- (instancetype)initWithOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)fieldType
                                        withNSString:(NSString *)value;

/**
 @brief Constructor.
 @param fieldType type of field being set
 @param value illegal value being set
 */
- (instancetype)initWithOrgJodaTimeDurationFieldType:(OrgJodaTimeDurationFieldType *)fieldType
                                        withNSString:(NSString *)value;

/**
 @brief Constructor.
 @param fieldName name of field being set
 @param value illegal value being set
 */
- (instancetype)initWithNSString:(NSString *)fieldName
                    withNSString:(NSString *)value;

/**
 @brief Returns the DateTimeFieldType whose value was invalid, or null if not applicable.
 @return the datetime field type
 */
- (OrgJodaTimeDateTimeFieldType *)getDateTimeFieldType;

/**
 @brief Returns the DurationFieldType whose value was invalid, or null if not applicable.
 @return the duration field type
 */
- (OrgJodaTimeDurationFieldType *)getDurationFieldType;

/**
 @brief Returns the name of the field whose value was invalid.
 @return the field name
 */
- (NSString *)getFieldName;

/**
 @brief Returns the illegal integer value assigned to the field, or null if not applicable.
 @return the value
 */
- (NSNumber *)getIllegalNumberValue;

/**
 @brief Returns the illegal string value assigned to the field, or null if not applicable.
 @return the value
 */
- (NSString *)getIllegalStringValue;

/**
 @brief Returns the illegal value assigned to the field as a non-null string.
 @return the value
 */
- (NSString *)getIllegalValueAsString;

/**
 @brief Returns the lower bound of the legal value range, or null if not applicable.
 @return the lower bound
 */
- (NSNumber *)getLowerBound;

/**
 @brief Returns the upper bound of the legal value range, or null if not applicable.
 @return the upper bound
 */
- (NSNumber *)getUpperBound;

- (NSString *)getMessage;

/**
 @brief Provide additional detail by prepending a message to the existing message.
 A colon is separator is automatically inserted between the messages.
 @since 1.3
 */
- (void)prependMessageWithNSString:(NSString *)message;

- (void)dealloc;

- (void)copyAllFieldsTo:(OrgJodaTimeIllegalFieldValueException *)other;

@end

__attribute__((always_inline)) inline void OrgJodaTimeIllegalFieldValueException_init() {}

J2OBJC_FIELD_SETTER(OrgJodaTimeIllegalFieldValueException, iDateTimeFieldType_, OrgJodaTimeDateTimeFieldType *)
J2OBJC_FIELD_SETTER(OrgJodaTimeIllegalFieldValueException, iDurationFieldType_, OrgJodaTimeDurationFieldType *)
J2OBJC_FIELD_SETTER(OrgJodaTimeIllegalFieldValueException, iFieldName_, NSString *)
J2OBJC_FIELD_SETTER(OrgJodaTimeIllegalFieldValueException, iNumberValue_, NSNumber *)
J2OBJC_FIELD_SETTER(OrgJodaTimeIllegalFieldValueException, iStringValue_, NSString *)
J2OBJC_FIELD_SETTER(OrgJodaTimeIllegalFieldValueException, iLowerBound_, NSNumber *)
J2OBJC_FIELD_SETTER(OrgJodaTimeIllegalFieldValueException, iUpperBound_, NSNumber *)
J2OBJC_FIELD_SETTER(OrgJodaTimeIllegalFieldValueException, iMessage_, NSString *)

J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeIllegalFieldValueException, serialVersionUID, jlong)

#endif // _OrgJodaTimeIllegalFieldValueException_H_

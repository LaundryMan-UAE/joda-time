//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/andrewebling/Laundrapp/Joda-time-Project/joda-time/src/main/java/org/joda/time/DurationField.java
//

#include "DurationField.h"
#include "DurationFieldType.h"
#include "java/lang/ArithmeticException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"

@implementation OrgJodaTimeDurationField

- (OrgJodaTimeDurationFieldType *)getType {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NSString *)getName {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (BOOL)isSupported {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (BOOL)isPrecise {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (long long int)getUnitMillis {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (int)getValueWithLong:(long long int)duration {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (long long int)getValueAsLongWithLong:(long long int)duration {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (int)getValueWithLong:(long long int)duration
               withLong:(long long int)instant {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (long long int)getValueAsLongWithLong:(long long int)duration
                               withLong:(long long int)instant {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (long long int)getMillisWithInt:(int)value {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (long long int)getMillisWithLong:(long long int)value {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (long long int)getMillisWithInt:(int)value
                         withLong:(long long int)instant {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (long long int)getMillisWithLong:(long long int)value
                          withLong:(long long int)instant {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (long long int)addWithLong:(long long int)instant
                     withInt:(int)value {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (long long int)addWithLong:(long long int)instant
                    withLong:(long long int)value {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (long long int)subtractWithLong:(long long int)instant
                          withInt:(int)value {
  if (value == JavaLangInteger_MIN_VALUE) {
    return [self subtractWithLong:instant withLong:(long long int) value];
  }
  return [self addWithLong:instant withInt:-value];
}

- (long long int)subtractWithLong:(long long int)instant
                         withLong:(long long int)value {
  if (value == JavaLangLong_MIN_VALUE) {
    @throw [[JavaLangArithmeticException alloc] initWithNSString:@"Long.MIN_VALUE cannot be negated"];
  }
  return [self addWithLong:instant withLong:-value];
}

- (int)getDifferenceWithLong:(long long int)minuendInstant
                    withLong:(long long int)subtrahendInstant {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (long long int)getDifferenceAsLongWithLong:(long long int)minuendInstant
                                    withLong:(long long int)subtrahendInstant {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NSString *)description {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (int)compareToWithId:(OrgJodaTimeDurationField *)param0 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (instancetype)init {
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "getType", NULL, "Lorg.joda.time.DurationFieldType;", 0x401, NULL },
    { "getName", NULL, "Ljava.lang.String;", 0x401, NULL },
    { "isSupported", NULL, "Z", 0x401, NULL },
    { "isPrecise", NULL, "Z", 0x401, NULL },
    { "getUnitMillis", NULL, "J", 0x401, NULL },
    { "getValueWithLong:", "getValue", "I", 0x401, NULL },
    { "getValueAsLongWithLong:", "getValueAsLong", "J", 0x401, NULL },
    { "getValueWithLong:withLong:", "getValue", "I", 0x401, NULL },
    { "getValueAsLongWithLong:withLong:", "getValueAsLong", "J", 0x401, NULL },
    { "getMillisWithInt:", "getMillis", "J", 0x401, NULL },
    { "getMillisWithLong:", "getMillis", "J", 0x401, NULL },
    { "getMillisWithInt:withLong:", "getMillis", "J", 0x401, NULL },
    { "getMillisWithLong:withLong:", "getMillis", "J", 0x401, NULL },
    { "addWithLong:withInt:", "add", "J", 0x401, NULL },
    { "addWithLong:withLong:", "add", "J", 0x401, NULL },
    { "subtractWithLong:withInt:", "subtract", "J", 0x1, NULL },
    { "subtractWithLong:withLong:", "subtract", "J", 0x1, NULL },
    { "getDifferenceWithLong:withLong:", "getDifference", "I", 0x401, NULL },
    { "getDifferenceAsLongWithLong:withLong:", "getDifferenceAsLong", "J", 0x401, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x401, NULL },
    { "compareToWithOrgJodaTimeDurationField:", "compareTo", "I", 0x401, NULL },
    { "init", NULL, NULL, 0x1, NULL },
  };
  static J2ObjcClassInfo _OrgJodaTimeDurationField = { "DurationField", "org.joda.time", NULL, 0x401, 22, methods, 0, NULL, 0, NULL};
  return &_OrgJodaTimeDurationField;
}

@end

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Mike/Projects/joda-time/src/main/java/org/joda/time/DateTimeFieldType.java
//

#ifndef _OrgJodaTimeDateTimeFieldType_H_
#define _OrgJodaTimeDateTimeFieldType_H_

@class OrgJodaTimeChronology;
@class OrgJodaTimeDateTimeField;
@class OrgJodaTimeDurationFieldType;

#include "J2ObjC_header.h"
#include "java/io/Serializable.h"

#define OrgJodaTimeDateTimeFieldType_CENTURY_OF_ERA 3
#define OrgJodaTimeDateTimeFieldType_CLOCKHOUR_OF_DAY 16
#define OrgJodaTimeDateTimeFieldType_CLOCKHOUR_OF_HALFDAY 15
#define OrgJodaTimeDateTimeFieldType_DAY_OF_MONTH 8
#define OrgJodaTimeDateTimeFieldType_DAY_OF_WEEK 12
#define OrgJodaTimeDateTimeFieldType_DAY_OF_YEAR 6
#define OrgJodaTimeDateTimeFieldType_ERA 1
#define OrgJodaTimeDateTimeFieldType_HALFDAY_OF_DAY 13
#define OrgJodaTimeDateTimeFieldType_HOUR_OF_DAY 17
#define OrgJodaTimeDateTimeFieldType_HOUR_OF_HALFDAY 14
#define OrgJodaTimeDateTimeFieldType_MILLIS_OF_DAY 22
#define OrgJodaTimeDateTimeFieldType_MILLIS_OF_SECOND 23
#define OrgJodaTimeDateTimeFieldType_MINUTE_OF_DAY 18
#define OrgJodaTimeDateTimeFieldType_MINUTE_OF_HOUR 19
#define OrgJodaTimeDateTimeFieldType_MONTH_OF_YEAR 7
#define OrgJodaTimeDateTimeFieldType_SECOND_OF_DAY 20
#define OrgJodaTimeDateTimeFieldType_SECOND_OF_MINUTE 21
#define OrgJodaTimeDateTimeFieldType_WEEKYEAR 10
#define OrgJodaTimeDateTimeFieldType_WEEKYEAR_OF_CENTURY 9
#define OrgJodaTimeDateTimeFieldType_WEEK_OF_WEEKYEAR 11
#define OrgJodaTimeDateTimeFieldType_YEAR 5
#define OrgJodaTimeDateTimeFieldType_YEAR_OF_CENTURY 4
#define OrgJodaTimeDateTimeFieldType_YEAR_OF_ERA 2
#define OrgJodaTimeDateTimeFieldType_serialVersionUID -42615285973990LL

/**
 @brief Identifies a field, such as year or minuteOfHour, in a chronology-neutral way.
 <p> A field type defines the type of the field, such as hourOfDay. If does not directly enable any calculations, however it does provide a #getField(Chronology) method that returns the actual calculation engine for a particular chronology. It also provides access to the related DurationFieldType s. <p> Instances of <code>DateTimeFieldType</code> are singletons. They can be compared using <code>==</code>. <p> If required, you can create your own field, for example a quarterOfYear. You must create a subclass of <code>DateTimeFieldType</code> that defines the field type. This class returns the actual calculation engine from #getField(Chronology) . The subclass should implement equals and hashCode.
 @author Stephen Colebourne
 @author Brian S O'Neill
 @since 1.0
 */
@interface OrgJodaTimeDateTimeFieldType : NSObject < JavaIoSerializable > {
}

/**
 @brief Constructor.
 @param name the name to use
 */
- (instancetype)initWithNSString:(NSString *)name;

/**
 @brief Get the millis of second field type.
 @return the DateTimeFieldType constant
 */
+ (OrgJodaTimeDateTimeFieldType *)millisOfSecond;

/**
 @brief Get the millis of day field type.
 @return the DateTimeFieldType constant
 */
+ (OrgJodaTimeDateTimeFieldType *)millisOfDay;

/**
 @brief Get the second of minute field type.
 @return the DateTimeFieldType constant
 */
+ (OrgJodaTimeDateTimeFieldType *)secondOfMinute;

/**
 @brief Get the second of day field type.
 @return the DateTimeFieldType constant
 */
+ (OrgJodaTimeDateTimeFieldType *)secondOfDay;

/**
 @brief Get the minute of hour field type.
 @return the DateTimeFieldType constant
 */
+ (OrgJodaTimeDateTimeFieldType *)minuteOfHour;

/**
 @brief Get the minute of day field type.
 @return the DateTimeFieldType constant
 */
+ (OrgJodaTimeDateTimeFieldType *)minuteOfDay;

/**
 @brief Get the hour of day (0-23) field type.
 @return the DateTimeFieldType constant
 */
+ (OrgJodaTimeDateTimeFieldType *)hourOfDay;

/**
 @brief Get the hour of day (offset to 1-24) field type.
 @return the DateTimeFieldType constant
 */
+ (OrgJodaTimeDateTimeFieldType *)clockhourOfDay;

/**
 @brief Get the hour of am/pm (0-11) field type.
 @return the DateTimeFieldType constant
 */
+ (OrgJodaTimeDateTimeFieldType *)hourOfHalfday;

/**
 @brief Get the hour of am/pm (offset to 1-12) field type.
 @return the DateTimeFieldType constant
 */
+ (OrgJodaTimeDateTimeFieldType *)clockhourOfHalfday;

/**
 @brief Get the AM(0) PM(1) field type.
 @return the DateTimeFieldType constant
 */
+ (OrgJodaTimeDateTimeFieldType *)halfdayOfDay;

/**
 @brief Get the day of week field type.
 @return the DateTimeFieldType constant
 */
+ (OrgJodaTimeDateTimeFieldType *)dayOfWeek;

/**
 @brief Get the day of month field type.
 @return the DateTimeFieldType constant
 */
+ (OrgJodaTimeDateTimeFieldType *)dayOfMonth;

/**
 @brief Get the day of year field type.
 @return the DateTimeFieldType constant
 */
+ (OrgJodaTimeDateTimeFieldType *)dayOfYear;

/**
 @brief Get the week of a week based year field type.
 @return the DateTimeFieldType constant
 */
+ (OrgJodaTimeDateTimeFieldType *)weekOfWeekyear;

/**
 @brief Get the year of a week based year field type.
 @return the DateTimeFieldType constant
 */
+ (OrgJodaTimeDateTimeFieldType *)weekyear;

/**
 @brief Get the year of a week based year within a century field type.
 @return the DateTimeFieldType constant
 */
+ (OrgJodaTimeDateTimeFieldType *)weekyearOfCentury;

/**
 @brief Get the month of year field type.
 @return the DateTimeFieldType constant
 */
+ (OrgJodaTimeDateTimeFieldType *)monthOfYear;

/**
 @brief Get the year field type.
 @return the DateTimeFieldType constant
 */
+ (OrgJodaTimeDateTimeFieldType *)year;

/**
 @brief Get the year of era field type.
 @return the DateTimeFieldType constant
 */
+ (OrgJodaTimeDateTimeFieldType *)yearOfEra;

/**
 @brief Get the year of century field type.
 @return the DateTimeFieldType constant
 */
+ (OrgJodaTimeDateTimeFieldType *)yearOfCentury;

/**
 @brief Get the century of era field type.
 @return the DateTimeFieldType constant
 */
+ (OrgJodaTimeDateTimeFieldType *)centuryOfEra;

/**
 @brief Get the era field type.
 @return the DateTimeFieldType constant
 */
+ (OrgJodaTimeDateTimeFieldType *)era;

/**
 @brief Get the name of the field.
 <p> By convention, names follow a pattern of "dddOfRrr", where "ddd" represents the (singular) duration unit field name and "Rrr" represents the (singular) duration range field name. If the range field is not applicable, then the name of the field is simply the (singular) duration field name.
 @return field name
 */
- (NSString *)getName;

/**
 @brief Get the duration unit of the field.
 @return duration unit of the field, never null
 */
- (OrgJodaTimeDurationFieldType *)getDurationType;

/**
 @brief Get the duration range of the field.
 @return duration range of the field, null if unbounded
 */
- (OrgJodaTimeDurationFieldType *)getRangeDurationType;

/**
 @brief Gets a suitable field for this type from the given Chronology.
 @param chronology the chronology to use, null means ISOChronology in default zone
 @return a suitable field
 */
- (OrgJodaTimeDateTimeField *)getFieldWithOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology;

/**
 @brief Checks whether this field supported in the given Chronology.
 @param chronology the chronology to use, null means ISOChronology in default zone
 @return true if supported
 */
- (jboolean)isSupportedWithOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology;

/**
 @brief Get a suitable debug string.
 @return debug string
 */
- (NSString *)description;

@end

FOUNDATION_EXPORT BOOL OrgJodaTimeDateTimeFieldType_initialized;
J2OBJC_STATIC_INIT(OrgJodaTimeDateTimeFieldType)

CF_EXTERN_C_BEGIN

FOUNDATION_EXPORT OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_millisOfSecond();

FOUNDATION_EXPORT OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_millisOfDay();

FOUNDATION_EXPORT OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_secondOfMinute();

FOUNDATION_EXPORT OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_secondOfDay();

FOUNDATION_EXPORT OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_minuteOfHour();

FOUNDATION_EXPORT OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_minuteOfDay();

FOUNDATION_EXPORT OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_hourOfDay();

FOUNDATION_EXPORT OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_clockhourOfDay();

FOUNDATION_EXPORT OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_hourOfHalfday();

FOUNDATION_EXPORT OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_clockhourOfHalfday();

FOUNDATION_EXPORT OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_halfdayOfDay();

FOUNDATION_EXPORT OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_dayOfWeek();

FOUNDATION_EXPORT OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_dayOfMonth();

FOUNDATION_EXPORT OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_dayOfYear();

FOUNDATION_EXPORT OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_weekOfWeekyear();

FOUNDATION_EXPORT OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_weekyear();

FOUNDATION_EXPORT OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_weekyearOfCentury();

FOUNDATION_EXPORT OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_monthOfYear();

FOUNDATION_EXPORT OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_year();

FOUNDATION_EXPORT OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_yearOfEra();

FOUNDATION_EXPORT OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_yearOfCentury();

FOUNDATION_EXPORT OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_centuryOfEra();

FOUNDATION_EXPORT OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_era();

J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDateTimeFieldType, serialVersionUID, jlong)

J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDateTimeFieldType, ERA, jbyte)

J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDateTimeFieldType, YEAR_OF_ERA, jbyte)

J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDateTimeFieldType, CENTURY_OF_ERA, jbyte)

J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDateTimeFieldType, YEAR_OF_CENTURY, jbyte)

J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDateTimeFieldType, YEAR, jbyte)

J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDateTimeFieldType, DAY_OF_YEAR, jbyte)

J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDateTimeFieldType, MONTH_OF_YEAR, jbyte)

J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDateTimeFieldType, DAY_OF_MONTH, jbyte)

J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDateTimeFieldType, WEEKYEAR_OF_CENTURY, jbyte)

J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDateTimeFieldType, WEEKYEAR, jbyte)

J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDateTimeFieldType, WEEK_OF_WEEKYEAR, jbyte)

J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDateTimeFieldType, DAY_OF_WEEK, jbyte)

J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDateTimeFieldType, HALFDAY_OF_DAY, jbyte)

J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDateTimeFieldType, HOUR_OF_HALFDAY, jbyte)

J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDateTimeFieldType, CLOCKHOUR_OF_HALFDAY, jbyte)

J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDateTimeFieldType, CLOCKHOUR_OF_DAY, jbyte)

J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDateTimeFieldType, HOUR_OF_DAY, jbyte)

J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDateTimeFieldType, MINUTE_OF_DAY, jbyte)

J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDateTimeFieldType, MINUTE_OF_HOUR, jbyte)

J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDateTimeFieldType, SECOND_OF_DAY, jbyte)

J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDateTimeFieldType, SECOND_OF_MINUTE, jbyte)

J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDateTimeFieldType, MILLIS_OF_DAY, jbyte)

J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDateTimeFieldType, MILLIS_OF_SECOND, jbyte)

FOUNDATION_EXPORT OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_ERA_TYPE_;
J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDateTimeFieldType, ERA_TYPE_, OrgJodaTimeDateTimeFieldType *)

FOUNDATION_EXPORT OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_YEAR_OF_ERA_TYPE_;
J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDateTimeFieldType, YEAR_OF_ERA_TYPE_, OrgJodaTimeDateTimeFieldType *)

FOUNDATION_EXPORT OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_CENTURY_OF_ERA_TYPE_;
J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDateTimeFieldType, CENTURY_OF_ERA_TYPE_, OrgJodaTimeDateTimeFieldType *)

FOUNDATION_EXPORT OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_YEAR_OF_CENTURY_TYPE_;
J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDateTimeFieldType, YEAR_OF_CENTURY_TYPE_, OrgJodaTimeDateTimeFieldType *)

FOUNDATION_EXPORT OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_YEAR_TYPE_;
J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDateTimeFieldType, YEAR_TYPE_, OrgJodaTimeDateTimeFieldType *)

FOUNDATION_EXPORT OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_DAY_OF_YEAR_TYPE_;
J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDateTimeFieldType, DAY_OF_YEAR_TYPE_, OrgJodaTimeDateTimeFieldType *)

FOUNDATION_EXPORT OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_MONTH_OF_YEAR_TYPE_;
J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDateTimeFieldType, MONTH_OF_YEAR_TYPE_, OrgJodaTimeDateTimeFieldType *)

FOUNDATION_EXPORT OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_DAY_OF_MONTH_TYPE_;
J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDateTimeFieldType, DAY_OF_MONTH_TYPE_, OrgJodaTimeDateTimeFieldType *)

FOUNDATION_EXPORT OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_WEEKYEAR_OF_CENTURY_TYPE_;
J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDateTimeFieldType, WEEKYEAR_OF_CENTURY_TYPE_, OrgJodaTimeDateTimeFieldType *)

FOUNDATION_EXPORT OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_WEEKYEAR_TYPE_;
J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDateTimeFieldType, WEEKYEAR_TYPE_, OrgJodaTimeDateTimeFieldType *)

FOUNDATION_EXPORT OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_WEEK_OF_WEEKYEAR_TYPE_;
J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDateTimeFieldType, WEEK_OF_WEEKYEAR_TYPE_, OrgJodaTimeDateTimeFieldType *)

FOUNDATION_EXPORT OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_DAY_OF_WEEK_TYPE_;
J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDateTimeFieldType, DAY_OF_WEEK_TYPE_, OrgJodaTimeDateTimeFieldType *)

FOUNDATION_EXPORT OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_HALFDAY_OF_DAY_TYPE_;
J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDateTimeFieldType, HALFDAY_OF_DAY_TYPE_, OrgJodaTimeDateTimeFieldType *)

FOUNDATION_EXPORT OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_HOUR_OF_HALFDAY_TYPE_;
J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDateTimeFieldType, HOUR_OF_HALFDAY_TYPE_, OrgJodaTimeDateTimeFieldType *)

FOUNDATION_EXPORT OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_CLOCKHOUR_OF_HALFDAY_TYPE_;
J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDateTimeFieldType, CLOCKHOUR_OF_HALFDAY_TYPE_, OrgJodaTimeDateTimeFieldType *)

FOUNDATION_EXPORT OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_CLOCKHOUR_OF_DAY_TYPE_;
J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDateTimeFieldType, CLOCKHOUR_OF_DAY_TYPE_, OrgJodaTimeDateTimeFieldType *)

FOUNDATION_EXPORT OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_HOUR_OF_DAY_TYPE_;
J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDateTimeFieldType, HOUR_OF_DAY_TYPE_, OrgJodaTimeDateTimeFieldType *)

FOUNDATION_EXPORT OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_MINUTE_OF_DAY_TYPE_;
J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDateTimeFieldType, MINUTE_OF_DAY_TYPE_, OrgJodaTimeDateTimeFieldType *)

FOUNDATION_EXPORT OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_MINUTE_OF_HOUR_TYPE_;
J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDateTimeFieldType, MINUTE_OF_HOUR_TYPE_, OrgJodaTimeDateTimeFieldType *)

FOUNDATION_EXPORT OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_SECOND_OF_DAY_TYPE_;
J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDateTimeFieldType, SECOND_OF_DAY_TYPE_, OrgJodaTimeDateTimeFieldType *)

FOUNDATION_EXPORT OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_SECOND_OF_MINUTE_TYPE_;
J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDateTimeFieldType, SECOND_OF_MINUTE_TYPE_, OrgJodaTimeDateTimeFieldType *)

FOUNDATION_EXPORT OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_MILLIS_OF_DAY_TYPE_;
J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDateTimeFieldType, MILLIS_OF_DAY_TYPE_, OrgJodaTimeDateTimeFieldType *)

FOUNDATION_EXPORT OrgJodaTimeDateTimeFieldType *OrgJodaTimeDateTimeFieldType_MILLIS_OF_SECOND_TYPE_;
J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDateTimeFieldType, MILLIS_OF_SECOND_TYPE_, OrgJodaTimeDateTimeFieldType *)
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeDateTimeFieldType)

#define OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType_serialVersionUID -9937958251642LL

@interface OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType : OrgJodaTimeDateTimeFieldType {
}

/**
 @brief Constructor.
 @param name the name to use
 @param ordinal the byte value for the oridinal index
 @param unitType the unit duration type
 @param rangeType the range duration type
 */
- (instancetype)initWithNSString:(NSString *)name
                        withByte:(jbyte)ordinal
withOrgJodaTimeDurationFieldType:(OrgJodaTimeDurationFieldType *)unitType
withOrgJodaTimeDurationFieldType:(OrgJodaTimeDurationFieldType *)rangeType;

/**
 */
- (OrgJodaTimeDurationFieldType *)getDurationType;

/**
 */
- (OrgJodaTimeDurationFieldType *)getRangeDurationType;

/**
 */
- (jboolean)isEqual:(id)obj;

/**
 */
- (NSUInteger)hash;

/**
 */
- (OrgJodaTimeDateTimeField *)getFieldWithOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType)

CF_EXTERN_C_BEGIN

J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType, serialVersionUID, jlong)
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeDateTimeFieldType_StandardDateTimeFieldType)

#endif // _OrgJodaTimeDateTimeFieldType_H_

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/HambroPerks/hambroperks_org/joda-time/src/main/java/org/joda/time/convert/LongConverter.java
//

#ifndef _OrgJodaTimeConvertLongConverter_H_
#define _OrgJodaTimeConvertLongConverter_H_

#include "J2ObjC_header.h"
#include "org/joda/time/convert/AbstractConverter.h"
#include "org/joda/time/convert/DurationConverter.h"
#include "org/joda/time/convert/InstantConverter.h"
#include "org/joda/time/convert/PartialConverter.h"

@class IOSClass;
@class OrgJodaTimeChronology;

/*!
 @brief LongConverter converts a Long to an instant, partial or duration.
 The Long value represents milliseconds in the ISO chronology.
 @author Stephen Colebourne
 @author Brian S O'Neill
 @since 1.0
 */
@interface OrgJodaTimeConvertLongConverter : OrgJodaTimeConvertAbstractConverter < OrgJodaTimeConvertInstantConverter, OrgJodaTimeConvertPartialConverter, OrgJodaTimeConvertDurationConverter >

#pragma mark Public

/*!
 @brief Gets the millisecond duration, which is the Long value.
 @param object  the Long to convert, must not be null
 @return the millisecond duration
 @throws NullPointerException if the object is null
 @throws ClassCastException if the object is an invalid type
 */
- (jlong)getDurationMillisWithId:(id)object;

/*!
 @brief Gets the millisecond instant, which is the Long value.
 @param object  the Long to convert, must not be null
 @param chrono  the chronology to use, which is always non-null
 @return the millisecond value
 @throws NullPointerException if the object is null
 @throws ClassCastException if the object is an invalid type
 */
- (jlong)getInstantMillisWithId:(id)object
      withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono;

/*!
 @brief Returns Long.class.
 @return Long.class
 */
- (IOSClass *)getSupportedType;

#pragma mark Protected

/*!
 @brief Restricted constructor.
 */
- (instancetype)init;

@end

J2OBJC_STATIC_INIT(OrgJodaTimeConvertLongConverter)

FOUNDATION_EXPORT OrgJodaTimeConvertLongConverter *OrgJodaTimeConvertLongConverter_INSTANCE_;
J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeConvertLongConverter, INSTANCE_, OrgJodaTimeConvertLongConverter *)

FOUNDATION_EXPORT void OrgJodaTimeConvertLongConverter_init(OrgJodaTimeConvertLongConverter *self);

FOUNDATION_EXPORT OrgJodaTimeConvertLongConverter *new_OrgJodaTimeConvertLongConverter_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeConvertLongConverter)

#endif // _OrgJodaTimeConvertLongConverter_H_

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Mike/Projects/joda-time/src/main/java/org/joda/time/convert/PartialConverter.java
//

#ifndef _OrgJodaTimeConvertPartialConverter_H_
#define _OrgJodaTimeConvertPartialConverter_H_

@class IOSIntArray;
@class OrgJodaTimeChronology;
@class OrgJodaTimeDateTimeZone;
@class OrgJodaTimeFormatDateTimeFormatter;
@protocol OrgJodaTimeReadablePartial;

#include "J2ObjC_header.h"
#include "org/joda/time/convert/Converter.h"

/**
 @brief PartialConverter defines how an object is converted to a ReadablePartial.
 <p> The two methods in this interface must be called in order, as the <code>getPartialValues</code> method relies on the result of the <code>getChronology</code> method being passed in.
 @author Stephen Colebourne
 @since 1.0
 */
@protocol OrgJodaTimeConvertPartialConverter < OrgJodaTimeConvertConverter, NSObject, JavaObject >
/**
 @brief Extracts the chronology from an object of this converter's type where the time zone is specified.
 @param object the object to convert
 @param zone the specified zone to use, null means default zone
 @return the chronology, never null
 @throws ClassCastException if the object is invalid
 @since 1.3
 */
- (OrgJodaTimeChronology *)getChronologyWithId:(id)object
                   withOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)zone;

/**
 @brief Extracts the chronology from an object of this converter's type where the chronology is specified.
 @param object the object to convert
 @param chrono the chronology to use, null usually means ISO
 @return the chronology, not converted to UTC/local time zone, must be non-null valid
 @throws ClassCastException if the object is invalid
 */
- (OrgJodaTimeChronology *)getChronologyWithId:(id)object
                     withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono;

/**
 @brief Extracts the values of the partial from an object of this converter's type.
 The chrono parameter is a hint to the converter, should it require a chronology to aid in conversion.
 @param fieldSource a partial that provides access to the fields. This partial may be incomplete and only getFieldType(int) should be used
 @param object the object to convert
 @param chrono the chronology to use, which is the non-null result of getChronology()
 @return the array of field values that match the fieldSource, must be non-null valid
 @throws ClassCastException if the object is invalid
 */
- (IOSIntArray *)getPartialValuesWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)fieldSource
                                                         withId:(id)object
                                      withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono;

/**
 @brief Extracts the values of the partial from an object of this converter's type.
 The chrono parameter is a hint to the converter, should it require a chronology to aid in conversion.
 @param fieldSource a partial that provides access to the fields. This partial may be incomplete and only getFieldType(int) should be used
 @param object the object to convert
 @param chrono the chronology to use, which is the non-null result of getChronology()
 @param parser if converting from a String, the given parser is preferred
 @return the array of field values that match the fieldSource, must be non-null valid
 @throws ClassCastException if the object is invalid
 @since 1.3
 */
- (IOSIntArray *)getPartialValuesWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)fieldSource
                                                         withId:(id)object
                                      withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono
                         withOrgJodaTimeFormatDateTimeFormatter:(OrgJodaTimeFormatDateTimeFormatter *)parser;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeConvertPartialConverter)

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeConvertPartialConverter)

#endif // _OrgJodaTimeConvertPartialConverter_H_

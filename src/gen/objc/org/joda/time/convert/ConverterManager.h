//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/temp/joda-time/src/main/java/org/joda/time/convert/ConverterManager.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgJodaTimeConvertConverterManager")
#ifdef RESTRICT_OrgJodaTimeConvertConverterManager
#define INCLUDE_ALL_OrgJodaTimeConvertConverterManager 0
#else
#define INCLUDE_ALL_OrgJodaTimeConvertConverterManager 1
#endif
#undef RESTRICT_OrgJodaTimeConvertConverterManager

#if !defined (OrgJodaTimeConvertConverterManager_) && (INCLUDE_ALL_OrgJodaTimeConvertConverterManager || defined(INCLUDE_OrgJodaTimeConvertConverterManager))
#define OrgJodaTimeConvertConverterManager_

@class IOSObjectArray;
@protocol OrgJodaTimeConvertDurationConverter;
@protocol OrgJodaTimeConvertInstantConverter;
@protocol OrgJodaTimeConvertIntervalConverter;
@protocol OrgJodaTimeConvertPartialConverter;
@protocol OrgJodaTimeConvertPeriodConverter;

/*!
 @brief ConverterManager controls the date and time converters.
 <p>
  This class enables additional conversion classes to be added via 
 <code>addInstantConverter(InstantConverter)</code>, which may replace an
  existing converter. Similar methods exist for duration, time period and
  interval converters. 
 <p>
  This class is threadsafe, so adding/removing converters can be done at any
  time. Updating the set of convertors is relatively expensive, and so should
  not be performed often. 
 <p>
  The default instant converters are: 
 <ul>
  <li>ReadableInstant
  <li>String
  <li>Calendar
  <li>Date (includes sql package subclasses) 
 <li>Long (milliseconds) 
 <li>null (now) 
 </ul>
  
  The default partial converters are: 
 <ul>
  <li>ReadablePartial
  <li>ReadableInstant
  <li>String
  <li>Calendar
  <li>Date (includes sql package subclasses) 
 <li>Long (milliseconds) 
 <li>null (now) 
 </ul>
  
  The default duration converters are: 
 <ul>
  <li>ReadableDuration
  <li>ReadableInterval
  <li>String
  <li>Long (milliseconds) 
 <li>null (zero ms) 
 </ul>
  The default time period converters are: 
 <ul>
  <li>ReadablePeriod
  <li>ReadableInterval
  <li>String
  <li>null (zero) 
 </ul>
  
  The default interval converters are: 
 <ul>
  <li>ReadableInterval
  <li>String
  <li>null (zero-length from now to now) 
 </ul>
 @author Stephen Colebourne
 @author Brian S O'Neill
 @since 1.0
 */
@interface OrgJodaTimeConvertConverterManager : NSObject

#pragma mark Public

/*!
 @brief Adds a converter to the set of converters.If a matching converter is
  already in the set, the given converter replaces it.
 If the converter is
  exactly the same as one already in the set, no changes are made. 
 <p>
  The order in which converters are added is not relevent. The best
  converter is selected by examining the object hierarchy.
 @param converter the converter to add, null ignored
 @return replaced converter, or null
 */
- (id<OrgJodaTimeConvertDurationConverter>)addDurationConverterWithOrgJodaTimeConvertDurationConverter:(id<OrgJodaTimeConvertDurationConverter>)converter;

/*!
 @brief Adds a converter to the set of converters.If a matching converter is
  already in the set, the given converter replaces it.
 If the converter is
  exactly the same as one already in the set, no changes are made. 
 <p>
  The order in which converters are added is not relevent. The best
  converter is selected by examining the object hierarchy.
 @param converter the converter to add, null ignored
 @return replaced converter, or null
 */
- (id<OrgJodaTimeConvertInstantConverter>)addInstantConverterWithOrgJodaTimeConvertInstantConverter:(id<OrgJodaTimeConvertInstantConverter>)converter;

/*!
 @brief Adds a converter to the set of converters.If a matching converter is
  already in the set, the given converter replaces it.
 If the converter is
  exactly the same as one already in the set, no changes are made. 
 <p>
  The order in which converters are added is not relevent. The best
  converter is selected by examining the object hierarchy.
 @param converter the converter to add, null ignored
 @return replaced converter, or null
 */
- (id<OrgJodaTimeConvertIntervalConverter>)addIntervalConverterWithOrgJodaTimeConvertIntervalConverter:(id<OrgJodaTimeConvertIntervalConverter>)converter;

/*!
 @brief Adds a converter to the set of converters.If a matching converter is
  already in the set, the given converter replaces it.
 If the converter is
  exactly the same as one already in the set, no changes are made. 
 <p>
  The order in which converters are added is not relevent. The best
  converter is selected by examining the object hierarchy.
 @param converter the converter to add, null ignored
 @return replaced converter, or null
 */
- (id<OrgJodaTimeConvertPartialConverter>)addPartialConverterWithOrgJodaTimeConvertPartialConverter:(id<OrgJodaTimeConvertPartialConverter>)converter;

/*!
 @brief Adds a converter to the set of converters.If a matching converter is
  already in the set, the given converter replaces it.
 If the converter is
  exactly the same as one already in the set, no changes are made. 
 <p>
  The order in which converters are added is not relevent. The best
  converter is selected by examining the object hierarchy.
 @param converter the converter to add, null ignored
 @return replaced converter, or null
 */
- (id<OrgJodaTimeConvertPeriodConverter>)addPeriodConverterWithOrgJodaTimeConvertPeriodConverter:(id<OrgJodaTimeConvertPeriodConverter>)converter;

/*!
 @brief Gets the best converter for the object specified.
 @param object the object to convert
 @return the converter to use
 @throw IllegalArgumentExceptionif no suitable converter
 @throw IllegalStateExceptionif multiple converters match the type
  equally well
 */
- (id<OrgJodaTimeConvertDurationConverter>)getDurationConverterWithId:(id)object;

/*!
 @brief Gets a copy of the list of converters.
 @return the converters, a copy of the real data, never null
 */
- (IOSObjectArray *)getDurationConverters;

+ (OrgJodaTimeConvertConverterManager *)getInstance;

/*!
 @brief Gets the best converter for the object specified.
 @param object the object to convert
 @return the converter to use
 @throw IllegalArgumentExceptionif no suitable converter
 @throw IllegalStateExceptionif multiple converters match the type
  equally well
 */
- (id<OrgJodaTimeConvertInstantConverter>)getInstantConverterWithId:(id)object;

/*!
 @brief Gets a copy of the set of converters.
 @return the converters, a copy of the real data, never null
 */
- (IOSObjectArray *)getInstantConverters;

/*!
 @brief Gets the best converter for the object specified.
 @param object the object to convert
 @return the converter to use
 @throw IllegalArgumentExceptionif no suitable converter
 @throw IllegalStateExceptionif multiple converters match the type
  equally well
 */
- (id<OrgJodaTimeConvertIntervalConverter>)getIntervalConverterWithId:(id)object;

/*!
 @brief Gets a copy of the list of converters.
 @return the converters, a copy of the real data, never null
 */
- (IOSObjectArray *)getIntervalConverters;

/*!
 @brief Gets the best converter for the object specified.
 @param object the object to convert
 @return the converter to use
 @throw IllegalArgumentExceptionif no suitable converter
 @throw IllegalStateExceptionif multiple converters match the type
  equally well
 */
- (id<OrgJodaTimeConvertPartialConverter>)getPartialConverterWithId:(id)object;

/*!
 @brief Gets a copy of the set of converters.
 @return the converters, a copy of the real data, never null
 */
- (IOSObjectArray *)getPartialConverters;

/*!
 @brief Gets the best converter for the object specified.
 @param object the object to convert
 @return the converter to use
 @throw IllegalArgumentExceptionif no suitable converter
 @throw IllegalStateExceptionif multiple converters match the type
  equally well
 */
- (id<OrgJodaTimeConvertPeriodConverter>)getPeriodConverterWithId:(id)object;

/*!
 @brief Gets a copy of the list of converters.
 @return the converters, a copy of the real data, never null
 */
- (IOSObjectArray *)getPeriodConverters;

/*!
 @brief Removes a converter from the set of converters.If the converter was
  not in the set, no changes are made.
 @param converter the converter to remove, null ignored
 @return replaced converter, or null
 */
- (id<OrgJodaTimeConvertDurationConverter>)removeDurationConverterWithOrgJodaTimeConvertDurationConverter:(id<OrgJodaTimeConvertDurationConverter>)converter;

/*!
 @brief Removes a converter from the set of converters.If the converter was
  not in the set, no changes are made.
 @param converter the converter to remove, null ignored
 @return replaced converter, or null
 */
- (id<OrgJodaTimeConvertInstantConverter>)removeInstantConverterWithOrgJodaTimeConvertInstantConverter:(id<OrgJodaTimeConvertInstantConverter>)converter;

/*!
 @brief Removes a converter from the set of converters.If the converter was
  not in the set, no changes are made.
 @param converter the converter to remove, null ignored
 @return replaced converter, or null
 */
- (id<OrgJodaTimeConvertIntervalConverter>)removeIntervalConverterWithOrgJodaTimeConvertIntervalConverter:(id<OrgJodaTimeConvertIntervalConverter>)converter;

/*!
 @brief Removes a converter from the set of converters.If the converter was
  not in the set, no changes are made.
 @param converter the converter to remove, null ignored
 @return replaced converter, or null
 */
- (id<OrgJodaTimeConvertPartialConverter>)removePartialConverterWithOrgJodaTimeConvertPartialConverter:(id<OrgJodaTimeConvertPartialConverter>)converter;

/*!
 @brief Removes a converter from the set of converters.If the converter was
  not in the set, no changes are made.
 @param converter the converter to remove, null ignored
 @return replaced converter, or null
 */
- (id<OrgJodaTimeConvertPeriodConverter>)removePeriodConverterWithOrgJodaTimeConvertPeriodConverter:(id<OrgJodaTimeConvertPeriodConverter>)converter;

/*!
 @brief Gets a debug representation of the object.
 */
- (NSString *)description;

#pragma mark Protected

/*!
 @brief Restricted constructor.
 */
- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeConvertConverterManager)

FOUNDATION_EXPORT OrgJodaTimeConvertConverterManager *OrgJodaTimeConvertConverterManager_getInstance(void);

FOUNDATION_EXPORT void OrgJodaTimeConvertConverterManager_init(OrgJodaTimeConvertConverterManager *self);

FOUNDATION_EXPORT OrgJodaTimeConvertConverterManager *new_OrgJodaTimeConvertConverterManager_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeConvertConverterManager *create_OrgJodaTimeConvertConverterManager_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeConvertConverterManager)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgJodaTimeConvertConverterManager")

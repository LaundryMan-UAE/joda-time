//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/andrefonseca/Documents/PodsFolders/Joda-Time/src/main/java/org/joda/time/convert/PeriodConverter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgJodaTimeConvertPeriodConverter")
#ifdef RESTRICT_OrgJodaTimeConvertPeriodConverter
#define INCLUDE_ALL_OrgJodaTimeConvertPeriodConverter 0
#else
#define INCLUDE_ALL_OrgJodaTimeConvertPeriodConverter 1
#endif
#undef RESTRICT_OrgJodaTimeConvertPeriodConverter

#if !defined (OrgJodaTimeConvertPeriodConverter_) && (INCLUDE_ALL_OrgJodaTimeConvertPeriodConverter || defined(INCLUDE_OrgJodaTimeConvertPeriodConverter))
#define OrgJodaTimeConvertPeriodConverter_

#define RESTRICT_OrgJodaTimeConvertConverter 1
#define INCLUDE_OrgJodaTimeConvertConverter 1
#include "org/joda/time/convert/Converter.h"

@class OrgJodaTimeChronology;
@class OrgJodaTimePeriodType;
@protocol OrgJodaTimeReadWritablePeriod;

/*!
 @brief PeriodConverter defines how an object is converted to a time period.
 @author Stephen Colebourne
 @author Brian S O'Neill
 @since 1.0
 */
@protocol OrgJodaTimeConvertPeriodConverter < OrgJodaTimeConvertConverter, JavaObject >

/*!
 @brief Extracts duration values from an object of this converter's type, and
 sets them into the given ReadWritableDuration.
 @param period  the period to modify
 @param object  the object to convert, must not be null
 @param chrono  the chronology to use, must not be null
 @throws ClassCastException if the object is invalid
 */
- (void)setIntoWithOrgJodaTimeReadWritablePeriod:(id<OrgJodaTimeReadWritablePeriod>)period
                                          withId:(id)object
                       withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono;

/*!
 @brief Selects a suitable period type for the given object.
 @param object  the object to examine, must not be null
 @return the period type, never null
 @throws ClassCastException if the object is invalid
 */
- (OrgJodaTimePeriodType *)getPeriodTypeWithId:(id)object;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeConvertPeriodConverter)

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeConvertPeriodConverter)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgJodaTimeConvertPeriodConverter")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/Laundryman/Libraries/joda-time/src/main/java/org/joda/time/convert/DateConverter.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/util/Date.h"
#include "org/joda/time/Chronology.h"
#include "org/joda/time/convert/AbstractConverter.h"
#include "org/joda/time/convert/DateConverter.h"

J2OBJC_INITIALIZED_DEFN(OrgJodaTimeConvertDateConverter)

OrgJodaTimeConvertDateConverter *OrgJodaTimeConvertDateConverter_INSTANCE;

@implementation OrgJodaTimeConvertDateConverter

- (instancetype)initPackagePrivate {
  OrgJodaTimeConvertDateConverter_initPackagePrivate(self);
  return self;
}

- (jlong)getInstantMillisWithId:(id)object
      withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono {
  JavaUtilDate *date = (JavaUtilDate *) cast_chk(object, [JavaUtilDate class]);
  return [((JavaUtilDate *) nil_chk(date)) getTime];
}

- (IOSClass *)getSupportedType {
  return JavaUtilDate_class_();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivate);
  methods[1].selector = @selector(getInstantMillisWithId:withOrgJodaTimeChronology:);
  methods[2].selector = @selector(getSupportedType);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "LOrgJodaTimeConvertDateConverter;", .constantValue.asLong = 0, 0x18, -1, 3, -1, -1 },
  };
  static const void *ptrTable[] = { "getInstantMillis", "LNSObject;LOrgJodaTimeChronology;", "()Ljava/lang/Class<*>;", &OrgJodaTimeConvertDateConverter_INSTANCE };
  static const J2ObjcClassInfo _OrgJodaTimeConvertDateConverter = { "DateConverter", "org.joda.time.convert", ptrTable, methods, fields, 7, 0x10, 3, 1, -1, -1, -1, -1, -1 };
  return &_OrgJodaTimeConvertDateConverter;
}

+ (void)initialize {
  if (self == [OrgJodaTimeConvertDateConverter class]) {
    JreStrongAssignAndConsume(&OrgJodaTimeConvertDateConverter_INSTANCE, new_OrgJodaTimeConvertDateConverter_initPackagePrivate());
    J2OBJC_SET_INITIALIZED(OrgJodaTimeConvertDateConverter)
  }
}

@end

void OrgJodaTimeConvertDateConverter_initPackagePrivate(OrgJodaTimeConvertDateConverter *self) {
  OrgJodaTimeConvertAbstractConverter_init(self);
}

OrgJodaTimeConvertDateConverter *new_OrgJodaTimeConvertDateConverter_initPackagePrivate() {
  J2OBJC_NEW_IMPL(OrgJodaTimeConvertDateConverter, initPackagePrivate)
}

OrgJodaTimeConvertDateConverter *create_OrgJodaTimeConvertDateConverter_initPackagePrivate() {
  J2OBJC_CREATE_IMPL(OrgJodaTimeConvertDateConverter, initPackagePrivate)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaTimeConvertDateConverter)

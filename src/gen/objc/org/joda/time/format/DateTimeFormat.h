//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/temp/joda-time/src/main/java/org/joda/time/format/DateTimeFormat.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgJodaTimeFormatDateTimeFormat")
#ifdef RESTRICT_OrgJodaTimeFormatDateTimeFormat
#define INCLUDE_ALL_OrgJodaTimeFormatDateTimeFormat 0
#else
#define INCLUDE_ALL_OrgJodaTimeFormatDateTimeFormat 1
#endif
#undef RESTRICT_OrgJodaTimeFormatDateTimeFormat

#if !defined (OrgJodaTimeFormatDateTimeFormat_) && (INCLUDE_ALL_OrgJodaTimeFormatDateTimeFormat || defined(INCLUDE_OrgJodaTimeFormatDateTimeFormat))
#define OrgJodaTimeFormatDateTimeFormat_

@class JavaUtilLocale;
@class OrgJodaTimeFormatDateTimeFormatter;
@class OrgJodaTimeFormatDateTimeFormatterBuilder;

@interface OrgJodaTimeFormatDateTimeFormat : NSObject

#pragma mark Public

+ (OrgJodaTimeFormatDateTimeFormatter *)forPatternWithNSString:(NSString *)pattern;

+ (OrgJodaTimeFormatDateTimeFormatter *)forStyleWithNSString:(NSString *)style;

+ (OrgJodaTimeFormatDateTimeFormatter *)fullDate;

+ (OrgJodaTimeFormatDateTimeFormatter *)fullDateTime;

+ (OrgJodaTimeFormatDateTimeFormatter *)fullTime;

+ (OrgJodaTimeFormatDateTimeFormatter *)longDate;

+ (OrgJodaTimeFormatDateTimeFormatter *)longDateTime;

+ (OrgJodaTimeFormatDateTimeFormatter *)longTime;

+ (OrgJodaTimeFormatDateTimeFormatter *)mediumDate;

+ (OrgJodaTimeFormatDateTimeFormatter *)mediumDateTime;

+ (OrgJodaTimeFormatDateTimeFormatter *)mediumTime;

+ (NSString *)patternForStyleWithNSString:(NSString *)style
                       withJavaUtilLocale:(JavaUtilLocale *)locale;

+ (OrgJodaTimeFormatDateTimeFormatter *)shortDate;

+ (OrgJodaTimeFormatDateTimeFormatter *)shortDateTime;

+ (OrgJodaTimeFormatDateTimeFormatter *)shortTime;

#pragma mark Protected

- (instancetype)init;

#pragma mark Package-Private

+ (void)appendPatternToWithOrgJodaTimeFormatDateTimeFormatterBuilder:(OrgJodaTimeFormatDateTimeFormatterBuilder *)builder
                                                        withNSString:(NSString *)pattern;

@end

J2OBJC_STATIC_INIT(OrgJodaTimeFormatDateTimeFormat)

inline jint OrgJodaTimeFormatDateTimeFormat_get_FULL(void);
#define OrgJodaTimeFormatDateTimeFormat_FULL 0
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeFormatDateTimeFormat, FULL, jint)

inline jint OrgJodaTimeFormatDateTimeFormat_get_LONG(void);
#define OrgJodaTimeFormatDateTimeFormat_LONG 1
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeFormatDateTimeFormat, LONG, jint)

inline jint OrgJodaTimeFormatDateTimeFormat_get_MEDIUM(void);
#define OrgJodaTimeFormatDateTimeFormat_MEDIUM 2
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeFormatDateTimeFormat, MEDIUM, jint)

inline jint OrgJodaTimeFormatDateTimeFormat_get_SHORT(void);
#define OrgJodaTimeFormatDateTimeFormat_SHORT 3
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeFormatDateTimeFormat, SHORT, jint)

inline jint OrgJodaTimeFormatDateTimeFormat_get_NONE(void);
#define OrgJodaTimeFormatDateTimeFormat_NONE 4
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeFormatDateTimeFormat, NONE, jint)

inline jint OrgJodaTimeFormatDateTimeFormat_get_DATE(void);
#define OrgJodaTimeFormatDateTimeFormat_DATE 0
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeFormatDateTimeFormat, DATE, jint)

inline jint OrgJodaTimeFormatDateTimeFormat_get_TIME(void);
#define OrgJodaTimeFormatDateTimeFormat_TIME 1
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeFormatDateTimeFormat, TIME, jint)

inline jint OrgJodaTimeFormatDateTimeFormat_get_DATETIME(void);
#define OrgJodaTimeFormatDateTimeFormat_DATETIME 2
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeFormatDateTimeFormat, DATETIME, jint)

FOUNDATION_EXPORT OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatDateTimeFormat_forPatternWithNSString_(NSString *pattern);

FOUNDATION_EXPORT OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatDateTimeFormat_forStyleWithNSString_(NSString *style);

FOUNDATION_EXPORT NSString *OrgJodaTimeFormatDateTimeFormat_patternForStyleWithNSString_withJavaUtilLocale_(NSString *style, JavaUtilLocale *locale);

FOUNDATION_EXPORT OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatDateTimeFormat_shortDate(void);

FOUNDATION_EXPORT OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatDateTimeFormat_shortTime(void);

FOUNDATION_EXPORT OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatDateTimeFormat_shortDateTime(void);

FOUNDATION_EXPORT OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatDateTimeFormat_mediumDate(void);

FOUNDATION_EXPORT OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatDateTimeFormat_mediumTime(void);

FOUNDATION_EXPORT OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatDateTimeFormat_mediumDateTime(void);

FOUNDATION_EXPORT OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatDateTimeFormat_longDate(void);

FOUNDATION_EXPORT OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatDateTimeFormat_longTime(void);

FOUNDATION_EXPORT OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatDateTimeFormat_longDateTime(void);

FOUNDATION_EXPORT OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatDateTimeFormat_fullDate(void);

FOUNDATION_EXPORT OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatDateTimeFormat_fullTime(void);

FOUNDATION_EXPORT OrgJodaTimeFormatDateTimeFormatter *OrgJodaTimeFormatDateTimeFormat_fullDateTime(void);

FOUNDATION_EXPORT void OrgJodaTimeFormatDateTimeFormat_appendPatternToWithOrgJodaTimeFormatDateTimeFormatterBuilder_withNSString_(OrgJodaTimeFormatDateTimeFormatterBuilder *builder, NSString *pattern);

FOUNDATION_EXPORT void OrgJodaTimeFormatDateTimeFormat_init(OrgJodaTimeFormatDateTimeFormat *self);

FOUNDATION_EXPORT OrgJodaTimeFormatDateTimeFormat *new_OrgJodaTimeFormatDateTimeFormat_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeFormatDateTimeFormat *create_OrgJodaTimeFormatDateTimeFormat_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeFormatDateTimeFormat)

#endif

#if !defined (OrgJodaTimeFormatDateTimeFormat_StyleFormatter_) && (INCLUDE_ALL_OrgJodaTimeFormatDateTimeFormat || defined(INCLUDE_OrgJodaTimeFormatDateTimeFormat_StyleFormatter))
#define OrgJodaTimeFormatDateTimeFormat_StyleFormatter_

#define RESTRICT_OrgJodaTimeFormatInternalPrinter 1
#define INCLUDE_OrgJodaTimeFormatInternalPrinter 1
#include "org/joda/time/format/InternalPrinter.h"

#define RESTRICT_OrgJodaTimeFormatInternalParser 1
#define INCLUDE_OrgJodaTimeFormatInternalParser 1
#include "org/joda/time/format/InternalParser.h"

@class JavaUtilLocale;
@class OrgJodaTimeChronology;
@class OrgJodaTimeDateTimeZone;
@class OrgJodaTimeFormatDateTimeParserBucket;
@protocol JavaLangAppendable;
@protocol JavaLangCharSequence;
@protocol OrgJodaTimeReadablePartial;

@interface OrgJodaTimeFormatDateTimeFormat_StyleFormatter : NSObject < OrgJodaTimeFormatInternalPrinter, OrgJodaTimeFormatInternalParser >

#pragma mark Public

- (jint)estimateParsedLength;

- (jint)estimatePrintedLength;

- (jint)parseIntoWithOrgJodaTimeFormatDateTimeParserBucket:(OrgJodaTimeFormatDateTimeParserBucket *)bucket
                                  withJavaLangCharSequence:(id<JavaLangCharSequence>)text
                                                   withInt:(jint)position;

- (void)printToWithJavaLangAppendable:(id<JavaLangAppendable>)appenadble
                             withLong:(jlong)instant
            withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono
                              withInt:(jint)displayOffset
          withOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)displayZone
                   withJavaUtilLocale:(JavaUtilLocale *)locale;

- (void)printToWithJavaLangAppendable:(id<JavaLangAppendable>)appendable
       withOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)partial
                   withJavaUtilLocale:(JavaUtilLocale *)locale;

#pragma mark Package-Private

- (instancetype)initWithInt:(jint)dateStyle
                    withInt:(jint)timeStyle
                    withInt:(jint)type;

- (NSString *)getPatternWithJavaUtilLocale:(JavaUtilLocale *)locale;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(OrgJodaTimeFormatDateTimeFormat_StyleFormatter)

FOUNDATION_EXPORT void OrgJodaTimeFormatDateTimeFormat_StyleFormatter_initWithInt_withInt_withInt_(OrgJodaTimeFormatDateTimeFormat_StyleFormatter *self, jint dateStyle, jint timeStyle, jint type);

FOUNDATION_EXPORT OrgJodaTimeFormatDateTimeFormat_StyleFormatter *new_OrgJodaTimeFormatDateTimeFormat_StyleFormatter_initWithInt_withInt_withInt_(jint dateStyle, jint timeStyle, jint type) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeFormatDateTimeFormat_StyleFormatter *create_OrgJodaTimeFormatDateTimeFormat_StyleFormatter_initWithInt_withInt_withInt_(jint dateStyle, jint timeStyle, jint type);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeFormatDateTimeFormat_StyleFormatter)

#endif

#if !defined (OrgJodaTimeFormatDateTimeFormat_StyleFormatterCacheKey_) && (INCLUDE_ALL_OrgJodaTimeFormatDateTimeFormat || defined(INCLUDE_OrgJodaTimeFormatDateTimeFormat_StyleFormatterCacheKey))
#define OrgJodaTimeFormatDateTimeFormat_StyleFormatterCacheKey_

@class JavaUtilLocale;

@interface OrgJodaTimeFormatDateTimeFormat_StyleFormatterCacheKey : NSObject

#pragma mark Public

- (instancetype)initWithInt:(jint)iType
                    withInt:(jint)iDateStyle
                    withInt:(jint)iTimeStyle
         withJavaUtilLocale:(JavaUtilLocale *)locale;

- (jboolean)isEqual:(id)obj;

- (NSUInteger)hash;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeFormatDateTimeFormat_StyleFormatterCacheKey)

FOUNDATION_EXPORT void OrgJodaTimeFormatDateTimeFormat_StyleFormatterCacheKey_initWithInt_withInt_withInt_withJavaUtilLocale_(OrgJodaTimeFormatDateTimeFormat_StyleFormatterCacheKey *self, jint iType, jint iDateStyle, jint iTimeStyle, JavaUtilLocale *locale);

FOUNDATION_EXPORT OrgJodaTimeFormatDateTimeFormat_StyleFormatterCacheKey *new_OrgJodaTimeFormatDateTimeFormat_StyleFormatterCacheKey_initWithInt_withInt_withInt_withJavaUtilLocale_(jint iType, jint iDateStyle, jint iTimeStyle, JavaUtilLocale *locale) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeFormatDateTimeFormat_StyleFormatterCacheKey *create_OrgJodaTimeFormatDateTimeFormat_StyleFormatterCacheKey_initWithInt_withInt_withInt_withJavaUtilLocale_(jint iType, jint iDateStyle, jint iTimeStyle, JavaUtilLocale *locale);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeFormatDateTimeFormat_StyleFormatterCacheKey)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgJodaTimeFormatDateTimeFormat")

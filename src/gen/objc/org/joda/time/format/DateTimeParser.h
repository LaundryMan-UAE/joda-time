//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/HambroPerks/hambroperks_org/joda-time/src/main/java/org/joda/time/format/DateTimeParser.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgJodaTimeFormatDateTimeParser")
#ifdef RESTRICT_OrgJodaTimeFormatDateTimeParser
#define INCLUDE_ALL_OrgJodaTimeFormatDateTimeParser 0
#else
#define INCLUDE_ALL_OrgJodaTimeFormatDateTimeParser 1
#endif
#undef RESTRICT_OrgJodaTimeFormatDateTimeParser

#if !defined (OrgJodaTimeFormatDateTimeParser_) && (INCLUDE_ALL_OrgJodaTimeFormatDateTimeParser || defined(INCLUDE_OrgJodaTimeFormatDateTimeParser))
#define OrgJodaTimeFormatDateTimeParser_

@class OrgJodaTimeFormatDateTimeParserBucket;

/*!
 @brief Internal interface for parsing textual representations of datetimes.
 <p>
  Application users will rarely use this class directly. Instead, you
  will use one of the factory classes to create a <code>DateTimeFormatter</code>.
  <p>
  The factory classes are:<br>
  - <code>DateTimeFormatterBuilder</code><br>
  - <code>DateTimeFormat</code><br>
  - <code>ISODateTimeFormat</code><br>
 @author Brian S O'Neill
 - seealso: DateTimeFormatter
 - seealso: DateTimeFormatterBuilder
 - seealso: DateTimeFormat
 @since 1.0
 */
@protocol OrgJodaTimeFormatDateTimeParser < JavaObject >

/*!
 @brief Returns the expected maximum number of characters consumed.
 The actual amount should rarely exceed this estimate.
 @return the estimated length
 */
- (jint)estimateParsedLength;

/*!
 @brief Parse an element from the given text, saving any fields into the given
  DateTimeParserBucket.If the parse succeeds, the return value is the new
  text position.
 Note that the parse may succeed without fully reading the
  text. 
 <p>
  If it fails, the return value is negative. To determine the position
  where the parse failed, apply the one's complement operator (~) on the
  return value.
 @param bucket field are saved into this, not null
 @param text the text to parse, not null
 @param position position to start parsing from
 @return new position, negative value means parse failed -
   apply complement operator (~) to get position of failure
 @throw IllegalArgumentExceptionif any field is out of range
 */
- (jint)parseIntoWithOrgJodaTimeFormatDateTimeParserBucket:(OrgJodaTimeFormatDateTimeParserBucket *)bucket
                                              withNSString:(NSString *)text
                                                   withInt:(jint)position;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeFormatDateTimeParser)

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeFormatDateTimeParser)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgJodaTimeFormatDateTimeParser")

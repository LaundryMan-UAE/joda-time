//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/andrefonseca/Documents/PodsFolders/Joda-Time/src/main/java/org/joda/time/DateTimeConstants.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgJodaTimeDateTimeConstants")
#ifdef RESTRICT_OrgJodaTimeDateTimeConstants
#define INCLUDE_ALL_OrgJodaTimeDateTimeConstants 0
#else
#define INCLUDE_ALL_OrgJodaTimeDateTimeConstants 1
#endif
#undef RESTRICT_OrgJodaTimeDateTimeConstants

#if !defined (OrgJodaTimeDateTimeConstants_) && (INCLUDE_ALL_OrgJodaTimeDateTimeConstants || defined(INCLUDE_OrgJodaTimeDateTimeConstants))
#define OrgJodaTimeDateTimeConstants_

/*!
 @brief DateTimeConstants is a non-instantiable class of constants used in
 the date time system.
 These are the ISO8601 constants, but should be
 used by all chronologies.
 <p>
 DateTimeConstants is thread-safe and immutable.
 @author Stephen Colebourne
 @author Brian S O'Neill
 @since 1.0
 */
@interface OrgJodaTimeDateTimeConstants : NSObject

#pragma mark Protected

/*!
 @brief Restrictive constructor
 */
- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeDateTimeConstants)

/*!
 @brief Constant (1) representing January, the first month (ISO)
 */
inline jint OrgJodaTimeDateTimeConstants_get_JANUARY();
#define OrgJodaTimeDateTimeConstants_JANUARY 1
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeDateTimeConstants, JANUARY, jint)

/*!
 @brief Constant (2) representing February, the second month (ISO)
 */
inline jint OrgJodaTimeDateTimeConstants_get_FEBRUARY();
#define OrgJodaTimeDateTimeConstants_FEBRUARY 2
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeDateTimeConstants, FEBRUARY, jint)

/*!
 @brief Constant (3) representing March, the third month (ISO)
 */
inline jint OrgJodaTimeDateTimeConstants_get_MARCH();
#define OrgJodaTimeDateTimeConstants_MARCH 3
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeDateTimeConstants, MARCH, jint)

/*!
 @brief Constant (4) representing April, the fourth month (ISO)
 */
inline jint OrgJodaTimeDateTimeConstants_get_APRIL();
#define OrgJodaTimeDateTimeConstants_APRIL 4
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeDateTimeConstants, APRIL, jint)

/*!
 @brief Constant (5) representing May, the fifth month (ISO)
 */
inline jint OrgJodaTimeDateTimeConstants_get_MAY();
#define OrgJodaTimeDateTimeConstants_MAY 5
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeDateTimeConstants, MAY, jint)

/*!
 @brief Constant (6) representing June, the sixth month (ISO)
 */
inline jint OrgJodaTimeDateTimeConstants_get_JUNE();
#define OrgJodaTimeDateTimeConstants_JUNE 6
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeDateTimeConstants, JUNE, jint)

/*!
 @brief Constant (7) representing July, the seventh month (ISO)
 */
inline jint OrgJodaTimeDateTimeConstants_get_JULY();
#define OrgJodaTimeDateTimeConstants_JULY 7
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeDateTimeConstants, JULY, jint)

/*!
 @brief Constant (8) representing August, the eighth month (ISO)
 */
inline jint OrgJodaTimeDateTimeConstants_get_AUGUST();
#define OrgJodaTimeDateTimeConstants_AUGUST 8
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeDateTimeConstants, AUGUST, jint)

/*!
 @brief Constant (9) representing September, the nineth month (ISO)
 */
inline jint OrgJodaTimeDateTimeConstants_get_SEPTEMBER();
#define OrgJodaTimeDateTimeConstants_SEPTEMBER 9
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeDateTimeConstants, SEPTEMBER, jint)

/*!
 @brief Constant (10) representing October, the tenth month (ISO)
 */
inline jint OrgJodaTimeDateTimeConstants_get_OCTOBER();
#define OrgJodaTimeDateTimeConstants_OCTOBER 10
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeDateTimeConstants, OCTOBER, jint)

/*!
 @brief Constant (11) representing November, the eleventh month (ISO)
 */
inline jint OrgJodaTimeDateTimeConstants_get_NOVEMBER();
#define OrgJodaTimeDateTimeConstants_NOVEMBER 11
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeDateTimeConstants, NOVEMBER, jint)

/*!
 @brief Constant (12) representing December, the twelfth month (ISO)
 */
inline jint OrgJodaTimeDateTimeConstants_get_DECEMBER();
#define OrgJodaTimeDateTimeConstants_DECEMBER 12
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeDateTimeConstants, DECEMBER, jint)

/*!
 @brief Constant (1) representing Monday, the first day of the week (ISO)
 */
inline jint OrgJodaTimeDateTimeConstants_get_MONDAY();
#define OrgJodaTimeDateTimeConstants_MONDAY 1
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeDateTimeConstants, MONDAY, jint)

/*!
 @brief Constant (2) representing Tuesday, the second day of the week (ISO)
 */
inline jint OrgJodaTimeDateTimeConstants_get_TUESDAY();
#define OrgJodaTimeDateTimeConstants_TUESDAY 2
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeDateTimeConstants, TUESDAY, jint)

/*!
 @brief Constant (3) representing Wednesday, the third day of the week (ISO)
 */
inline jint OrgJodaTimeDateTimeConstants_get_WEDNESDAY();
#define OrgJodaTimeDateTimeConstants_WEDNESDAY 3
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeDateTimeConstants, WEDNESDAY, jint)

/*!
 @brief Constant (4) representing Thursday, the fourth day of the week (ISO)
 */
inline jint OrgJodaTimeDateTimeConstants_get_THURSDAY();
#define OrgJodaTimeDateTimeConstants_THURSDAY 4
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeDateTimeConstants, THURSDAY, jint)

/*!
 @brief Constant (5) representing Friday, the fifth day of the week (ISO)
 */
inline jint OrgJodaTimeDateTimeConstants_get_FRIDAY();
#define OrgJodaTimeDateTimeConstants_FRIDAY 5
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeDateTimeConstants, FRIDAY, jint)

/*!
 @brief Constant (6) representing Saturday, the sixth day of the week (ISO)
 */
inline jint OrgJodaTimeDateTimeConstants_get_SATURDAY();
#define OrgJodaTimeDateTimeConstants_SATURDAY 6
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeDateTimeConstants, SATURDAY, jint)

/*!
 @brief Constant (7) representing Sunday, the seventh day of the week (ISO)
 */
inline jint OrgJodaTimeDateTimeConstants_get_SUNDAY();
#define OrgJodaTimeDateTimeConstants_SUNDAY 7
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeDateTimeConstants, SUNDAY, jint)

/*!
 @brief Constant (0) representing AM, the morning (from Calendar)
 */
inline jint OrgJodaTimeDateTimeConstants_get_AM();
#define OrgJodaTimeDateTimeConstants_AM 0
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeDateTimeConstants, AM, jint)

/*!
 @brief Constant (1) representing PM, the afternoon (from Calendar)
 */
inline jint OrgJodaTimeDateTimeConstants_get_PM();
#define OrgJodaTimeDateTimeConstants_PM 1
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeDateTimeConstants, PM, jint)

/*!
 @brief Constant (0) representing BC, years before zero (from Calendar)
 */
inline jint OrgJodaTimeDateTimeConstants_get_BC();
#define OrgJodaTimeDateTimeConstants_BC 0
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeDateTimeConstants, BC, jint)

/*!
 @brief Alternative constant (0) representing BCE, Before Common Era (secular)
 */
inline jint OrgJodaTimeDateTimeConstants_get_BCE();
#define OrgJodaTimeDateTimeConstants_BCE 0
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeDateTimeConstants, BCE, jint)

/*!
 @brief Constant (1) representing AD, years after zero (from Calendar).
 <p>
 All new chronologies with differrent Era values should try to assign
 eras as follows. The era that was in force at 1970-01-01 (ISO) is assigned
 the value 1. Earlier eras are assigned sequentially smaller numbers.
 Later eras are assigned sequentially greater numbers.
 */
inline jint OrgJodaTimeDateTimeConstants_get_AD();
#define OrgJodaTimeDateTimeConstants_AD 1
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeDateTimeConstants, AD, jint)

/*!
 @brief Alternative constant (1) representing CE, Common Era (secular).
 <p>
 All new chronologies with differrent Era values should try to assign
 eras as follows. The era that was in force at 1970-01-01 (ISO) is assigned
 the value 1. Earlier eras are assigned sequentially smaller numbers.
 Later eras are assigned sequentially greater numbers.
 */
inline jint OrgJodaTimeDateTimeConstants_get_CE();
#define OrgJodaTimeDateTimeConstants_CE 1
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeDateTimeConstants, CE, jint)

/*!
 @brief Milliseconds in one second (1000) (ISO)
 */
inline jint OrgJodaTimeDateTimeConstants_get_MILLIS_PER_SECOND();
#define OrgJodaTimeDateTimeConstants_MILLIS_PER_SECOND 1000
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeDateTimeConstants, MILLIS_PER_SECOND, jint)

/*!
 @brief Seconds in one minute (60) (ISO)
 */
inline jint OrgJodaTimeDateTimeConstants_get_SECONDS_PER_MINUTE();
#define OrgJodaTimeDateTimeConstants_SECONDS_PER_MINUTE 60
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeDateTimeConstants, SECONDS_PER_MINUTE, jint)

/*!
 @brief Milliseconds in one minute (ISO)
 */
inline jint OrgJodaTimeDateTimeConstants_get_MILLIS_PER_MINUTE();
#define OrgJodaTimeDateTimeConstants_MILLIS_PER_MINUTE 60000
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeDateTimeConstants, MILLIS_PER_MINUTE, jint)

/*!
 @brief Minutes in one hour (ISO)
 */
inline jint OrgJodaTimeDateTimeConstants_get_MINUTES_PER_HOUR();
#define OrgJodaTimeDateTimeConstants_MINUTES_PER_HOUR 60
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeDateTimeConstants, MINUTES_PER_HOUR, jint)

/*!
 @brief Seconds in one hour (ISO)
 */
inline jint OrgJodaTimeDateTimeConstants_get_SECONDS_PER_HOUR();
#define OrgJodaTimeDateTimeConstants_SECONDS_PER_HOUR 3600
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeDateTimeConstants, SECONDS_PER_HOUR, jint)

/*!
 @brief Milliseconds in one hour (ISO)
 */
inline jint OrgJodaTimeDateTimeConstants_get_MILLIS_PER_HOUR();
#define OrgJodaTimeDateTimeConstants_MILLIS_PER_HOUR 3600000
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeDateTimeConstants, MILLIS_PER_HOUR, jint)

/*!
 @brief Hours in a typical day (24) (ISO).
 Due to time zone offset changes, the
 number of hours per day can vary. 
 */
inline jint OrgJodaTimeDateTimeConstants_get_HOURS_PER_DAY();
#define OrgJodaTimeDateTimeConstants_HOURS_PER_DAY 24
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeDateTimeConstants, HOURS_PER_DAY, jint)

/*!
 @brief Minutes in a typical day (ISO).
 Due to time zone offset changes, the number
 of minutes per day can vary. 
 */
inline jint OrgJodaTimeDateTimeConstants_get_MINUTES_PER_DAY();
#define OrgJodaTimeDateTimeConstants_MINUTES_PER_DAY 1440
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeDateTimeConstants, MINUTES_PER_DAY, jint)

/*!
 @brief Seconds in a typical day (ISO).
 Due to time zone offset changes, the number
 of seconds per day can vary. 
 */
inline jint OrgJodaTimeDateTimeConstants_get_SECONDS_PER_DAY();
#define OrgJodaTimeDateTimeConstants_SECONDS_PER_DAY 86400
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeDateTimeConstants, SECONDS_PER_DAY, jint)

/*!
 @brief Milliseconds in a typical day (ISO).
 Due to time zone offset changes, the
 number of milliseconds per day can vary. 
 */
inline jint OrgJodaTimeDateTimeConstants_get_MILLIS_PER_DAY();
#define OrgJodaTimeDateTimeConstants_MILLIS_PER_DAY 86400000
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeDateTimeConstants, MILLIS_PER_DAY, jint)

/*!
 @brief Days in one week (7) (ISO)
 */
inline jint OrgJodaTimeDateTimeConstants_get_DAYS_PER_WEEK();
#define OrgJodaTimeDateTimeConstants_DAYS_PER_WEEK 7
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeDateTimeConstants, DAYS_PER_WEEK, jint)

/*!
 @brief Hours in a typical week.
 Due to time zone offset changes, the number of
 hours per week can vary. 
 */
inline jint OrgJodaTimeDateTimeConstants_get_HOURS_PER_WEEK();
#define OrgJodaTimeDateTimeConstants_HOURS_PER_WEEK 168
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeDateTimeConstants, HOURS_PER_WEEK, jint)

/*!
 @brief Minutes in a typical week (ISO).
 Due to time zone offset changes, the number
 of minutes per week can vary. 
 */
inline jint OrgJodaTimeDateTimeConstants_get_MINUTES_PER_WEEK();
#define OrgJodaTimeDateTimeConstants_MINUTES_PER_WEEK 10080
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeDateTimeConstants, MINUTES_PER_WEEK, jint)

/*!
 @brief Seconds in a typical week (ISO).
 Due to time zone offset changes, the number
 of seconds per week can vary. 
 */
inline jint OrgJodaTimeDateTimeConstants_get_SECONDS_PER_WEEK();
#define OrgJodaTimeDateTimeConstants_SECONDS_PER_WEEK 604800
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeDateTimeConstants, SECONDS_PER_WEEK, jint)

/*!
 @brief Milliseconds in a typical week (ISO).
 Due to time zone offset changes, the
 number of milliseconds per week can vary. 
 */
inline jint OrgJodaTimeDateTimeConstants_get_MILLIS_PER_WEEK();
#define OrgJodaTimeDateTimeConstants_MILLIS_PER_WEEK 604800000
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeDateTimeConstants, MILLIS_PER_WEEK, jint)

FOUNDATION_EXPORT void OrgJodaTimeDateTimeConstants_init(OrgJodaTimeDateTimeConstants *self);

FOUNDATION_EXPORT OrgJodaTimeDateTimeConstants *new_OrgJodaTimeDateTimeConstants_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeDateTimeConstants *create_OrgJodaTimeDateTimeConstants_init();

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeDateTimeConstants)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgJodaTimeDateTimeConstants")

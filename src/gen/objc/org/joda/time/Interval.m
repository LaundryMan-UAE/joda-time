//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/temp/joda-time/src/main/java/org/joda/time/Interval.java
//

#include "J2ObjC_source.h"
#include "java/lang/Math.h"
#include "org/joda/time/Chronology.h"
#include "org/joda/time/DateTimeUtils.h"
#include "org/joda/time/DateTimeZone.h"
#include "org/joda/time/Interval.h"
#include "org/joda/time/ReadableDuration.h"
#include "org/joda/time/ReadableInstant.h"
#include "org/joda/time/ReadableInterval.h"
#include "org/joda/time/ReadablePeriod.h"
#include "org/joda/time/base/BaseInterval.h"
#include "org/joda/time/chrono/ISOChronology.h"

/*!
 @brief Serialization version
 */
inline jlong OrgJodaTimeInterval_get_serialVersionUID(void);
#define OrgJodaTimeInterval_serialVersionUID 4922451897541386752LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeInterval, serialVersionUID, jlong)

@implementation OrgJodaTimeInterval

+ (OrgJodaTimeInterval *)parseWithNSString:(NSString *)str {
  return OrgJodaTimeInterval_parseWithNSString_(str);
}

- (instancetype)initWithLong:(jlong)startInstant
                    withLong:(jlong)endInstant {
  OrgJodaTimeInterval_initWithLong_withLong_(self, startInstant, endInstant);
  return self;
}

- (instancetype)initWithLong:(jlong)startInstant
                    withLong:(jlong)endInstant
 withOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)zone {
  OrgJodaTimeInterval_initWithLong_withLong_withOrgJodaTimeDateTimeZone_(self, startInstant, endInstant, zone);
  return self;
}

- (instancetype)initWithLong:(jlong)startInstant
                    withLong:(jlong)endInstant
   withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology {
  OrgJodaTimeInterval_initWithLong_withLong_withOrgJodaTimeChronology_(self, startInstant, endInstant, chronology);
  return self;
}

- (instancetype)initWithOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)start
                    withOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)end {
  OrgJodaTimeInterval_initWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadableInstant_(self, start, end);
  return self;
}

- (instancetype)initWithOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)start
                   withOrgJodaTimeReadableDuration:(id<OrgJodaTimeReadableDuration>)duration {
  OrgJodaTimeInterval_initWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadableDuration_(self, start, duration);
  return self;
}

- (instancetype)initWithOrgJodaTimeReadableDuration:(id<OrgJodaTimeReadableDuration>)duration
                     withOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)end {
  OrgJodaTimeInterval_initWithOrgJodaTimeReadableDuration_withOrgJodaTimeReadableInstant_(self, duration, end);
  return self;
}

- (instancetype)initWithOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)start
                     withOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period {
  OrgJodaTimeInterval_initWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadablePeriod_(self, start, period);
  return self;
}

- (instancetype)initWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period
                   withOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)end {
  OrgJodaTimeInterval_initWithOrgJodaTimeReadablePeriod_withOrgJodaTimeReadableInstant_(self, period, end);
  return self;
}

- (instancetype)initWithId:(id)interval {
  OrgJodaTimeInterval_initWithId_(self, interval);
  return self;
}

- (instancetype)initWithId:(id)interval
 withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology {
  OrgJodaTimeInterval_initWithId_withOrgJodaTimeChronology_(self, interval, chronology);
  return self;
}

- (OrgJodaTimeInterval *)toInterval {
  return self;
}

- (OrgJodaTimeInterval *)overlapWithOrgJodaTimeReadableInterval:(id<OrgJodaTimeReadableInterval>)interval {
  interval = OrgJodaTimeDateTimeUtils_getReadableIntervalWithOrgJodaTimeReadableInterval_(interval);
  if ([self overlapsWithOrgJodaTimeReadableInterval:interval] == false) {
    return nil;
  }
  jlong start = JavaLangMath_maxWithLong_withLong_([self getStartMillis], [((id<OrgJodaTimeReadableInterval>) nil_chk(interval)) getStartMillis]);
  jlong end = JavaLangMath_minWithLong_withLong_([self getEndMillis], [interval getEndMillis]);
  return create_OrgJodaTimeInterval_initWithLong_withLong_withOrgJodaTimeChronology_(start, end, [self getChronology]);
}

- (OrgJodaTimeInterval *)gapWithOrgJodaTimeReadableInterval:(id<OrgJodaTimeReadableInterval>)interval {
  interval = OrgJodaTimeDateTimeUtils_getReadableIntervalWithOrgJodaTimeReadableInterval_(interval);
  jlong otherStart = [((id<OrgJodaTimeReadableInterval>) nil_chk(interval)) getStartMillis];
  jlong otherEnd = [interval getEndMillis];
  jlong thisStart = [self getStartMillis];
  jlong thisEnd = [self getEndMillis];
  if (thisStart > otherEnd) {
    return create_OrgJodaTimeInterval_initWithLong_withLong_withOrgJodaTimeChronology_(otherEnd, thisStart, [self getChronology]);
  }
  else if (otherStart > thisEnd) {
    return create_OrgJodaTimeInterval_initWithLong_withLong_withOrgJodaTimeChronology_(thisEnd, otherStart, [self getChronology]);
  }
  else {
    return nil;
  }
}

- (jboolean)abutsWithOrgJodaTimeReadableInterval:(id<OrgJodaTimeReadableInterval>)interval {
  if (interval == nil) {
    jlong now = OrgJodaTimeDateTimeUtils_currentTimeMillis();
    return ([self getStartMillis] == now || [self getEndMillis] == now);
  }
  else {
    return ([interval getEndMillis] == [self getStartMillis] || [self getEndMillis] == [interval getStartMillis]);
  }
}

- (OrgJodaTimeInterval *)withChronologyWithOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology {
  if ([self getChronology] == chronology) {
    return self;
  }
  return create_OrgJodaTimeInterval_initWithLong_withLong_withOrgJodaTimeChronology_([self getStartMillis], [self getEndMillis], chronology);
}

- (OrgJodaTimeInterval *)withStartMillisWithLong:(jlong)startInstant {
  if (startInstant == [self getStartMillis]) {
    return self;
  }
  return create_OrgJodaTimeInterval_initWithLong_withLong_withOrgJodaTimeChronology_(startInstant, [self getEndMillis], [self getChronology]);
}

- (OrgJodaTimeInterval *)withStartWithOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)start {
  jlong startMillis = OrgJodaTimeDateTimeUtils_getInstantMillisWithOrgJodaTimeReadableInstant_(start);
  return [self withStartMillisWithLong:startMillis];
}

- (OrgJodaTimeInterval *)withEndMillisWithLong:(jlong)endInstant {
  if (endInstant == [self getEndMillis]) {
    return self;
  }
  return create_OrgJodaTimeInterval_initWithLong_withLong_withOrgJodaTimeChronology_([self getStartMillis], endInstant, [self getChronology]);
}

- (OrgJodaTimeInterval *)withEndWithOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)end {
  jlong endMillis = OrgJodaTimeDateTimeUtils_getInstantMillisWithOrgJodaTimeReadableInstant_(end);
  return [self withEndMillisWithLong:endMillis];
}

- (OrgJodaTimeInterval *)withDurationAfterStartWithOrgJodaTimeReadableDuration:(id<OrgJodaTimeReadableDuration>)duration {
  jlong durationMillis = OrgJodaTimeDateTimeUtils_getDurationMillisWithOrgJodaTimeReadableDuration_(duration);
  if (durationMillis == [self toDurationMillis]) {
    return self;
  }
  OrgJodaTimeChronology *chrono = [self getChronology];
  jlong startMillis = [self getStartMillis];
  jlong endMillis = [((OrgJodaTimeChronology *) nil_chk(chrono)) addWithLong:startMillis withLong:durationMillis withInt:1];
  return create_OrgJodaTimeInterval_initWithLong_withLong_withOrgJodaTimeChronology_(startMillis, endMillis, chrono);
}

- (OrgJodaTimeInterval *)withDurationBeforeEndWithOrgJodaTimeReadableDuration:(id<OrgJodaTimeReadableDuration>)duration {
  jlong durationMillis = OrgJodaTimeDateTimeUtils_getDurationMillisWithOrgJodaTimeReadableDuration_(duration);
  if (durationMillis == [self toDurationMillis]) {
    return self;
  }
  OrgJodaTimeChronology *chrono = [self getChronology];
  jlong endMillis = [self getEndMillis];
  jlong startMillis = [((OrgJodaTimeChronology *) nil_chk(chrono)) addWithLong:endMillis withLong:durationMillis withInt:-1];
  return create_OrgJodaTimeInterval_initWithLong_withLong_withOrgJodaTimeChronology_(startMillis, endMillis, chrono);
}

- (OrgJodaTimeInterval *)withPeriodAfterStartWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period {
  if (period == nil) {
    return [self withDurationAfterStartWithOrgJodaTimeReadableDuration:nil];
  }
  OrgJodaTimeChronology *chrono = [self getChronology];
  jlong startMillis = [self getStartMillis];
  jlong endMillis = [((OrgJodaTimeChronology *) nil_chk(chrono)) addWithOrgJodaTimeReadablePeriod:period withLong:startMillis withInt:1];
  return create_OrgJodaTimeInterval_initWithLong_withLong_withOrgJodaTimeChronology_(startMillis, endMillis, chrono);
}

- (OrgJodaTimeInterval *)withPeriodBeforeEndWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period {
  if (period == nil) {
    return [self withDurationBeforeEndWithOrgJodaTimeReadableDuration:nil];
  }
  OrgJodaTimeChronology *chrono = [self getChronology];
  jlong endMillis = [self getEndMillis];
  jlong startMillis = [((OrgJodaTimeChronology *) nil_chk(chrono)) addWithOrgJodaTimeReadablePeriod:period withLong:endMillis withInt:-1];
  return create_OrgJodaTimeInterval_initWithLong_withLong_withOrgJodaTimeChronology_(startMillis, endMillis, chrono);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgJodaTimeInterval;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 5, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 6, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 7, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 8, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 9, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 10, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 11, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeInterval;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeInterval;", 0x1, 12, 13, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeInterval;", 0x1, 14, 13, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 15, 13, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeInterval;", 0x1, 16, 17, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeInterval;", 0x1, 18, 19, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeInterval;", 0x1, 20, 21, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeInterval;", 0x1, 22, 19, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeInterval;", 0x1, 23, 21, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeInterval;", 0x1, 24, 25, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeInterval;", 0x1, 26, 25, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeInterval;", 0x1, 27, 28, -1, -1, -1, -1 },
    { NULL, "LOrgJodaTimeInterval;", 0x1, 29, 28, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(parseWithNSString:);
  methods[1].selector = @selector(initWithLong:withLong:);
  methods[2].selector = @selector(initWithLong:withLong:withOrgJodaTimeDateTimeZone:);
  methods[3].selector = @selector(initWithLong:withLong:withOrgJodaTimeChronology:);
  methods[4].selector = @selector(initWithOrgJodaTimeReadableInstant:withOrgJodaTimeReadableInstant:);
  methods[5].selector = @selector(initWithOrgJodaTimeReadableInstant:withOrgJodaTimeReadableDuration:);
  methods[6].selector = @selector(initWithOrgJodaTimeReadableDuration:withOrgJodaTimeReadableInstant:);
  methods[7].selector = @selector(initWithOrgJodaTimeReadableInstant:withOrgJodaTimeReadablePeriod:);
  methods[8].selector = @selector(initWithOrgJodaTimeReadablePeriod:withOrgJodaTimeReadableInstant:);
  methods[9].selector = @selector(initWithId:);
  methods[10].selector = @selector(initWithId:withOrgJodaTimeChronology:);
  methods[11].selector = @selector(toInterval);
  methods[12].selector = @selector(overlapWithOrgJodaTimeReadableInterval:);
  methods[13].selector = @selector(gapWithOrgJodaTimeReadableInterval:);
  methods[14].selector = @selector(abutsWithOrgJodaTimeReadableInterval:);
  methods[15].selector = @selector(withChronologyWithOrgJodaTimeChronology:);
  methods[16].selector = @selector(withStartMillisWithLong:);
  methods[17].selector = @selector(withStartWithOrgJodaTimeReadableInstant:);
  methods[18].selector = @selector(withEndMillisWithLong:);
  methods[19].selector = @selector(withEndWithOrgJodaTimeReadableInstant:);
  methods[20].selector = @selector(withDurationAfterStartWithOrgJodaTimeReadableDuration:);
  methods[21].selector = @selector(withDurationBeforeEndWithOrgJodaTimeReadableDuration:);
  methods[22].selector = @selector(withPeriodAfterStartWithOrgJodaTimeReadablePeriod:);
  methods[23].selector = @selector(withPeriodBeforeEndWithOrgJodaTimeReadablePeriod:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = OrgJodaTimeInterval_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "parse", "LNSString;", "JJ", "JJLOrgJodaTimeDateTimeZone;", "JJLOrgJodaTimeChronology;", "LOrgJodaTimeReadableInstant;LOrgJodaTimeReadableInstant;", "LOrgJodaTimeReadableInstant;LOrgJodaTimeReadableDuration;", "LOrgJodaTimeReadableDuration;LOrgJodaTimeReadableInstant;", "LOrgJodaTimeReadableInstant;LOrgJodaTimeReadablePeriod;", "LOrgJodaTimeReadablePeriod;LOrgJodaTimeReadableInstant;", "LNSObject;", "LNSObject;LOrgJodaTimeChronology;", "overlap", "LOrgJodaTimeReadableInterval;", "gap", "abuts", "withChronology", "LOrgJodaTimeChronology;", "withStartMillis", "J", "withStart", "LOrgJodaTimeReadableInstant;", "withEndMillis", "withEnd", "withDurationAfterStart", "LOrgJodaTimeReadableDuration;", "withDurationBeforeEnd", "withPeriodAfterStart", "LOrgJodaTimeReadablePeriod;", "withPeriodBeforeEnd" };
  static const J2ObjcClassInfo _OrgJodaTimeInterval = { "Interval", "org.joda.time", ptrTable, methods, fields, 7, 0x11, 24, 1, -1, -1, -1, -1, -1 };
  return &_OrgJodaTimeInterval;
}

@end

OrgJodaTimeInterval *OrgJodaTimeInterval_parseWithNSString_(NSString *str) {
  OrgJodaTimeInterval_initialize();
  return create_OrgJodaTimeInterval_initWithId_(str);
}

void OrgJodaTimeInterval_initWithLong_withLong_(OrgJodaTimeInterval *self, jlong startInstant, jlong endInstant) {
  OrgJodaTimeBaseBaseInterval_initWithLong_withLong_withOrgJodaTimeChronology_(self, startInstant, endInstant, nil);
}

OrgJodaTimeInterval *new_OrgJodaTimeInterval_initWithLong_withLong_(jlong startInstant, jlong endInstant) {
  J2OBJC_NEW_IMPL(OrgJodaTimeInterval, initWithLong_withLong_, startInstant, endInstant)
}

OrgJodaTimeInterval *create_OrgJodaTimeInterval_initWithLong_withLong_(jlong startInstant, jlong endInstant) {
  J2OBJC_CREATE_IMPL(OrgJodaTimeInterval, initWithLong_withLong_, startInstant, endInstant)
}

void OrgJodaTimeInterval_initWithLong_withLong_withOrgJodaTimeDateTimeZone_(OrgJodaTimeInterval *self, jlong startInstant, jlong endInstant, OrgJodaTimeDateTimeZone *zone) {
  OrgJodaTimeBaseBaseInterval_initWithLong_withLong_withOrgJodaTimeChronology_(self, startInstant, endInstant, OrgJodaTimeChronoISOChronology_getInstanceWithOrgJodaTimeDateTimeZone_(zone));
}

OrgJodaTimeInterval *new_OrgJodaTimeInterval_initWithLong_withLong_withOrgJodaTimeDateTimeZone_(jlong startInstant, jlong endInstant, OrgJodaTimeDateTimeZone *zone) {
  J2OBJC_NEW_IMPL(OrgJodaTimeInterval, initWithLong_withLong_withOrgJodaTimeDateTimeZone_, startInstant, endInstant, zone)
}

OrgJodaTimeInterval *create_OrgJodaTimeInterval_initWithLong_withLong_withOrgJodaTimeDateTimeZone_(jlong startInstant, jlong endInstant, OrgJodaTimeDateTimeZone *zone) {
  J2OBJC_CREATE_IMPL(OrgJodaTimeInterval, initWithLong_withLong_withOrgJodaTimeDateTimeZone_, startInstant, endInstant, zone)
}

void OrgJodaTimeInterval_initWithLong_withLong_withOrgJodaTimeChronology_(OrgJodaTimeInterval *self, jlong startInstant, jlong endInstant, OrgJodaTimeChronology *chronology) {
  OrgJodaTimeBaseBaseInterval_initWithLong_withLong_withOrgJodaTimeChronology_(self, startInstant, endInstant, chronology);
}

OrgJodaTimeInterval *new_OrgJodaTimeInterval_initWithLong_withLong_withOrgJodaTimeChronology_(jlong startInstant, jlong endInstant, OrgJodaTimeChronology *chronology) {
  J2OBJC_NEW_IMPL(OrgJodaTimeInterval, initWithLong_withLong_withOrgJodaTimeChronology_, startInstant, endInstant, chronology)
}

OrgJodaTimeInterval *create_OrgJodaTimeInterval_initWithLong_withLong_withOrgJodaTimeChronology_(jlong startInstant, jlong endInstant, OrgJodaTimeChronology *chronology) {
  J2OBJC_CREATE_IMPL(OrgJodaTimeInterval, initWithLong_withLong_withOrgJodaTimeChronology_, startInstant, endInstant, chronology)
}

void OrgJodaTimeInterval_initWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadableInstant_(OrgJodaTimeInterval *self, id<OrgJodaTimeReadableInstant> start, id<OrgJodaTimeReadableInstant> end) {
  OrgJodaTimeBaseBaseInterval_initWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadableInstant_(self, start, end);
}

OrgJodaTimeInterval *new_OrgJodaTimeInterval_initWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadableInstant_(id<OrgJodaTimeReadableInstant> start, id<OrgJodaTimeReadableInstant> end) {
  J2OBJC_NEW_IMPL(OrgJodaTimeInterval, initWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadableInstant_, start, end)
}

OrgJodaTimeInterval *create_OrgJodaTimeInterval_initWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadableInstant_(id<OrgJodaTimeReadableInstant> start, id<OrgJodaTimeReadableInstant> end) {
  J2OBJC_CREATE_IMPL(OrgJodaTimeInterval, initWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadableInstant_, start, end)
}

void OrgJodaTimeInterval_initWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadableDuration_(OrgJodaTimeInterval *self, id<OrgJodaTimeReadableInstant> start, id<OrgJodaTimeReadableDuration> duration) {
  OrgJodaTimeBaseBaseInterval_initWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadableDuration_(self, start, duration);
}

OrgJodaTimeInterval *new_OrgJodaTimeInterval_initWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadableDuration_(id<OrgJodaTimeReadableInstant> start, id<OrgJodaTimeReadableDuration> duration) {
  J2OBJC_NEW_IMPL(OrgJodaTimeInterval, initWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadableDuration_, start, duration)
}

OrgJodaTimeInterval *create_OrgJodaTimeInterval_initWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadableDuration_(id<OrgJodaTimeReadableInstant> start, id<OrgJodaTimeReadableDuration> duration) {
  J2OBJC_CREATE_IMPL(OrgJodaTimeInterval, initWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadableDuration_, start, duration)
}

void OrgJodaTimeInterval_initWithOrgJodaTimeReadableDuration_withOrgJodaTimeReadableInstant_(OrgJodaTimeInterval *self, id<OrgJodaTimeReadableDuration> duration, id<OrgJodaTimeReadableInstant> end) {
  OrgJodaTimeBaseBaseInterval_initWithOrgJodaTimeReadableDuration_withOrgJodaTimeReadableInstant_(self, duration, end);
}

OrgJodaTimeInterval *new_OrgJodaTimeInterval_initWithOrgJodaTimeReadableDuration_withOrgJodaTimeReadableInstant_(id<OrgJodaTimeReadableDuration> duration, id<OrgJodaTimeReadableInstant> end) {
  J2OBJC_NEW_IMPL(OrgJodaTimeInterval, initWithOrgJodaTimeReadableDuration_withOrgJodaTimeReadableInstant_, duration, end)
}

OrgJodaTimeInterval *create_OrgJodaTimeInterval_initWithOrgJodaTimeReadableDuration_withOrgJodaTimeReadableInstant_(id<OrgJodaTimeReadableDuration> duration, id<OrgJodaTimeReadableInstant> end) {
  J2OBJC_CREATE_IMPL(OrgJodaTimeInterval, initWithOrgJodaTimeReadableDuration_withOrgJodaTimeReadableInstant_, duration, end)
}

void OrgJodaTimeInterval_initWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadablePeriod_(OrgJodaTimeInterval *self, id<OrgJodaTimeReadableInstant> start, id<OrgJodaTimeReadablePeriod> period) {
  OrgJodaTimeBaseBaseInterval_initWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadablePeriod_(self, start, period);
}

OrgJodaTimeInterval *new_OrgJodaTimeInterval_initWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadablePeriod_(id<OrgJodaTimeReadableInstant> start, id<OrgJodaTimeReadablePeriod> period) {
  J2OBJC_NEW_IMPL(OrgJodaTimeInterval, initWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadablePeriod_, start, period)
}

OrgJodaTimeInterval *create_OrgJodaTimeInterval_initWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadablePeriod_(id<OrgJodaTimeReadableInstant> start, id<OrgJodaTimeReadablePeriod> period) {
  J2OBJC_CREATE_IMPL(OrgJodaTimeInterval, initWithOrgJodaTimeReadableInstant_withOrgJodaTimeReadablePeriod_, start, period)
}

void OrgJodaTimeInterval_initWithOrgJodaTimeReadablePeriod_withOrgJodaTimeReadableInstant_(OrgJodaTimeInterval *self, id<OrgJodaTimeReadablePeriod> period, id<OrgJodaTimeReadableInstant> end) {
  OrgJodaTimeBaseBaseInterval_initWithOrgJodaTimeReadablePeriod_withOrgJodaTimeReadableInstant_(self, period, end);
}

OrgJodaTimeInterval *new_OrgJodaTimeInterval_initWithOrgJodaTimeReadablePeriod_withOrgJodaTimeReadableInstant_(id<OrgJodaTimeReadablePeriod> period, id<OrgJodaTimeReadableInstant> end) {
  J2OBJC_NEW_IMPL(OrgJodaTimeInterval, initWithOrgJodaTimeReadablePeriod_withOrgJodaTimeReadableInstant_, period, end)
}

OrgJodaTimeInterval *create_OrgJodaTimeInterval_initWithOrgJodaTimeReadablePeriod_withOrgJodaTimeReadableInstant_(id<OrgJodaTimeReadablePeriod> period, id<OrgJodaTimeReadableInstant> end) {
  J2OBJC_CREATE_IMPL(OrgJodaTimeInterval, initWithOrgJodaTimeReadablePeriod_withOrgJodaTimeReadableInstant_, period, end)
}

void OrgJodaTimeInterval_initWithId_(OrgJodaTimeInterval *self, id interval) {
  OrgJodaTimeBaseBaseInterval_initWithId_withOrgJodaTimeChronology_(self, interval, nil);
}

OrgJodaTimeInterval *new_OrgJodaTimeInterval_initWithId_(id interval) {
  J2OBJC_NEW_IMPL(OrgJodaTimeInterval, initWithId_, interval)
}

OrgJodaTimeInterval *create_OrgJodaTimeInterval_initWithId_(id interval) {
  J2OBJC_CREATE_IMPL(OrgJodaTimeInterval, initWithId_, interval)
}

void OrgJodaTimeInterval_initWithId_withOrgJodaTimeChronology_(OrgJodaTimeInterval *self, id interval, OrgJodaTimeChronology *chronology) {
  OrgJodaTimeBaseBaseInterval_initWithId_withOrgJodaTimeChronology_(self, interval, chronology);
}

OrgJodaTimeInterval *new_OrgJodaTimeInterval_initWithId_withOrgJodaTimeChronology_(id interval, OrgJodaTimeChronology *chronology) {
  J2OBJC_NEW_IMPL(OrgJodaTimeInterval, initWithId_withOrgJodaTimeChronology_, interval, chronology)
}

OrgJodaTimeInterval *create_OrgJodaTimeInterval_initWithId_withOrgJodaTimeChronology_(id interval, OrgJodaTimeChronology *chronology) {
  J2OBJC_CREATE_IMPL(OrgJodaTimeInterval, initWithId_withOrgJodaTimeChronology_, interval, chronology)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaTimeInterval)

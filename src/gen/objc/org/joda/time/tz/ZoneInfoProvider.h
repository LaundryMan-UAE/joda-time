//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/andrefonseca/Documents/PodsFolders/Joda-Time/src/main/java/org/joda/time/tz/ZoneInfoProvider.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgJodaTimeTzZoneInfoProvider")
#ifdef RESTRICT_OrgJodaTimeTzZoneInfoProvider
#define INCLUDE_ALL_OrgJodaTimeTzZoneInfoProvider 0
#else
#define INCLUDE_ALL_OrgJodaTimeTzZoneInfoProvider 1
#endif
#undef RESTRICT_OrgJodaTimeTzZoneInfoProvider

#if !defined (OrgJodaTimeTzZoneInfoProvider_) && (INCLUDE_ALL_OrgJodaTimeTzZoneInfoProvider || defined(INCLUDE_OrgJodaTimeTzZoneInfoProvider))
#define OrgJodaTimeTzZoneInfoProvider_

#define RESTRICT_OrgJodaTimeTzProvider 1
#define INCLUDE_OrgJodaTimeTzProvider 1
#include "org/joda/time/tz/Provider.h"

@class JavaIoFile;
@class JavaLangClassLoader;
@class JavaLangException;
@class OrgJodaTimeDateTimeZone;
@protocol JavaUtilSet;

/*!
 @brief ZoneInfoProvider loads compiled data files as generated by
 <code>ZoneInfoCompiler</code>.
 <p>
 ZoneInfoProvider is thread-safe and publicly immutable.
 @author Brian S O'Neill
 @since 1.0
 */
@interface OrgJodaTimeTzZoneInfoProvider : NSObject < OrgJodaTimeTzProvider >

#pragma mark Public

/*!
 @brief ZoneInfoProvider searches the given directory for compiled data files.
 @throws IOException if directory or map file cannot be read
 */
- (instancetype)initWithJavaIoFile:(JavaIoFile *)fileDir;

/*!
 @brief ZoneInfoProvider searches the given ClassLoader resource path for
 compiled data files.
 Resources are loaded from the ClassLoader that
 loaded this class.
 @throws IOException if directory or map file cannot be read
 */
- (instancetype)initWithNSString:(NSString *)resourcePath;

/*!
 @brief ZoneInfoProvider searches the given ClassLoader resource path for
 compiled data files.
 @param loader ClassLoader to load compiled data files from. If null,
 use system ClassLoader.
 @throws IOException if directory or map file cannot be read
 */
- (instancetype)initWithNSString:(NSString *)resourcePath
         withJavaLangClassLoader:(JavaLangClassLoader *)loader;

/*!
 @brief Gets a list of all the available zone ids.
 @return the zone ids
 */
- (id<JavaUtilSet>)getAvailableIDs;

/*!
 @brief If an error is thrown while loading zone data, the exception is logged
 to system error and null is returned for this and all future requests.
 @param id_  the id to load
 @return the loaded zone
 */
- (OrgJodaTimeDateTimeZone *)getZoneWithNSString:(NSString *)id_;

#pragma mark Protected

/*!
 @brief Called if an exception is thrown from getZone while loading zone data.
 @param ex  the exception
 */
- (void)uncaughtExceptionWithJavaLangException:(JavaLangException *)ex;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeTzZoneInfoProvider)

FOUNDATION_EXPORT void OrgJodaTimeTzZoneInfoProvider_initWithJavaIoFile_(OrgJodaTimeTzZoneInfoProvider *self, JavaIoFile *fileDir);

FOUNDATION_EXPORT OrgJodaTimeTzZoneInfoProvider *new_OrgJodaTimeTzZoneInfoProvider_initWithJavaIoFile_(JavaIoFile *fileDir) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeTzZoneInfoProvider *create_OrgJodaTimeTzZoneInfoProvider_initWithJavaIoFile_(JavaIoFile *fileDir);

FOUNDATION_EXPORT void OrgJodaTimeTzZoneInfoProvider_initWithNSString_(OrgJodaTimeTzZoneInfoProvider *self, NSString *resourcePath);

FOUNDATION_EXPORT OrgJodaTimeTzZoneInfoProvider *new_OrgJodaTimeTzZoneInfoProvider_initWithNSString_(NSString *resourcePath) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeTzZoneInfoProvider *create_OrgJodaTimeTzZoneInfoProvider_initWithNSString_(NSString *resourcePath);

FOUNDATION_EXPORT void OrgJodaTimeTzZoneInfoProvider_initWithNSString_withJavaLangClassLoader_(OrgJodaTimeTzZoneInfoProvider *self, NSString *resourcePath, JavaLangClassLoader *loader);

FOUNDATION_EXPORT OrgJodaTimeTzZoneInfoProvider *new_OrgJodaTimeTzZoneInfoProvider_initWithNSString_withJavaLangClassLoader_(NSString *resourcePath, JavaLangClassLoader *loader) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeTzZoneInfoProvider *create_OrgJodaTimeTzZoneInfoProvider_initWithNSString_withJavaLangClassLoader_(NSString *resourcePath, JavaLangClassLoader *loader);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeTzZoneInfoProvider)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgJodaTimeTzZoneInfoProvider")

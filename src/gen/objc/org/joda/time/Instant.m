//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/HambroPerks/hambroperks_org/joda-time/src/main/java/org/joda/time/Instant.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/Deprecated.h"
#include "org/joda/convert/FromString.h"
#include "org/joda/time/Chronology.h"
#include "org/joda/time/DateTime.h"
#include "org/joda/time/DateTimeUtils.h"
#include "org/joda/time/Instant.h"
#include "org/joda/time/MutableDateTime.h"
#include "org/joda/time/ReadableDuration.h"
#include "org/joda/time/base/AbstractInstant.h"
#include "org/joda/time/chrono/ISOChronology.h"
#include "org/joda/time/convert/ConverterManager.h"
#include "org/joda/time/convert/InstantConverter.h"
#include "org/joda/time/format/DateTimeFormatter.h"
#include "org/joda/time/format/ISODateTimeFormat.h"

#define OrgJodaTimeInstant_serialVersionUID 3299096530934209741LL

@interface OrgJodaTimeInstant () {
 @public
  /**
   @brief The millis from 1970-01-01T00:00:00Z
   */
  jlong iMillis_;
}

@end

J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeInstant, serialVersionUID, jlong)

@implementation OrgJodaTimeInstant

+ (OrgJodaTimeInstant *)now {
  return OrgJodaTimeInstant_now();
}

+ (OrgJodaTimeInstant *)parseWithNSString:(NSString *)str {
  return OrgJodaTimeInstant_parseWithNSString_(str);
}

+ (OrgJodaTimeInstant *)parseWithNSString:(NSString *)str
   withOrgJodaTimeFormatDateTimeFormatter:(OrgJodaTimeFormatDateTimeFormatter *)formatter {
  return OrgJodaTimeInstant_parseWithNSString_withOrgJodaTimeFormatDateTimeFormatter_(str, formatter);
}

- (instancetype)init {
  OrgJodaTimeInstant_init(self);
  return self;
}

- (instancetype)initWithLong:(jlong)instant {
  OrgJodaTimeInstant_initWithLong_(self, instant);
  return self;
}

- (instancetype)initWithId:(id)instant {
  OrgJodaTimeInstant_initWithId_(self, instant);
  return self;
}

- (OrgJodaTimeInstant *)toInstant {
  return self;
}

- (OrgJodaTimeInstant *)withMillisWithLong:(jlong)newMillis {
  return (newMillis == iMillis_ ? self : [new_OrgJodaTimeInstant_initWithLong_(newMillis) autorelease]);
}

- (OrgJodaTimeInstant *)withDurationAddedWithLong:(jlong)durationToAdd
                                          withInt:(jint)scalar {
  if (durationToAdd == 0 || scalar == 0) {
    return self;
  }
  jlong instant = [((OrgJodaTimeChronology *) nil_chk([self getChronology])) addWithLong:[self getMillis] withLong:durationToAdd withInt:scalar];
  return [self withMillisWithLong:instant];
}

- (OrgJodaTimeInstant *)withDurationAddedWithOrgJodaTimeReadableDuration:(id<OrgJodaTimeReadableDuration>)durationToAdd
                                                                 withInt:(jint)scalar {
  if (durationToAdd == nil || scalar == 0) {
    return self;
  }
  return [self withDurationAddedWithLong:[((id<OrgJodaTimeReadableDuration>) nil_chk(durationToAdd)) getMillis] withInt:scalar];
}

- (OrgJodaTimeInstant *)plusWithLong:(jlong)duration {
  return [self withDurationAddedWithLong:duration withInt:1];
}

- (OrgJodaTimeInstant *)plusWithOrgJodaTimeReadableDuration:(id<OrgJodaTimeReadableDuration>)duration {
  return [self withDurationAddedWithOrgJodaTimeReadableDuration:duration withInt:1];
}

- (OrgJodaTimeInstant *)minusWithLong:(jlong)duration {
  return [self withDurationAddedWithLong:duration withInt:-1];
}

- (OrgJodaTimeInstant *)minusWithOrgJodaTimeReadableDuration:(id<OrgJodaTimeReadableDuration>)duration {
  return [self withDurationAddedWithOrgJodaTimeReadableDuration:duration withInt:-1];
}

- (jlong)getMillis {
  return iMillis_;
}

- (OrgJodaTimeChronology *)getChronology {
  return OrgJodaTimeChronoISOChronology_getInstanceUTC();
}

- (OrgJodaTimeDateTime *)toDateTime {
  return [new_OrgJodaTimeDateTime_initWithLong_withOrgJodaTimeChronology_([self getMillis], OrgJodaTimeChronoISOChronology_getInstance()) autorelease];
}

- (OrgJodaTimeDateTime *)toDateTimeISO {
  return [self toDateTime];
}

- (OrgJodaTimeMutableDateTime *)toMutableDateTime {
  return [new_OrgJodaTimeMutableDateTime_initWithLong_withOrgJodaTimeChronology_([self getMillis], OrgJodaTimeChronoISOChronology_getInstance()) autorelease];
}

- (OrgJodaTimeMutableDateTime *)toMutableDateTimeISO {
  return [self toMutableDateTime];
}

+ (IOSObjectArray *)__annotations_parseWithNSString_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[OrgJodaConvertFromString alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_toDateTimeISO {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_toMutableDateTimeISO {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[JavaLangDeprecated alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "now", NULL, "Lorg.joda.time.Instant;", 0x9, NULL, NULL },
    { "parseWithNSString:", "parse", "Lorg.joda.time.Instant;", 0x9, NULL, NULL },
    { "parseWithNSString:withOrgJodaTimeFormatDateTimeFormatter:", "parse", "Lorg.joda.time.Instant;", 0x9, NULL, NULL },
    { "init", "Instant", NULL, 0x1, NULL, NULL },
    { "initWithLong:", "Instant", NULL, 0x1, NULL, NULL },
    { "initWithId:", "Instant", NULL, 0x1, NULL, NULL },
    { "toInstant", NULL, "Lorg.joda.time.Instant;", 0x1, NULL, NULL },
    { "withMillisWithLong:", "withMillis", "Lorg.joda.time.Instant;", 0x1, NULL, NULL },
    { "withDurationAddedWithLong:withInt:", "withDurationAdded", "Lorg.joda.time.Instant;", 0x1, NULL, NULL },
    { "withDurationAddedWithOrgJodaTimeReadableDuration:withInt:", "withDurationAdded", "Lorg.joda.time.Instant;", 0x1, NULL, NULL },
    { "plusWithLong:", "plus", "Lorg.joda.time.Instant;", 0x1, NULL, NULL },
    { "plusWithOrgJodaTimeReadableDuration:", "plus", "Lorg.joda.time.Instant;", 0x1, NULL, NULL },
    { "minusWithLong:", "minus", "Lorg.joda.time.Instant;", 0x1, NULL, NULL },
    { "minusWithOrgJodaTimeReadableDuration:", "minus", "Lorg.joda.time.Instant;", 0x1, NULL, NULL },
    { "getMillis", NULL, "J", 0x1, NULL, NULL },
    { "getChronology", NULL, "Lorg.joda.time.Chronology;", 0x1, NULL, NULL },
    { "toDateTime", NULL, "Lorg.joda.time.DateTime;", 0x1, NULL, NULL },
    { "toDateTimeISO", NULL, "Lorg.joda.time.DateTime;", 0x1, NULL, NULL },
    { "toMutableDateTime", NULL, "Lorg.joda.time.MutableDateTime;", 0x1, NULL, NULL },
    { "toMutableDateTimeISO", NULL, "Lorg.joda.time.MutableDateTime;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "serialVersionUID", 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgJodaTimeInstant_serialVersionUID },
    { "iMillis_", NULL, 0x12, "J", NULL, NULL,  },
  };
  static const J2ObjcClassInfo _OrgJodaTimeInstant = { 2, "Instant", "org.joda.time", NULL, 0x11, 20, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgJodaTimeInstant;
}

@end

OrgJodaTimeInstant *OrgJodaTimeInstant_now() {
  OrgJodaTimeInstant_initialize();
  return [new_OrgJodaTimeInstant_init() autorelease];
}

OrgJodaTimeInstant *OrgJodaTimeInstant_parseWithNSString_(NSString *str) {
  OrgJodaTimeInstant_initialize();
  return OrgJodaTimeInstant_parseWithNSString_withOrgJodaTimeFormatDateTimeFormatter_(str, OrgJodaTimeFormatISODateTimeFormat_dateTimeParser());
}

OrgJodaTimeInstant *OrgJodaTimeInstant_parseWithNSString_withOrgJodaTimeFormatDateTimeFormatter_(NSString *str, OrgJodaTimeFormatDateTimeFormatter *formatter) {
  OrgJodaTimeInstant_initialize();
  return [((OrgJodaTimeDateTime *) nil_chk([((OrgJodaTimeFormatDateTimeFormatter *) nil_chk(formatter)) parseDateTimeWithNSString:str])) toInstant];
}

void OrgJodaTimeInstant_init(OrgJodaTimeInstant *self) {
  OrgJodaTimeBaseAbstractInstant_init(self);
  self->iMillis_ = OrgJodaTimeDateTimeUtils_currentTimeMillis();
}

OrgJodaTimeInstant *new_OrgJodaTimeInstant_init() {
  OrgJodaTimeInstant *self = [OrgJodaTimeInstant alloc];
  OrgJodaTimeInstant_init(self);
  return self;
}

void OrgJodaTimeInstant_initWithLong_(OrgJodaTimeInstant *self, jlong instant) {
  OrgJodaTimeBaseAbstractInstant_init(self);
  self->iMillis_ = instant;
}

OrgJodaTimeInstant *new_OrgJodaTimeInstant_initWithLong_(jlong instant) {
  OrgJodaTimeInstant *self = [OrgJodaTimeInstant alloc];
  OrgJodaTimeInstant_initWithLong_(self, instant);
  return self;
}

void OrgJodaTimeInstant_initWithId_(OrgJodaTimeInstant *self, id instant) {
  OrgJodaTimeBaseAbstractInstant_init(self);
  id<OrgJodaTimeConvertInstantConverter> converter = [((OrgJodaTimeConvertConverterManager *) nil_chk(OrgJodaTimeConvertConverterManager_getInstance())) getInstantConverterWithId:instant];
  self->iMillis_ = [((id<OrgJodaTimeConvertInstantConverter>) nil_chk(converter)) getInstantMillisWithId:instant withOrgJodaTimeChronology:OrgJodaTimeChronoISOChronology_getInstanceUTC()];
}

OrgJodaTimeInstant *new_OrgJodaTimeInstant_initWithId_(id instant) {
  OrgJodaTimeInstant *self = [OrgJodaTimeInstant alloc];
  OrgJodaTimeInstant_initWithId_(self, instant);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaTimeInstant)

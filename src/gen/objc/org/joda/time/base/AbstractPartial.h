//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/Laundryman/Libraries/joda-time/src/main/java/org/joda/time/base/AbstractPartial.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgJodaTimeBaseAbstractPartial")
#ifdef RESTRICT_OrgJodaTimeBaseAbstractPartial
#define INCLUDE_ALL_OrgJodaTimeBaseAbstractPartial 0
#else
#define INCLUDE_ALL_OrgJodaTimeBaseAbstractPartial 1
#endif
#undef RESTRICT_OrgJodaTimeBaseAbstractPartial

#if !defined (OrgJodaTimeBaseAbstractPartial_) && (INCLUDE_ALL_OrgJodaTimeBaseAbstractPartial || defined(INCLUDE_OrgJodaTimeBaseAbstractPartial))
#define OrgJodaTimeBaseAbstractPartial_

#define RESTRICT_OrgJodaTimeReadablePartial 1
#define INCLUDE_OrgJodaTimeReadablePartial 1
#include "org/joda/time/ReadablePartial.h"

#define RESTRICT_JavaLangComparable 1
#define INCLUDE_JavaLangComparable 1
#include "java/lang/Comparable.h"

@class IOSIntArray;
@class IOSObjectArray;
@class OrgJodaTimeChronology;
@class OrgJodaTimeDateTime;
@class OrgJodaTimeDateTimeField;
@class OrgJodaTimeDateTimeFieldType;
@class OrgJodaTimeDurationFieldType;
@class OrgJodaTimeFormatDateTimeFormatter;
@protocol OrgJodaTimeReadableInstant;

@interface OrgJodaTimeBaseAbstractPartial : NSObject < OrgJodaTimeReadablePartial, JavaLangComparable >

#pragma mark Public

- (jint)compareToWithId:(id<OrgJodaTimeReadablePartial>)other;

- (jboolean)isEqual:(id)partial;

- (jint)getWithOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)type;

- (OrgJodaTimeDateTimeField *)getFieldWithInt:(jint)index;

- (IOSObjectArray *)getFields;

- (OrgJodaTimeDateTimeFieldType *)getFieldTypeWithInt:(jint)index;

- (IOSObjectArray *)getFieldTypes;

- (IOSIntArray *)getValues;

- (NSUInteger)hash;

- (jint)indexOfWithOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)type;

- (jboolean)isAfterWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)partial;

- (jboolean)isBeforeWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)partial;

- (jboolean)isEqualWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)partial;

- (jboolean)isSupportedWithOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)type;

- (OrgJodaTimeDateTime *)toDateTimeWithOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)baseInstant;

- (NSString *)toStringWithOrgJodaTimeFormatDateTimeFormatter:(OrgJodaTimeFormatDateTimeFormatter *)formatter;

#pragma mark Protected

- (instancetype)init;

- (OrgJodaTimeDateTimeField *)getFieldWithInt:(jint)index
                    withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono;

- (jint)indexOfWithOrgJodaTimeDurationFieldType:(OrgJodaTimeDurationFieldType *)type;

- (jint)indexOfSupportedWithOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)type;

- (jint)indexOfSupportedWithOrgJodaTimeDurationFieldType:(OrgJodaTimeDurationFieldType *)type;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeBaseAbstractPartial)

FOUNDATION_EXPORT void OrgJodaTimeBaseAbstractPartial_init(OrgJodaTimeBaseAbstractPartial *self);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeBaseAbstractPartial)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgJodaTimeBaseAbstractPartial")

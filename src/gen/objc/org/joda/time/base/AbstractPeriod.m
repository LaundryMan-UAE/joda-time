//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Mike/Projects/joda-time/src/main/java/org/joda/time/base/AbstractPeriod.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/joda/convert/ToString.h"
#include "org/joda/time/DurationFieldType.h"
#include "org/joda/time/MutablePeriod.h"
#include "org/joda/time/Period.h"
#include "org/joda/time/PeriodType.h"
#include "org/joda/time/ReadablePeriod.h"
#include "org/joda/time/base/AbstractPeriod.h"
#include "org/joda/time/format/ISOPeriodFormat.h"
#include "org/joda/time/format/PeriodFormatter.h"

#pragma clang diagnostic ignored "-Wprotocol"

@implementation OrgJodaTimeBaseAbstractPeriod

- (instancetype)init {
  return [super init];
}

- (jint)size {
  return [((OrgJodaTimePeriodType *) nil_chk([self getPeriodType])) size];
}

- (OrgJodaTimeDurationFieldType *)getFieldTypeWithInt:(jint)index {
  return [((OrgJodaTimePeriodType *) nil_chk([self getPeriodType])) getFieldTypeWithInt:index];
}

- (IOSObjectArray *)getFieldTypes {
  IOSObjectArray *result = [IOSObjectArray arrayWithLength:[self size] type:OrgJodaTimeDurationFieldType_class_()];
  for (jint i = 0; i < result->size_; i++) {
    IOSObjectArray_Set(result, i, [self getFieldTypeWithInt:i]);
  }
  return result;
}

- (IOSIntArray *)getValues {
  IOSIntArray *result = [IOSIntArray arrayWithLength:[self size]];
  for (jint i = 0; i < result->size_; i++) {
    *IOSIntArray_GetRef(result, i) = [self getValueWithInt:i];
  }
  return result;
}

- (jint)getWithOrgJodaTimeDurationFieldType:(OrgJodaTimeDurationFieldType *)type {
  jint index = [self indexOfWithOrgJodaTimeDurationFieldType:type];
  if (index == -1) {
    return 0;
  }
  return [self getValueWithInt:index];
}

- (jboolean)isSupportedWithOrgJodaTimeDurationFieldType:(OrgJodaTimeDurationFieldType *)type {
  return [((OrgJodaTimePeriodType *) nil_chk([self getPeriodType])) isSupportedWithOrgJodaTimeDurationFieldType:type];
}

- (jint)indexOfWithOrgJodaTimeDurationFieldType:(OrgJodaTimeDurationFieldType *)type {
  return [((OrgJodaTimePeriodType *) nil_chk([self getPeriodType])) indexOfWithOrgJodaTimeDurationFieldType:type];
}

- (OrgJodaTimePeriod *)toPeriod {
  return [[[OrgJodaTimePeriod alloc] initWithId:self] autorelease];
}

- (OrgJodaTimeMutablePeriod *)toMutablePeriod {
  return [[[OrgJodaTimeMutablePeriod alloc] initWithId:self] autorelease];
}

- (jboolean)isEqual:(id)period {
  if (self == period) {
    return YES;
  }
  if ([OrgJodaTimeReadablePeriod_class_() isInstance:period] == NO) {
    return NO;
  }
  id<OrgJodaTimeReadablePeriod> other = (id<OrgJodaTimeReadablePeriod>) check_protocol_cast(period, @protocol(OrgJodaTimeReadablePeriod));
  if ([self size] != [((id<OrgJodaTimeReadablePeriod>) nil_chk(other)) size]) {
    return NO;
  }
  for (jint i = 0, isize = [self size]; i < isize; i++) {
    if ([self getValueWithInt:i] != [other getValueWithInt:i] || [self getFieldTypeWithInt:i] != [other getFieldTypeWithInt:i]) {
      return NO;
    }
  }
  return YES;
}

- (NSUInteger)hash {
  jint total = 17;
  for (jint i = 0, isize = [self size]; i < isize; i++) {
    total = 27 * total + [self getValueWithInt:i];
    total = 27 * total + ((jint) [((OrgJodaTimeDurationFieldType *) nil_chk([self getFieldTypeWithInt:i])) hash]);
  }
  return total;
}

- (NSString *)description {
  return [((OrgJodaTimeFormatPeriodFormatter *) nil_chk(OrgJodaTimeFormatISOPeriodFormat_standard())) printWithOrgJodaTimeReadablePeriod:self];
}

- (NSString *)toStringWithOrgJodaTimeFormatPeriodFormatter:(OrgJodaTimeFormatPeriodFormatter *)formatter {
  if (formatter == nil) {
    return [self description];
  }
  return [((OrgJodaTimeFormatPeriodFormatter *) nil_chk(formatter)) printWithOrgJodaTimeReadablePeriod:self];
}

+ (IOSObjectArray *)__annotations_description {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[[OrgJodaConvertToString alloc] init] autorelease] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "AbstractPeriod", NULL, 0x4, NULL },
    { "size", NULL, "I", 0x1, NULL },
    { "getFieldTypeWithInt:", "getFieldType", "Lorg.joda.time.DurationFieldType;", 0x1, NULL },
    { "getFieldTypes", NULL, "[Lorg.joda.time.DurationFieldType;", 0x1, NULL },
    { "getValues", NULL, "[I", 0x1, NULL },
    { "getWithOrgJodaTimeDurationFieldType:", "get", "I", 0x1, NULL },
    { "isSupportedWithOrgJodaTimeDurationFieldType:", "isSupported", "Z", 0x1, NULL },
    { "indexOfWithOrgJodaTimeDurationFieldType:", "indexOf", "I", 0x1, NULL },
    { "toPeriod", NULL, "Lorg.joda.time.Period;", 0x1, NULL },
    { "toMutablePeriod", NULL, "Lorg.joda.time.MutablePeriod;", 0x1, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL },
    { "hash", "hashCode", "I", 0x1, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL },
    { "toStringWithOrgJodaTimeFormatPeriodFormatter:", "toString", "Ljava.lang.String;", 0x1, NULL },
  };
  static const J2ObjcClassInfo _OrgJodaTimeBaseAbstractPeriod = { 1, "AbstractPeriod", "org.joda.time.base", NULL, 0x401, 14, methods, 0, NULL, 0, NULL};
  return &_OrgJodaTimeBaseAbstractPeriod;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaTimeBaseAbstractPeriod)

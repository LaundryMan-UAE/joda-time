//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/HambroPerks/hambroperks_org/joda-time/src/main/java/org/joda/time/chrono/StrictChronology.java
//

#ifndef _OrgJodaTimeChronoStrictChronology_H_
#define _OrgJodaTimeChronoStrictChronology_H_

#include "J2ObjC_header.h"
#include "org/joda/time/chrono/AssembledChronology.h"

@class OrgJodaTimeChronology;
@class OrgJodaTimeDateTimeZone;

/**
 @brief Wraps another Chronology, ensuring all the fields are strict.
 <p> StrictChronology is thread-safe and immutable.
 @author Brian S O'Neill
 @since 1.0
 */
@interface OrgJodaTimeChronoStrictChronology : OrgJodaTimeChronoAssembledChronology

#pragma mark Public

/**
 @brief A strict chronology is only equal to a strict chronology with the same base chronology.
 @param obj the object to compare to
 @return true if equal
 @since 1.4
 */
- (jboolean)isEqual:(id)obj;

/**
 @brief Create a StrictChronology for any chronology.
 @param base the chronology to wrap
 @throws IllegalArgumentException if chronology is null
 */
+ (OrgJodaTimeChronoStrictChronology *)getInstanceWithOrgJodaTimeChronology:(OrgJodaTimeChronology *)base;

/**
 @brief A suitable hashcode for the chronology.
 @return the hashcode
 @since 1.4
 */
- (NSUInteger)hash;

/**
 @brief A debugging string for the chronology.
 @return the debugging string
 */
- (NSString *)description;

- (OrgJodaTimeChronology *)withUTC;

- (OrgJodaTimeChronology *)withZoneWithOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)zone;

#pragma mark Protected

- (void)assembleWithOrgJodaTimeChronoAssembledChronology_Fields:(OrgJodaTimeChronoAssembledChronology_Fields *)fields;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeChronoStrictChronology)

FOUNDATION_EXPORT OrgJodaTimeChronoStrictChronology *OrgJodaTimeChronoStrictChronology_getInstanceWithOrgJodaTimeChronology_(OrgJodaTimeChronology *base);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeChronoStrictChronology)

#endif // _OrgJodaTimeChronoStrictChronology_H_

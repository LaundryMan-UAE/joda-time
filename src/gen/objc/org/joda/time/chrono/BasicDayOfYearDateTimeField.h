//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/HambroPerks/hambroperks_org/joda-time/src/main/java/org/joda/time/chrono/BasicDayOfYearDateTimeField.java
//

#ifndef _OrgJodaTimeChronoBasicDayOfYearDateTimeField_H_
#define _OrgJodaTimeChronoBasicDayOfYearDateTimeField_H_

#include "J2ObjC_header.h"
#include "org/joda/time/field/PreciseDurationDateTimeField.h"

@class IOSIntArray;
@class OrgJodaTimeChronoBasicChronology;
@class OrgJodaTimeDurationField;
@protocol OrgJodaTimeReadablePartial;

/*!
 @brief Provides time calculations for the day of the year component of time.
 @author Guy Allard
 @author Stephen Colebourne
 @author Brian S O'Neill
 @since 1.1, refactored from GJDayOfYearDateTimeField
 */
@interface OrgJodaTimeChronoBasicDayOfYearDateTimeField : OrgJodaTimeFieldPreciseDurationDateTimeField

#pragma mark Public

/*!
 @brief Get the day of the year component of the specified time instant.
 @param instant  the time instant in millis to query.
 @return the day of the year extracted from the input.
 */
- (jint)getWithLong:(jlong)instant;

- (jint)getMaximumValue;

- (jint)getMaximumValueWithLong:(jlong)instant;

- (jint)getMaximumValueWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)partial;

- (jint)getMaximumValueWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)partial
                                         withIntArray:(IOSIntArray *)values;

- (jint)getMinimumValue;

- (OrgJodaTimeDurationField *)getRangeDurationField;

- (jboolean)isLeapWithLong:(jlong)instant;

#pragma mark Protected

- (jint)getMaximumValueForSetWithLong:(jlong)instant
                              withInt:(jint)value;

#pragma mark Package-Private

/*!
 @brief Restricted constructor
 */
- (instancetype)initWithOrgJodaTimeChronoBasicChronology:(OrgJodaTimeChronoBasicChronology *)chronology
                            withOrgJodaTimeDurationField:(OrgJodaTimeDurationField *)days;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeChronoBasicDayOfYearDateTimeField)

FOUNDATION_EXPORT void OrgJodaTimeChronoBasicDayOfYearDateTimeField_initWithOrgJodaTimeChronoBasicChronology_withOrgJodaTimeDurationField_(OrgJodaTimeChronoBasicDayOfYearDateTimeField *self, OrgJodaTimeChronoBasicChronology *chronology, OrgJodaTimeDurationField *days);

FOUNDATION_EXPORT OrgJodaTimeChronoBasicDayOfYearDateTimeField *new_OrgJodaTimeChronoBasicDayOfYearDateTimeField_initWithOrgJodaTimeChronoBasicChronology_withOrgJodaTimeDurationField_(OrgJodaTimeChronoBasicChronology *chronology, OrgJodaTimeDurationField *days) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeChronoBasicDayOfYearDateTimeField)

#endif // _OrgJodaTimeChronoBasicDayOfYearDateTimeField_H_

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/HambroPerks/hambroperks_org/joda-time/src/main/java/org/joda/time/chrono/GJYearOfEraDateTimeField.java
//

#ifndef _OrgJodaTimeChronoGJYearOfEraDateTimeField_H_
#define _OrgJodaTimeChronoGJYearOfEraDateTimeField_H_

#include "J2ObjC_header.h"
#include "org/joda/time/field/DecoratedDateTimeField.h"

@class IOSIntArray;
@class OrgJodaTimeChronoBasicChronology;
@class OrgJodaTimeDateTimeField;
@class OrgJodaTimeDurationField;
@protocol OrgJodaTimeReadablePartial;

/*!
 @brief Provides time calculations for the year of era component of time.
 @author Brian S O'Neill
 @since 1.0
 */
@interface OrgJodaTimeChronoGJYearOfEraDateTimeField : OrgJodaTimeFieldDecoratedDateTimeField

#pragma mark Public

- (jlong)addWithLong:(jlong)instant
             withInt:(jint)years;

- (jlong)addWithLong:(jlong)instant
            withLong:(jlong)years;

- (jlong)addWrapFieldWithLong:(jlong)instant
                      withInt:(jint)years;

- (IOSIntArray *)addWrapFieldWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant
                                                    withInt:(jint)fieldIndex
                                               withIntArray:(IOSIntArray *)values
                                                    withInt:(jint)years;

- (jint)getWithLong:(jlong)instant;

- (jint)getDifferenceWithLong:(jlong)minuendInstant
                     withLong:(jlong)subtrahendInstant;

- (jlong)getDifferenceAsLongWithLong:(jlong)minuendInstant
                            withLong:(jlong)subtrahendInstant;

- (jint)getMaximumValue;

- (jint)getMinimumValue;

- (OrgJodaTimeDurationField *)getRangeDurationField;

- (jlong)remainderWithLong:(jlong)instant;

- (jlong)roundCeilingWithLong:(jlong)instant;

- (jlong)roundFloorWithLong:(jlong)instant;

/*!
 @brief Set the year component of the specified time instant.
 @param instant  the time instant in millis to update.
 @param year  the year (0,292278994) to update the time to.
 @return the updated time instant.
 @throws IllegalArgumentException  if year is invalid.
 */
- (jlong)setWithLong:(jlong)instant
             withInt:(jint)year;

#pragma mark Package-Private

/*!
 @brief Restricted constructor.
 */
- (instancetype)initWithOrgJodaTimeDateTimeField:(OrgJodaTimeDateTimeField *)yearField
            withOrgJodaTimeChronoBasicChronology:(OrgJodaTimeChronoBasicChronology *)chronology;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeChronoGJYearOfEraDateTimeField)

FOUNDATION_EXPORT void OrgJodaTimeChronoGJYearOfEraDateTimeField_initWithOrgJodaTimeDateTimeField_withOrgJodaTimeChronoBasicChronology_(OrgJodaTimeChronoGJYearOfEraDateTimeField *self, OrgJodaTimeDateTimeField *yearField, OrgJodaTimeChronoBasicChronology *chronology);

FOUNDATION_EXPORT OrgJodaTimeChronoGJYearOfEraDateTimeField *new_OrgJodaTimeChronoGJYearOfEraDateTimeField_initWithOrgJodaTimeDateTimeField_withOrgJodaTimeChronoBasicChronology_(OrgJodaTimeDateTimeField *yearField, OrgJodaTimeChronoBasicChronology *chronology) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeChronoGJYearOfEraDateTimeField)

#endif // _OrgJodaTimeChronoGJYearOfEraDateTimeField_H_

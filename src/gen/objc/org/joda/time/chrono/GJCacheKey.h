//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/andrefonseca/Documents/PodsFolders/Joda-Time/src/main/java/org/joda/time/chrono/GJCacheKey.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgJodaTimeChronoGJCacheKey_INCLUDE_ALL")
#ifdef OrgJodaTimeChronoGJCacheKey_RESTRICT
#define OrgJodaTimeChronoGJCacheKey_INCLUDE_ALL 0
#else
#define OrgJodaTimeChronoGJCacheKey_INCLUDE_ALL 1
#endif
#undef OrgJodaTimeChronoGJCacheKey_RESTRICT

#if !defined (OrgJodaTimeChronoGJCacheKey_) && (OrgJodaTimeChronoGJCacheKey_INCLUDE_ALL || defined(OrgJodaTimeChronoGJCacheKey_INCLUDE))
#define OrgJodaTimeChronoGJCacheKey_

@class OrgJodaTimeDateTimeZone;
@class OrgJodaTimeInstant;

/*!
 @brief For internal usage in GJChronology only.
 */
@interface OrgJodaTimeChronoGJCacheKey : NSObject

#pragma mark Public

- (jboolean)isEqual:(id)obj;

- (NSUInteger)hash;

#pragma mark Package-Private

- (instancetype)initWithOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)zone
                         withOrgJodaTimeInstant:(OrgJodaTimeInstant *)cutoverInstant
                                        withInt:(jint)minDaysInFirstWeek;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeChronoGJCacheKey)

FOUNDATION_EXPORT void OrgJodaTimeChronoGJCacheKey_initWithOrgJodaTimeDateTimeZone_withOrgJodaTimeInstant_withInt_(OrgJodaTimeChronoGJCacheKey *self, OrgJodaTimeDateTimeZone *zone, OrgJodaTimeInstant *cutoverInstant, jint minDaysInFirstWeek);

FOUNDATION_EXPORT OrgJodaTimeChronoGJCacheKey *new_OrgJodaTimeChronoGJCacheKey_initWithOrgJodaTimeDateTimeZone_withOrgJodaTimeInstant_withInt_(OrgJodaTimeDateTimeZone *zone, OrgJodaTimeInstant *cutoverInstant, jint minDaysInFirstWeek) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeChronoGJCacheKey)

#endif

#pragma pop_macro("OrgJodaTimeChronoGJCacheKey_INCLUDE_ALL")

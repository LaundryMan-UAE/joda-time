//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/Laundryman/Libraries/joda-time/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgJodaTimeChronoBasicMonthOfYearDateTimeField")
#ifdef RESTRICT_OrgJodaTimeChronoBasicMonthOfYearDateTimeField
#define INCLUDE_ALL_OrgJodaTimeChronoBasicMonthOfYearDateTimeField 0
#else
#define INCLUDE_ALL_OrgJodaTimeChronoBasicMonthOfYearDateTimeField 1
#endif
#undef RESTRICT_OrgJodaTimeChronoBasicMonthOfYearDateTimeField

#if !defined (OrgJodaTimeChronoBasicMonthOfYearDateTimeField_) && (INCLUDE_ALL_OrgJodaTimeChronoBasicMonthOfYearDateTimeField || defined(INCLUDE_OrgJodaTimeChronoBasicMonthOfYearDateTimeField))
#define OrgJodaTimeChronoBasicMonthOfYearDateTimeField_

#define RESTRICT_OrgJodaTimeFieldImpreciseDateTimeField 1
#define INCLUDE_OrgJodaTimeFieldImpreciseDateTimeField 1
#include "org/joda/time/field/ImpreciseDateTimeField.h"

@class IOSIntArray;
@class OrgJodaTimeChronoBasicChronology;
@class OrgJodaTimeDateTimeFieldType;
@class OrgJodaTimeDurationField;
@protocol OrgJodaTimeReadablePartial;

@interface OrgJodaTimeChronoBasicMonthOfYearDateTimeField : OrgJodaTimeFieldImpreciseDateTimeField

#pragma mark Public

- (jlong)addWithLong:(jlong)instant
             withInt:(jint)months;

- (jlong)addWithLong:(jlong)instant
            withLong:(jlong)months;

- (IOSIntArray *)addWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)partial
                                           withInt:(jint)fieldIndex
                                      withIntArray:(IOSIntArray *)values
                                           withInt:(jint)valueToAdd;

- (jlong)addWrapFieldWithLong:(jlong)instant
                      withInt:(jint)months;

- (jint)getWithLong:(jlong)instant;

- (jlong)getDifferenceAsLongWithLong:(jlong)minuendInstant
                            withLong:(jlong)subtrahendInstant;

- (jint)getLeapAmountWithLong:(jlong)instant;

- (OrgJodaTimeDurationField *)getLeapDurationField;

- (jint)getMaximumValue;

- (jint)getMinimumValue;

- (OrgJodaTimeDurationField *)getRangeDurationField;

- (jboolean)isLeapWithLong:(jlong)instant;

- (jboolean)isLenient;

- (jlong)remainderWithLong:(jlong)instant;

- (jlong)roundFloorWithLong:(jlong)instant;

- (jlong)setWithLong:(jlong)instant
             withInt:(jint)month;

#pragma mark Package-Private

- (instancetype)initPackagePrivateWithOrgJodaTimeChronoBasicChronology:(OrgJodaTimeChronoBasicChronology *)chronology
                                                               withInt:(jint)leapMonth;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)arg0
                                            withLong:(jlong)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeChronoBasicMonthOfYearDateTimeField)

FOUNDATION_EXPORT void OrgJodaTimeChronoBasicMonthOfYearDateTimeField_initPackagePrivateWithOrgJodaTimeChronoBasicChronology_withInt_(OrgJodaTimeChronoBasicMonthOfYearDateTimeField *self, OrgJodaTimeChronoBasicChronology *chronology, jint leapMonth);

FOUNDATION_EXPORT OrgJodaTimeChronoBasicMonthOfYearDateTimeField *new_OrgJodaTimeChronoBasicMonthOfYearDateTimeField_initPackagePrivateWithOrgJodaTimeChronoBasicChronology_withInt_(OrgJodaTimeChronoBasicChronology *chronology, jint leapMonth) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeChronoBasicMonthOfYearDateTimeField *create_OrgJodaTimeChronoBasicMonthOfYearDateTimeField_initPackagePrivateWithOrgJodaTimeChronoBasicChronology_withInt_(OrgJodaTimeChronoBasicChronology *chronology, jint leapMonth);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeChronoBasicMonthOfYearDateTimeField)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgJodaTimeChronoBasicMonthOfYearDateTimeField")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Mike/Projects/joda-time/src/main/java/org/joda/time/chrono/BasicGJChronology.java
//

#ifndef _OrgJodaTimeChronoBasicGJChronology_H_
#define _OrgJodaTimeChronoBasicGJChronology_H_

@class IOSIntArray;
@class IOSLongArray;
@class OrgJodaTimeChronology;

#include "J2ObjC_header.h"
#include "org/joda/time/chrono/BasicChronology.h"

#define OrgJodaTimeChronoBasicGJChronology_FEB_29 5097600000LL
#define OrgJodaTimeChronoBasicGJChronology_serialVersionUID 538276888268LL

/**
 @brief Abstract Chronology for implementing chronologies based on Gregorian/Julian formulae.
 Most of the utility methods required by subclasses are package-private, reflecting the intention that they be defined in the same package. <p> BasicGJChronology is thread-safe and immutable, and all subclasses must be as well.
 @author Stephen Colebourne
 @author Brian S O'Neill
 @author Guy Allard
 @since 1.2, refactored from CommonGJChronology
 */
@interface OrgJodaTimeChronoBasicGJChronology : OrgJodaTimeChronoBasicChronology {
}

/**
 @brief Constructor.
 */
- (instancetype)initWithOrgJodaTimeChronology:(OrgJodaTimeChronology *)base
                                       withId:(id)param
                                      withInt:(jint)minDaysInFirstWeek;

- (jboolean)isLeapDayWithLong:(jlong)instant;

- (jint)getMonthOfYearWithLong:(jlong)millis
                       withInt:(jint)year;

/**
 @brief Gets the number of days in the specified month and year.
 @param year the year
 @param month the month
 @return the number of days
 */
- (jint)getDaysInYearMonthWithInt:(jint)year
                          withInt:(jint)month;

- (jint)getDaysInMonthMaxWithInt:(jint)month;

- (jint)getDaysInMonthMaxForSetWithLong:(jlong)instant
                                withInt:(jint)value;

- (jlong)getTotalMillisByYearMonthWithInt:(jint)year
                                  withInt:(jint)month;

- (jlong)getYearDifferenceWithLong:(jlong)minuendInstant
                          withLong:(jlong)subtrahendInstant;

- (jlong)setYearWithLong:(jlong)instant
                 withInt:(jint)year;

@end

FOUNDATION_EXPORT BOOL OrgJodaTimeChronoBasicGJChronology_initialized;
J2OBJC_STATIC_INIT(OrgJodaTimeChronoBasicGJChronology)

CF_EXTERN_C_BEGIN

J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeChronoBasicGJChronology, serialVersionUID, jlong)

FOUNDATION_EXPORT IOSIntArray *OrgJodaTimeChronoBasicGJChronology_MIN_DAYS_PER_MONTH_ARRAY_;
J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeChronoBasicGJChronology, MIN_DAYS_PER_MONTH_ARRAY_, IOSIntArray *)

FOUNDATION_EXPORT IOSIntArray *OrgJodaTimeChronoBasicGJChronology_MAX_DAYS_PER_MONTH_ARRAY_;
J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeChronoBasicGJChronology, MAX_DAYS_PER_MONTH_ARRAY_, IOSIntArray *)

FOUNDATION_EXPORT IOSLongArray *OrgJodaTimeChronoBasicGJChronology_MIN_TOTAL_MILLIS_BY_MONTH_ARRAY_;
J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeChronoBasicGJChronology, MIN_TOTAL_MILLIS_BY_MONTH_ARRAY_, IOSLongArray *)

FOUNDATION_EXPORT IOSLongArray *OrgJodaTimeChronoBasicGJChronology_MAX_TOTAL_MILLIS_BY_MONTH_ARRAY_;
J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeChronoBasicGJChronology, MAX_TOTAL_MILLIS_BY_MONTH_ARRAY_, IOSLongArray *)

J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeChronoBasicGJChronology, FEB_29, jlong)
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeChronoBasicGJChronology)

#endif // _OrgJodaTimeChronoBasicGJChronology_H_

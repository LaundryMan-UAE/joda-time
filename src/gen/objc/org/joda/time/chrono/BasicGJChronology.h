//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/Laundryman/Libraries/joda-time/src/main/java/org/joda/time/chrono/BasicGJChronology.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgJodaTimeChronoBasicGJChronology")
#ifdef RESTRICT_OrgJodaTimeChronoBasicGJChronology
#define INCLUDE_ALL_OrgJodaTimeChronoBasicGJChronology 0
#else
#define INCLUDE_ALL_OrgJodaTimeChronoBasicGJChronology 1
#endif
#undef RESTRICT_OrgJodaTimeChronoBasicGJChronology

#if !defined (OrgJodaTimeChronoBasicGJChronology_) && (INCLUDE_ALL_OrgJodaTimeChronoBasicGJChronology || defined(INCLUDE_OrgJodaTimeChronoBasicGJChronology))
#define OrgJodaTimeChronoBasicGJChronology_

#define RESTRICT_OrgJodaTimeChronoBasicChronology 1
#define INCLUDE_OrgJodaTimeChronoBasicChronology 1
#include "org/joda/time/chrono/BasicChronology.h"

@class OrgJodaTimeChronology;

@interface OrgJodaTimeChronoBasicGJChronology : OrgJodaTimeChronoBasicChronology

#pragma mark Package-Private

- (instancetype)initPackagePrivateWithOrgJodaTimeChronology:(OrgJodaTimeChronology *)base
                                                     withId:(id)param
                                                    withInt:(jint)minDaysInFirstWeek;

- (jint)getDaysInMonthMaxWithInt:(jint)month;

- (jint)getDaysInMonthMaxForSetWithLong:(jlong)instant
                                withInt:(jint)value;

- (jint)getDaysInYearMonthWithInt:(jint)year
                          withInt:(jint)month;

- (jint)getMonthOfYearWithLong:(jlong)millis
                       withInt:(jint)year;

- (jlong)getTotalMillisByYearMonthWithInt:(jint)year
                                  withInt:(jint)month;

- (jlong)getYearDifferenceWithLong:(jlong)minuendInstant
                          withLong:(jlong)subtrahendInstant;

- (jboolean)isLeapDayWithLong:(jlong)instant;

- (jlong)setYearWithLong:(jlong)instant
                 withInt:(jint)year;

@end

J2OBJC_STATIC_INIT(OrgJodaTimeChronoBasicGJChronology)

FOUNDATION_EXPORT void OrgJodaTimeChronoBasicGJChronology_initPackagePrivateWithOrgJodaTimeChronology_withId_withInt_(OrgJodaTimeChronoBasicGJChronology *self, OrgJodaTimeChronology *base, id param, jint minDaysInFirstWeek);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeChronoBasicGJChronology)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgJodaTimeChronoBasicGJChronology")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/jenkins/laundrapp/SDKs/joda-time/src/main/java/org/joda/time/chrono/EthiopicChronology.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgJodaTimeChronoEthiopicChronology")
#ifdef RESTRICT_OrgJodaTimeChronoEthiopicChronology
#define INCLUDE_ALL_OrgJodaTimeChronoEthiopicChronology 0
#else
#define INCLUDE_ALL_OrgJodaTimeChronoEthiopicChronology 1
#endif
#undef RESTRICT_OrgJodaTimeChronoEthiopicChronology

#if !defined (OrgJodaTimeChronoEthiopicChronology_) && (INCLUDE_ALL_OrgJodaTimeChronoEthiopicChronology || defined(INCLUDE_OrgJodaTimeChronoEthiopicChronology))
#define OrgJodaTimeChronoEthiopicChronology_

#define RESTRICT_OrgJodaTimeChronoBasicFixedMonthChronology 1
#define INCLUDE_OrgJodaTimeChronoBasicFixedMonthChronology 1
#include "org/joda/time/chrono/BasicFixedMonthChronology.h"

@class OrgJodaTimeChronoAssembledChronology_Fields;
@class OrgJodaTimeChronology;
@class OrgJodaTimeDateTimeZone;

@interface OrgJodaTimeChronoEthiopicChronology : OrgJodaTimeChronoBasicFixedMonthChronology

#pragma mark Public

+ (OrgJodaTimeChronoEthiopicChronology *)getInstance;

+ (OrgJodaTimeChronoEthiopicChronology *)getInstanceWithOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)zone;

+ (OrgJodaTimeChronoEthiopicChronology *)getInstanceWithOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)zone
                                                                        withInt:(jint)minDaysInFirstWeek;

+ (OrgJodaTimeChronoEthiopicChronology *)getInstanceUTC;

- (OrgJodaTimeChronology *)withUTC;

- (OrgJodaTimeChronology *)withZoneWithOrgJodaTimeDateTimeZone:(OrgJodaTimeDateTimeZone *)zone;

#pragma mark Protected

- (void)assembleWithOrgJodaTimeChronoAssembledChronology_Fields:(OrgJodaTimeChronoAssembledChronology_Fields *)fields;

#pragma mark Package-Private

- (instancetype)initWithOrgJodaTimeChronology:(OrgJodaTimeChronology *)base
                                       withId:(id)param
                                      withInt:(jint)minDaysInFirstWeek;

- (jlong)calculateFirstDayOfYearMillisWithInt:(jint)year;

- (jlong)getApproxMillisAtEpochDividedByTwo;

- (jint)getMaxYear;

- (jint)getMinYear;

- (jboolean)isLeapDayWithLong:(jlong)instant;

@end

J2OBJC_STATIC_INIT(OrgJodaTimeChronoEthiopicChronology)

inline jint OrgJodaTimeChronoEthiopicChronology_get_EE();
#define OrgJodaTimeChronoEthiopicChronology_EE 1
J2OBJC_STATIC_FIELD_CONSTANT(OrgJodaTimeChronoEthiopicChronology, EE, jint)

FOUNDATION_EXPORT OrgJodaTimeChronoEthiopicChronology *OrgJodaTimeChronoEthiopicChronology_getInstanceUTC();

FOUNDATION_EXPORT OrgJodaTimeChronoEthiopicChronology *OrgJodaTimeChronoEthiopicChronology_getInstance();

FOUNDATION_EXPORT OrgJodaTimeChronoEthiopicChronology *OrgJodaTimeChronoEthiopicChronology_getInstanceWithOrgJodaTimeDateTimeZone_(OrgJodaTimeDateTimeZone *zone);

FOUNDATION_EXPORT OrgJodaTimeChronoEthiopicChronology *OrgJodaTimeChronoEthiopicChronology_getInstanceWithOrgJodaTimeDateTimeZone_withInt_(OrgJodaTimeDateTimeZone *zone, jint minDaysInFirstWeek);

FOUNDATION_EXPORT void OrgJodaTimeChronoEthiopicChronology_initWithOrgJodaTimeChronology_withId_withInt_(OrgJodaTimeChronoEthiopicChronology *self, OrgJodaTimeChronology *base, id param, jint minDaysInFirstWeek);

FOUNDATION_EXPORT OrgJodaTimeChronoEthiopicChronology *new_OrgJodaTimeChronoEthiopicChronology_initWithOrgJodaTimeChronology_withId_withInt_(OrgJodaTimeChronology *base, id param, jint minDaysInFirstWeek) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeChronoEthiopicChronology *create_OrgJodaTimeChronoEthiopicChronology_initWithOrgJodaTimeChronology_withId_withInt_(OrgJodaTimeChronology *base, id param, jint minDaysInFirstWeek);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeChronoEthiopicChronology)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgJodaTimeChronoEthiopicChronology")

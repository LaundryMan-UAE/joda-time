//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Mike/Projects/joda-time/src/main/java/org/joda/time/chrono/BasicWeekyearDateTimeField.java
//

#ifndef _OrgJodaTimeChronoBasicWeekyearDateTimeField_H_
#define _OrgJodaTimeChronoBasicWeekyearDateTimeField_H_

@class OrgJodaTimeChronoBasicChronology;
@class OrgJodaTimeDurationField;

#include "J2ObjC_header.h"
#include "org/joda/time/field/ImpreciseDateTimeField.h"

#define OrgJodaTimeChronoBasicWeekyearDateTimeField_WEEK_53 31449600000LL
#define OrgJodaTimeChronoBasicWeekyearDateTimeField_serialVersionUID 6215066916806820644LL

/**
 @brief Provides time calculations for the week of the weekyear component of time.
 @author Guy Allard
 @author Stephen Colebourne
 @author Brian S O'Neill
 @since 1.1, refactored from GJWeekyearDateTimeField
 */
@interface OrgJodaTimeChronoBasicWeekyearDateTimeField : OrgJodaTimeFieldImpreciseDateTimeField {
}

/**
 @brief Restricted constructor
 */
- (instancetype)initWithOrgJodaTimeChronoBasicChronology:(OrgJodaTimeChronoBasicChronology *)chronology;

- (jboolean)isLenient;

/**
 @brief Get the Year of a week based year component of the specified time instant.
 @param instant the time instant in millis to query.
 @return the year extracted from the input.
 */
- (jint)getWithLong:(jlong)instant;

/**
 @brief Add the specified years to the specified time instant.
 @param instant the time instant in millis to update.
 @param years the years to add (can be negative).
 @return the updated time instant.
 */
- (jlong)addWithLong:(jlong)instant
             withInt:(jint)years;

- (jlong)addWithLong:(jlong)instant
            withLong:(jlong)value;

/**
 @brief Add to the year component of the specified time instant wrapping around within that component if necessary.
 @param instant the time instant in millis to update.
 @param years the years to add (can be negative).
 @return the updated time instant.
 */
- (jlong)addWrapFieldWithLong:(jlong)instant
                      withInt:(jint)years;

- (jlong)getDifferenceAsLongWithLong:(jlong)minuendInstant
                            withLong:(jlong)subtrahendInstant;

/**
 @brief Set the Year of a week based year component of the specified time instant.
 @param instant the time instant in millis to update.
 @param year the year (-9999,9999) to set the date to.
 @return the updated DateTime.
 @throws IllegalArgumentException if year is invalid.
 */
- (jlong)setWithLong:(jlong)instant
             withInt:(jint)year;

- (OrgJodaTimeDurationField *)getRangeDurationField;

- (jboolean)isLeapWithLong:(jlong)instant;

- (jint)getLeapAmountWithLong:(jlong)instant;

- (OrgJodaTimeDurationField *)getLeapDurationField;

- (jint)getMinimumValue;

- (jint)getMaximumValue;

- (jlong)roundFloorWithLong:(jlong)instant;

- (jlong)remainderWithLong:(jlong)instant;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeChronoBasicWeekyearDateTimeField)

CF_EXTERN_C_BEGIN

J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeChronoBasicWeekyearDateTimeField, serialVersionUID, jlong)

J2OBJC_STATIC_FIELD_GETTER(OrgJodaTimeChronoBasicWeekyearDateTimeField, WEEK_53, jlong)
CF_EXTERN_C_END

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeChronoBasicWeekyearDateTimeField)

#endif // _OrgJodaTimeChronoBasicWeekyearDateTimeField_H_

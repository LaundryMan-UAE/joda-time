//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/temp/joda-time/src/main/java/org/joda/time/field/MillisDurationField.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgJodaTimeFieldMillisDurationField")
#ifdef RESTRICT_OrgJodaTimeFieldMillisDurationField
#define INCLUDE_ALL_OrgJodaTimeFieldMillisDurationField 0
#else
#define INCLUDE_ALL_OrgJodaTimeFieldMillisDurationField 1
#endif
#undef RESTRICT_OrgJodaTimeFieldMillisDurationField

#if !defined (OrgJodaTimeFieldMillisDurationField_) && (INCLUDE_ALL_OrgJodaTimeFieldMillisDurationField || defined(INCLUDE_OrgJodaTimeFieldMillisDurationField))
#define OrgJodaTimeFieldMillisDurationField_

#define RESTRICT_OrgJodaTimeDurationField 1
#define INCLUDE_OrgJodaTimeDurationField 1
#include "org/joda/time/DurationField.h"

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class OrgJodaTimeDurationFieldType;

/*!
 @brief Duration field class representing a field with a fixed unit length of one
  millisecond.
 <p>
  MillisDurationField is thread-safe and immutable.
 @author Brian S O'Neill
 @since 1.0
 */
@interface OrgJodaTimeFieldMillisDurationField : OrgJodaTimeDurationField < JavaIoSerializable >

#pragma mark Public

- (jlong)addWithLong:(jlong)instant
             withInt:(jint)value;

- (jlong)addWithLong:(jlong)instant
            withLong:(jlong)value;

- (jint)compareToWithId:(OrgJodaTimeDurationField *)otherField;

- (jboolean)isEqual:(id)obj;

- (jint)getDifferenceWithLong:(jlong)minuendInstant
                     withLong:(jlong)subtrahendInstant;

- (jlong)getDifferenceAsLongWithLong:(jlong)minuendInstant
                            withLong:(jlong)subtrahendInstant;

- (jlong)getMillisWithInt:(jint)value;

- (jlong)getMillisWithInt:(jint)value
                 withLong:(jlong)instant;

- (jlong)getMillisWithLong:(jlong)value;

- (jlong)getMillisWithLong:(jlong)value
                  withLong:(jlong)instant;

- (NSString *)getName;

- (OrgJodaTimeDurationFieldType *)getType;

/*!
 @brief Returns the amount of milliseconds per unit value of this field.
 @return one always
 */
- (jlong)getUnitMillis;

- (jint)getValueWithLong:(jlong)duration;

- (jint)getValueWithLong:(jlong)duration
                withLong:(jlong)instant;

- (jlong)getValueAsLongWithLong:(jlong)duration;

- (jlong)getValueAsLongWithLong:(jlong)duration
                       withLong:(jlong)instant;

- (NSUInteger)hash;

/*!
 @brief Returns true as this field is precise.
 @return true always
 */
- (jboolean)isPrecise;

/*!
 @brief Returns true as this field is supported.
 @return true always
 */
- (jboolean)isSupported;

/*!
 @brief Get a suitable debug string.
 @return debug string
 */
- (NSString *)description;

@end

J2OBJC_STATIC_INIT(OrgJodaTimeFieldMillisDurationField)

/*!
 @brief Singleton instance.
 */
inline OrgJodaTimeDurationField *OrgJodaTimeFieldMillisDurationField_get_INSTANCE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgJodaTimeDurationField *OrgJodaTimeFieldMillisDurationField_INSTANCE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJodaTimeFieldMillisDurationField, INSTANCE, OrgJodaTimeDurationField *)

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeFieldMillisDurationField)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgJodaTimeFieldMillisDurationField")

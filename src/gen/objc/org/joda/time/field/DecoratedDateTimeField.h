//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/andrefonseca/Documents/PodsFolders/Joda-Time/src/main/java/org/joda/time/field/DecoratedDateTimeField.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgJodaTimeFieldDecoratedDateTimeField_INCLUDE_ALL")
#ifdef OrgJodaTimeFieldDecoratedDateTimeField_RESTRICT
#define OrgJodaTimeFieldDecoratedDateTimeField_INCLUDE_ALL 0
#else
#define OrgJodaTimeFieldDecoratedDateTimeField_INCLUDE_ALL 1
#endif
#undef OrgJodaTimeFieldDecoratedDateTimeField_RESTRICT

#if !defined (OrgJodaTimeFieldDecoratedDateTimeField_) && (OrgJodaTimeFieldDecoratedDateTimeField_INCLUDE_ALL || defined(OrgJodaTimeFieldDecoratedDateTimeField_INCLUDE))
#define OrgJodaTimeFieldDecoratedDateTimeField_

#define OrgJodaTimeFieldBaseDateTimeField_RESTRICT 1
#define OrgJodaTimeFieldBaseDateTimeField_INCLUDE 1
#include "org/joda/time/field/BaseDateTimeField.h"

@class OrgJodaTimeDateTimeField;
@class OrgJodaTimeDateTimeFieldType;
@class OrgJodaTimeDurationField;

/*!
 @brief <code>DecoratedDateTimeField</code> extends <code>BaseDateTimeField</code>,
 implementing only the minimum required set of methods.
 These implemented
 methods delegate to a wrapped field.
 <p>
 This design allows new DateTimeField types to be defined that piggyback on
 top of another, inheriting all the safe method implementations from
 BaseDateTimeField. Should any method require pure delegation to the
 wrapped field, simply override and use the provided getWrappedField method.
 <p>
 DecoratedDateTimeField is thread-safe and immutable, and its subclasses must
 be as well.
 @author Brian S O'Neill
 @since 1.0
 - seealso: DelegatedDateTimeField
 */
@interface OrgJodaTimeFieldDecoratedDateTimeField : OrgJodaTimeFieldBaseDateTimeField

#pragma mark Public

- (jint)getWithLong:(jlong)instant;

- (OrgJodaTimeDurationField *)getDurationField;

- (jint)getMaximumValue;

- (jint)getMinimumValue;

- (OrgJodaTimeDurationField *)getRangeDurationField;

/*!
 @brief Gets the wrapped date time field.
 @return the wrapped DateTimeField
 */
- (OrgJodaTimeDateTimeField *)getWrappedField;

- (jboolean)isLenient;

- (jlong)roundFloorWithLong:(jlong)instant;

- (jlong)setWithLong:(jlong)instant
             withInt:(jint)value;

#pragma mark Protected

/*!
 @brief Constructor.
 @param field  the field being decorated
 @param type  allow type to be overridden
 */
- (instancetype)initWithOrgJodaTimeDateTimeField:(OrgJodaTimeDateTimeField *)field
                withOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)type;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeFieldDecoratedDateTimeField)

FOUNDATION_EXPORT void OrgJodaTimeFieldDecoratedDateTimeField_initWithOrgJodaTimeDateTimeField_withOrgJodaTimeDateTimeFieldType_(OrgJodaTimeFieldDecoratedDateTimeField *self, OrgJodaTimeDateTimeField *field, OrgJodaTimeDateTimeFieldType *type);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeFieldDecoratedDateTimeField)

#endif

#pragma pop_macro("OrgJodaTimeFieldDecoratedDateTimeField_INCLUDE_ALL")

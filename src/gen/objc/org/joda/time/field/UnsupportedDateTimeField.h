//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/temp/joda-time/src/main/java/org/joda/time/field/UnsupportedDateTimeField.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgJodaTimeFieldUnsupportedDateTimeField")
#ifdef RESTRICT_OrgJodaTimeFieldUnsupportedDateTimeField
#define INCLUDE_ALL_OrgJodaTimeFieldUnsupportedDateTimeField 0
#else
#define INCLUDE_ALL_OrgJodaTimeFieldUnsupportedDateTimeField 1
#endif
#undef RESTRICT_OrgJodaTimeFieldUnsupportedDateTimeField

#if !defined (OrgJodaTimeFieldUnsupportedDateTimeField_) && (INCLUDE_ALL_OrgJodaTimeFieldUnsupportedDateTimeField || defined(INCLUDE_OrgJodaTimeFieldUnsupportedDateTimeField))
#define OrgJodaTimeFieldUnsupportedDateTimeField_

#define RESTRICT_OrgJodaTimeDateTimeField 1
#define INCLUDE_OrgJodaTimeDateTimeField 1
#include "org/joda/time/DateTimeField.h"

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class IOSIntArray;
@class JavaUtilLocale;
@class OrgJodaTimeDateTimeFieldType;
@class OrgJodaTimeDurationField;
@protocol OrgJodaTimeReadablePartial;

/*!
 @brief A placeholder implementation to use when a datetime field is not supported.
 <p>
  UnsupportedDateTimeField is thread-safe and immutable.
 @author Brian S O'Neill
 @since 1.0
 */
@interface OrgJodaTimeFieldUnsupportedDateTimeField : OrgJodaTimeDateTimeField < JavaIoSerializable >

#pragma mark Public

/*!
 @brief Delegates to the duration field.
 @throw UnsupportedOperationExceptionif the duration is unsupported
 */
- (jlong)addWithLong:(jlong)instant
             withInt:(jint)value;

/*!
 @brief Delegates to the duration field.
 @throw UnsupportedOperationExceptionif the duration is unsupported
 */
- (jlong)addWithLong:(jlong)instant
            withLong:(jlong)value;

/*!
 @brief Always throws UnsupportedOperationException
 @throw UnsupportedOperationException
 */
- (IOSIntArray *)addWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant
                                           withInt:(jint)fieldIndex
                                      withIntArray:(IOSIntArray *)values
                                           withInt:(jint)valueToAdd;

/*!
 @brief Always throws UnsupportedOperationException
 @throw UnsupportedOperationException
 */
- (jlong)addWrapFieldWithLong:(jlong)instant
                      withInt:(jint)value;

/*!
 @brief Always throws UnsupportedOperationException
 @throw UnsupportedOperationException
 */
- (IOSIntArray *)addWrapFieldWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant
                                                    withInt:(jint)fieldIndex
                                               withIntArray:(IOSIntArray *)values
                                                    withInt:(jint)valueToAdd;

/*!
 @brief Always throws UnsupportedOperationException
 @throw UnsupportedOperationException
 */
- (IOSIntArray *)addWrapPartialWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant
                                                      withInt:(jint)fieldIndex
                                                 withIntArray:(IOSIntArray *)values
                                                      withInt:(jint)valueToAdd;

/*!
 @brief Always throws UnsupportedOperationException
 @throw UnsupportedOperationException
 */
- (jint)getWithLong:(jlong)instant;

/*!
 @brief Always throws UnsupportedOperationException
 @throw UnsupportedOperationException
 */
- (NSString *)getAsShortTextWithInt:(jint)fieldValue
                 withJavaUtilLocale:(JavaUtilLocale *)locale;

/*!
 @brief Always throws UnsupportedOperationException
 @throw UnsupportedOperationException
 */
- (NSString *)getAsShortTextWithLong:(jlong)instant;

/*!
 @brief Always throws UnsupportedOperationException
 @throw UnsupportedOperationException
 */
- (NSString *)getAsShortTextWithLong:(jlong)instant
                  withJavaUtilLocale:(JavaUtilLocale *)locale;

/*!
 @brief Always throws UnsupportedOperationException
 @throw UnsupportedOperationException
 */
- (NSString *)getAsShortTextWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)partial
                                                   withInt:(jint)fieldValue
                                        withJavaUtilLocale:(JavaUtilLocale *)locale;

/*!
 @brief Always throws UnsupportedOperationException
 @throw UnsupportedOperationException
 */
- (NSString *)getAsShortTextWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)partial
                                        withJavaUtilLocale:(JavaUtilLocale *)locale;

/*!
 @brief Always throws UnsupportedOperationException
 @throw UnsupportedOperationException
 */
- (NSString *)getAsTextWithInt:(jint)fieldValue
            withJavaUtilLocale:(JavaUtilLocale *)locale;

/*!
 @brief Always throws UnsupportedOperationException
 @throw UnsupportedOperationException
 */
- (NSString *)getAsTextWithLong:(jlong)instant;

/*!
 @brief Always throws UnsupportedOperationException
 @throw UnsupportedOperationException
 */
- (NSString *)getAsTextWithLong:(jlong)instant
             withJavaUtilLocale:(JavaUtilLocale *)locale;

/*!
 @brief Always throws UnsupportedOperationException
 @throw UnsupportedOperationException
 */
- (NSString *)getAsTextWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)partial
                                              withInt:(jint)fieldValue
                                   withJavaUtilLocale:(JavaUtilLocale *)locale;

/*!
 @brief Always throws UnsupportedOperationException
 @throw UnsupportedOperationException
 */
- (NSString *)getAsTextWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)partial
                                   withJavaUtilLocale:(JavaUtilLocale *)locale;

/*!
 @brief Delegates to the duration field.
 @throw UnsupportedOperationExceptionif the duration is unsupported
 */
- (jint)getDifferenceWithLong:(jlong)minuendInstant
                     withLong:(jlong)subtrahendInstant;

/*!
 @brief Delegates to the duration field.
 @throw UnsupportedOperationExceptionif the duration is unsupported
 */
- (jlong)getDifferenceAsLongWithLong:(jlong)minuendInstant
                            withLong:(jlong)subtrahendInstant;

/*!
 @brief Even though this DateTimeField is unsupported, the duration field might
  be supported.
 @return a possibly supported DurationField
 */
- (OrgJodaTimeDurationField *)getDurationField;

/*!
 @brief Gets an instance of UnsupportedDateTimeField for a specific named field.
 Names should be of standard format, such as 'monthOfYear' or 'hourOfDay'.
  The returned instance is cached.
 @param type the type to obtain
 @return the instance
 @throw IllegalArgumentExceptionif durationField is null
 */
+ (OrgJodaTimeFieldUnsupportedDateTimeField *)getInstanceWithOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)type
                                                             withOrgJodaTimeDurationField:(OrgJodaTimeDurationField *)durationField;

/*!
 @brief Always throws UnsupportedOperationException
 @throw UnsupportedOperationException
 */
- (jint)getLeapAmountWithLong:(jlong)instant;

/*!
 @brief Always returns null.
 @return null always
 */
- (OrgJodaTimeDurationField *)getLeapDurationField;

/*!
 @brief Always throws UnsupportedOperationException
 @throw UnsupportedOperationException
 */
- (jint)getMaximumShortTextLengthWithJavaUtilLocale:(JavaUtilLocale *)locale;

/*!
 @brief Always throws UnsupportedOperationException
 @throw UnsupportedOperationException
 */
- (jint)getMaximumTextLengthWithJavaUtilLocale:(JavaUtilLocale *)locale;

/*!
 @brief Always throws UnsupportedOperationException
 @throw UnsupportedOperationException
 */
- (jint)getMaximumValue;

/*!
 @brief Always throws UnsupportedOperationException
 @throw UnsupportedOperationException
 */
- (jint)getMaximumValueWithLong:(jlong)instant;

/*!
 @brief Always throws UnsupportedOperationException
 @throw UnsupportedOperationException
 */
- (jint)getMaximumValueWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant;

/*!
 @brief Always throws UnsupportedOperationException
 @throw UnsupportedOperationException
 */
- (jint)getMaximumValueWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant
                                         withIntArray:(IOSIntArray *)values;

/*!
 @brief Always throws UnsupportedOperationException
 @throw UnsupportedOperationException
 */
- (jint)getMinimumValue;

/*!
 @brief Always throws UnsupportedOperationException
 @throw UnsupportedOperationException
 */
- (jint)getMinimumValueWithLong:(jlong)instant;

/*!
 @brief Always throws UnsupportedOperationException
 @throw UnsupportedOperationException
 */
- (jint)getMinimumValueWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant;

/*!
 @brief Always throws UnsupportedOperationException
 @throw UnsupportedOperationException
 */
- (jint)getMinimumValueWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant
                                         withIntArray:(IOSIntArray *)values;

- (NSString *)getName;

/*!
 @brief Always returns null.
 @return null always
 */
- (OrgJodaTimeDurationField *)getRangeDurationField;

- (OrgJodaTimeDateTimeFieldType *)getType;

/*!
 @brief Always throws UnsupportedOperationException
 @throw UnsupportedOperationException
 */
- (jboolean)isLeapWithLong:(jlong)instant;

/*!
 @brief This field is not lenient.
 @return false always
 */
- (jboolean)isLenient;

/*!
 @brief This field is not supported.
 @return false always
 */
- (jboolean)isSupported;

/*!
 @brief Always throws UnsupportedOperationException
 @throw UnsupportedOperationException
 */
- (jlong)remainderWithLong:(jlong)instant;

/*!
 @brief Always throws UnsupportedOperationException
 @throw UnsupportedOperationException
 */
- (jlong)roundCeilingWithLong:(jlong)instant;

/*!
 @brief Always throws UnsupportedOperationException
 @throw UnsupportedOperationException
 */
- (jlong)roundFloorWithLong:(jlong)instant;

/*!
 @brief Always throws UnsupportedOperationException
 @throw UnsupportedOperationException
 */
- (jlong)roundHalfCeilingWithLong:(jlong)instant;

/*!
 @brief Always throws UnsupportedOperationException
 @throw UnsupportedOperationException
 */
- (jlong)roundHalfEvenWithLong:(jlong)instant;

/*!
 @brief Always throws UnsupportedOperationException
 @throw UnsupportedOperationException
 */
- (jlong)roundHalfFloorWithLong:(jlong)instant;

/*!
 @brief Always throws UnsupportedOperationException
 @throw UnsupportedOperationException
 */
- (jlong)setWithLong:(jlong)instant
             withInt:(jint)value;

/*!
 @brief Always throws UnsupportedOperationException
 @throw UnsupportedOperationException
 */
- (jlong)setWithLong:(jlong)instant
        withNSString:(NSString *)text;

/*!
 @brief Always throws UnsupportedOperationException
 @throw UnsupportedOperationException
 */
- (jlong)setWithLong:(jlong)instant
        withNSString:(NSString *)text
  withJavaUtilLocale:(JavaUtilLocale *)locale;

/*!
 @brief Always throws UnsupportedOperationException
 @throw UnsupportedOperationException
 */
- (IOSIntArray *)setWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant
                                           withInt:(jint)fieldIndex
                                      withIntArray:(IOSIntArray *)values
                                           withInt:(jint)newValue;

/*!
 @brief Always throws UnsupportedOperationException
 @throw UnsupportedOperationException
 */
- (IOSIntArray *)setWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)instant
                                           withInt:(jint)fieldIndex
                                      withIntArray:(IOSIntArray *)values
                                      withNSString:(NSString *)text
                                withJavaUtilLocale:(JavaUtilLocale *)locale;

/*!
 @brief Get a suitable debug string.
 @return debug string
 */
- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeFieldUnsupportedDateTimeField)

FOUNDATION_EXPORT OrgJodaTimeFieldUnsupportedDateTimeField *OrgJodaTimeFieldUnsupportedDateTimeField_getInstanceWithOrgJodaTimeDateTimeFieldType_withOrgJodaTimeDurationField_(OrgJodaTimeDateTimeFieldType *type, OrgJodaTimeDurationField *durationField);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeFieldUnsupportedDateTimeField)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgJodaTimeFieldUnsupportedDateTimeField")

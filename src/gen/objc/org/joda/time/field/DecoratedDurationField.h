//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/andrefonseca/Documents/PodsFolders/Joda-Time/src/main/java/org/joda/time/field/DecoratedDurationField.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgJodaTimeFieldDecoratedDurationField_INCLUDE_ALL")
#ifdef OrgJodaTimeFieldDecoratedDurationField_RESTRICT
#define OrgJodaTimeFieldDecoratedDurationField_INCLUDE_ALL 0
#else
#define OrgJodaTimeFieldDecoratedDurationField_INCLUDE_ALL 1
#endif
#undef OrgJodaTimeFieldDecoratedDurationField_RESTRICT

#if !defined (OrgJodaTimeFieldDecoratedDurationField_) && (OrgJodaTimeFieldDecoratedDurationField_INCLUDE_ALL || defined(OrgJodaTimeFieldDecoratedDurationField_INCLUDE))
#define OrgJodaTimeFieldDecoratedDurationField_

#define OrgJodaTimeFieldBaseDurationField_RESTRICT 1
#define OrgJodaTimeFieldBaseDurationField_INCLUDE 1
#include "org/joda/time/field/BaseDurationField.h"

@class OrgJodaTimeDurationField;
@class OrgJodaTimeDurationFieldType;

/*!
 @brief <code>DecoratedDurationField</code> extends <code>BaseDurationField</code>,
 implementing only the minimum required set of methods.
 These implemented
 methods delegate to a wrapped field.
 <p>
 This design allows new DurationField types to be defined that piggyback on
 top of another, inheriting all the safe method implementations from
 BaseDurationField. Should any method require pure delegation to the
 wrapped field, simply override and use the provided getWrappedField method.
 <p>
 DecoratedDurationField is thread-safe and immutable, and its subclasses must
 be as well.
 @author Brian S O'Neill
 - seealso: DelegatedDurationField
 @since 1.0
 */
@interface OrgJodaTimeFieldDecoratedDurationField : OrgJodaTimeFieldBaseDurationField

#pragma mark Public

/*!
 @brief Constructor.
 @param field  the base field
 @param type  the type to actually use
 */
- (instancetype)initWithOrgJodaTimeDurationField:(OrgJodaTimeDurationField *)field
                withOrgJodaTimeDurationFieldType:(OrgJodaTimeDurationFieldType *)type;

- (jlong)addWithLong:(jlong)instant
             withInt:(jint)value;

- (jlong)addWithLong:(jlong)instant
            withLong:(jlong)value;

- (jlong)getDifferenceAsLongWithLong:(jlong)minuendInstant
                            withLong:(jlong)subtrahendInstant;

- (jlong)getMillisWithInt:(jint)value
                 withLong:(jlong)instant;

- (jlong)getMillisWithLong:(jlong)value
                  withLong:(jlong)instant;

- (jlong)getUnitMillis;

- (jlong)getValueAsLongWithLong:(jlong)duration
                       withLong:(jlong)instant;

/*!
 @brief Gets the wrapped duration field.
 @return the wrapped DurationField
 */
- (OrgJodaTimeDurationField *)getWrappedField;

- (jboolean)isPrecise;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeFieldDecoratedDurationField)

FOUNDATION_EXPORT void OrgJodaTimeFieldDecoratedDurationField_initWithOrgJodaTimeDurationField_withOrgJodaTimeDurationFieldType_(OrgJodaTimeFieldDecoratedDurationField *self, OrgJodaTimeDurationField *field, OrgJodaTimeDurationFieldType *type);

FOUNDATION_EXPORT OrgJodaTimeFieldDecoratedDurationField *new_OrgJodaTimeFieldDecoratedDurationField_initWithOrgJodaTimeDurationField_withOrgJodaTimeDurationFieldType_(OrgJodaTimeDurationField *field, OrgJodaTimeDurationFieldType *type) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeFieldDecoratedDurationField)

#endif

#pragma pop_macro("OrgJodaTimeFieldDecoratedDurationField_INCLUDE_ALL")

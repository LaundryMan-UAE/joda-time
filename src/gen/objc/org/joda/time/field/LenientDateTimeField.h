//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/HambroPerks/hambroperks_org/joda-time/src/main/java/org/joda/time/field/LenientDateTimeField.java
//

#ifndef _OrgJodaTimeFieldLenientDateTimeField_H_
#define _OrgJodaTimeFieldLenientDateTimeField_H_

#include "J2ObjC_header.h"
#include "org/joda/time/field/DelegatedDateTimeField.h"

@class OrgJodaTimeChronology;
@class OrgJodaTimeDateTimeField;

/**
 @brief Converts a strict DateTimeField into a lenient one.
 By being lenient, the set method accepts out of bounds values, performing an addition instead. <p> LenientDateTimeField is thread-safe and immutable.
 @author Brian S O'Neill
 @since 1.0
 */
@interface OrgJodaTimeFieldLenientDateTimeField : OrgJodaTimeFieldDelegatedDateTimeField

#pragma mark Public

/**
 @brief Returns a lenient version of the given field.
 If it is already lenient, then it is returned as-is. Otherwise, a new LenientDateTimeField is returned.
 */
+ (OrgJodaTimeDateTimeField *)getInstanceWithOrgJodaTimeDateTimeField:(OrgJodaTimeDateTimeField *)field
                                            withOrgJodaTimeChronology:(OrgJodaTimeChronology *)base;

- (jboolean)isLenient;

/**
 @brief Set values which may be out of bounds by adding the difference between the new value and the current value.
 */
- (jlong)setWithLong:(jlong)instant
             withInt:(jint)value;

#pragma mark Protected

- (instancetype)initWithOrgJodaTimeDateTimeField:(OrgJodaTimeDateTimeField *)field
                       withOrgJodaTimeChronology:(OrgJodaTimeChronology *)base;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeFieldLenientDateTimeField)

FOUNDATION_EXPORT OrgJodaTimeDateTimeField *OrgJodaTimeFieldLenientDateTimeField_getInstanceWithOrgJodaTimeDateTimeField_withOrgJodaTimeChronology_(OrgJodaTimeDateTimeField *field, OrgJodaTimeChronology *base);

FOUNDATION_EXPORT void OrgJodaTimeFieldLenientDateTimeField_initWithOrgJodaTimeDateTimeField_withOrgJodaTimeChronology_(OrgJodaTimeFieldLenientDateTimeField *self, OrgJodaTimeDateTimeField *field, OrgJodaTimeChronology *base);

FOUNDATION_EXPORT OrgJodaTimeFieldLenientDateTimeField *new_OrgJodaTimeFieldLenientDateTimeField_initWithOrgJodaTimeDateTimeField_withOrgJodaTimeChronology_(OrgJodaTimeDateTimeField *field, OrgJodaTimeChronology *base) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeFieldLenientDateTimeField)

#endif // _OrgJodaTimeFieldLenientDateTimeField_H_

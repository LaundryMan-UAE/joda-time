//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/HambroPerks/hambroperks_org/joda-time/src/main/java/org/joda/time/field/SkipDateTimeField.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgJodaTimeFieldSkipDateTimeField")
#ifdef RESTRICT_OrgJodaTimeFieldSkipDateTimeField
#define INCLUDE_ALL_OrgJodaTimeFieldSkipDateTimeField 0
#else
#define INCLUDE_ALL_OrgJodaTimeFieldSkipDateTimeField 1
#endif
#undef RESTRICT_OrgJodaTimeFieldSkipDateTimeField

#if !defined (OrgJodaTimeFieldSkipDateTimeField_) && (INCLUDE_ALL_OrgJodaTimeFieldSkipDateTimeField || defined(INCLUDE_OrgJodaTimeFieldSkipDateTimeField))
#define OrgJodaTimeFieldSkipDateTimeField_

#define RESTRICT_OrgJodaTimeFieldDelegatedDateTimeField 1
#define INCLUDE_OrgJodaTimeFieldDelegatedDateTimeField 1
#include "org/joda/time/field/DelegatedDateTimeField.h"

@class OrgJodaTimeChronology;
@class OrgJodaTimeDateTimeField;
@class OrgJodaTimeDateTimeFieldType;
@class OrgJodaTimeDurationField;

/*!
 @brief Wraps another field such that a certain value is skipped.
 <p>
  This is most useful for years where you want to skip zero, so the
  sequence runs ...,2,1,-1,-2,... 
 <p>
  SkipDateTimeField is thread-safe and immutable.
 @author Brian S O'Neill
 @author Stephen Colebourne
 @since 1.0
 */
@interface OrgJodaTimeFieldSkipDateTimeField : OrgJodaTimeFieldDelegatedDateTimeField

#pragma mark Public

/*!
 @brief Constructor that skips zero.
 @param chronology the chronoogy to use
 @param field the field to skip zero on
 */
- (instancetype)initWithOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology
                 withOrgJodaTimeDateTimeField:(OrgJodaTimeDateTimeField *)field;

/*!
 @brief Constructor.
 @param chronology the chronoogy to use
 @param field the field to skip zero on
 @param skip the value to skip
 */
- (instancetype)initWithOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology
                 withOrgJodaTimeDateTimeField:(OrgJodaTimeDateTimeField *)field
                                      withInt:(jint)skip;

- (jint)getWithLong:(jlong)millis;

- (jint)getMinimumValue;

- (jlong)setWithLong:(jlong)millis
             withInt:(jint)value;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithOrgJodaTimeDateTimeField:(OrgJodaTimeDateTimeField *)arg0 NS_UNAVAILABLE;

- (instancetype)initWithOrgJodaTimeDateTimeField:(OrgJodaTimeDateTimeField *)arg0
                withOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)arg1 NS_UNAVAILABLE;

- (instancetype)initWithOrgJodaTimeDateTimeField:(OrgJodaTimeDateTimeField *)arg0
                    withOrgJodaTimeDurationField:(OrgJodaTimeDurationField *)arg1
                withOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)arg2 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(OrgJodaTimeFieldSkipDateTimeField)

FOUNDATION_EXPORT void OrgJodaTimeFieldSkipDateTimeField_initWithOrgJodaTimeChronology_withOrgJodaTimeDateTimeField_(OrgJodaTimeFieldSkipDateTimeField *self, OrgJodaTimeChronology *chronology, OrgJodaTimeDateTimeField *field);

FOUNDATION_EXPORT OrgJodaTimeFieldSkipDateTimeField *new_OrgJodaTimeFieldSkipDateTimeField_initWithOrgJodaTimeChronology_withOrgJodaTimeDateTimeField_(OrgJodaTimeChronology *chronology, OrgJodaTimeDateTimeField *field) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeFieldSkipDateTimeField *create_OrgJodaTimeFieldSkipDateTimeField_initWithOrgJodaTimeChronology_withOrgJodaTimeDateTimeField_(OrgJodaTimeChronology *chronology, OrgJodaTimeDateTimeField *field);

FOUNDATION_EXPORT void OrgJodaTimeFieldSkipDateTimeField_initWithOrgJodaTimeChronology_withOrgJodaTimeDateTimeField_withInt_(OrgJodaTimeFieldSkipDateTimeField *self, OrgJodaTimeChronology *chronology, OrgJodaTimeDateTimeField *field, jint skip);

FOUNDATION_EXPORT OrgJodaTimeFieldSkipDateTimeField *new_OrgJodaTimeFieldSkipDateTimeField_initWithOrgJodaTimeChronology_withOrgJodaTimeDateTimeField_withInt_(OrgJodaTimeChronology *chronology, OrgJodaTimeDateTimeField *field, jint skip) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJodaTimeFieldSkipDateTimeField *create_OrgJodaTimeFieldSkipDateTimeField_initWithOrgJodaTimeChronology_withOrgJodaTimeDateTimeField_withInt_(OrgJodaTimeChronology *chronology, OrgJodaTimeDateTimeField *field, jint skip);

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeFieldSkipDateTimeField)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgJodaTimeFieldSkipDateTimeField")

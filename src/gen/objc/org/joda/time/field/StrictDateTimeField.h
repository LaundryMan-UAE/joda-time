//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/andrefonseca/Documents/PodsFolders/Joda-Time/src/main/java/org/joda/time/field/StrictDateTimeField.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OrgJodaTimeFieldStrictDateTimeField_INCLUDE_ALL")
#ifdef OrgJodaTimeFieldStrictDateTimeField_RESTRICT
#define OrgJodaTimeFieldStrictDateTimeField_INCLUDE_ALL 0
#else
#define OrgJodaTimeFieldStrictDateTimeField_INCLUDE_ALL 1
#endif
#undef OrgJodaTimeFieldStrictDateTimeField_RESTRICT

#if !defined (OrgJodaTimeFieldStrictDateTimeField_) && (OrgJodaTimeFieldStrictDateTimeField_INCLUDE_ALL || defined(OrgJodaTimeFieldStrictDateTimeField_INCLUDE))
#define OrgJodaTimeFieldStrictDateTimeField_

#define OrgJodaTimeFieldDelegatedDateTimeField_RESTRICT 1
#define OrgJodaTimeFieldDelegatedDateTimeField_INCLUDE 1
#include "org/joda/time/field/DelegatedDateTimeField.h"

@class OrgJodaTimeDateTimeField;

/*!
 @brief Converts a lenient DateTimeField into a strict one.
 By being strict, the set
 throws an IllegalArgumentException if the value is out of bounds.
 <p>
 StrictDateTimeField is thread-safe and immutable.
 @author Brian S O'Neill
 - seealso: org.joda.time.chrono.StrictChronology
 - seealso: LenientDateTimeField
 @since 1.0
 */
@interface OrgJodaTimeFieldStrictDateTimeField : OrgJodaTimeFieldDelegatedDateTimeField

#pragma mark Public

/*!
 @brief Returns a strict version of the given field.
 If it is already strict,
 then it is returned as-is. Otherwise, a new StrictDateTimeField is
 returned.
 */
+ (OrgJodaTimeDateTimeField *)getInstanceWithOrgJodaTimeDateTimeField:(OrgJodaTimeDateTimeField *)field;

- (jboolean)isLenient;

/*!
 @brief Does a bounds check before setting the value.
 @throws IllegalArgumentException if the value is invalid
 */
- (jlong)setWithLong:(jlong)instant
             withInt:(jint)value;

#pragma mark Protected

- (instancetype)initWithOrgJodaTimeDateTimeField:(OrgJodaTimeDateTimeField *)field;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeFieldStrictDateTimeField)

FOUNDATION_EXPORT OrgJodaTimeDateTimeField *OrgJodaTimeFieldStrictDateTimeField_getInstanceWithOrgJodaTimeDateTimeField_(OrgJodaTimeDateTimeField *field);

FOUNDATION_EXPORT void OrgJodaTimeFieldStrictDateTimeField_initWithOrgJodaTimeDateTimeField_(OrgJodaTimeFieldStrictDateTimeField *self, OrgJodaTimeDateTimeField *field);

FOUNDATION_EXPORT OrgJodaTimeFieldStrictDateTimeField *new_OrgJodaTimeFieldStrictDateTimeField_initWithOrgJodaTimeDateTimeField_(OrgJodaTimeDateTimeField *field) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeFieldStrictDateTimeField)

#endif

#pragma pop_macro("OrgJodaTimeFieldStrictDateTimeField_INCLUDE_ALL")

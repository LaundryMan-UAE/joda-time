//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/HambroPerks/hambroperks_org/joda-time/src/main/java/org/joda/time/field/OffsetDateTimeField.java
//

#ifndef _OrgJodaTimeFieldOffsetDateTimeField_H_
#define _OrgJodaTimeFieldOffsetDateTimeField_H_

#include "J2ObjC_header.h"
#include "org/joda/time/field/DecoratedDateTimeField.h"

@class OrgJodaTimeDateTimeField;
@class OrgJodaTimeDateTimeFieldType;
@class OrgJodaTimeDurationField;

/**
 @brief Generic offset adjusting datetime field.
 <p> OffsetDateTimeField is thread-safe and immutable.
 @author Brian S O'Neill
 @since 1.0
 */
@interface OrgJodaTimeFieldOffsetDateTimeField : OrgJodaTimeFieldDecoratedDateTimeField

#pragma mark Public

/**
 @brief Constructor.
 @param field the field to wrap, like "year()".
 @param type the field type this field actually uses
 @param offset offset to add to field values
 @throws IllegalArgumentException if offset is zero
 */
- (instancetype)initWithOrgJodaTimeDateTimeField:(OrgJodaTimeDateTimeField *)field
                withOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)type
                                         withInt:(jint)offset;

/**
 @brief Constructor.
 @param field the field to wrap, like "year()".
 @param type the field type this field actually uses
 @param offset offset to add to field values
 @param minValue minimum allowed value
 @param maxValue maximum allowed value
 @throws IllegalArgumentException if offset is zero
 */
- (instancetype)initWithOrgJodaTimeDateTimeField:(OrgJodaTimeDateTimeField *)field
                withOrgJodaTimeDateTimeFieldType:(OrgJodaTimeDateTimeFieldType *)type
                                         withInt:(jint)offset
                                         withInt:(jint)minValue
                                         withInt:(jint)maxValue;

/**
 @brief Constructor.
 @param field the field to wrap, like "year()".
 @param offset offset to add to field values
 @throws IllegalArgumentException if offset is zero
 */
- (instancetype)initWithOrgJodaTimeDateTimeField:(OrgJodaTimeDateTimeField *)field
                                         withInt:(jint)offset;

/**
 @brief Add the specified amount of offset units to the specified time instant.
 The amount added may be negative.
 @param instant the time instant in millis to update.
 @param amount the amount of units to add (can be negative).
 @return the updated time instant.
 */
- (jlong)addWithLong:(jlong)instant
             withInt:(jint)amount;

/**
 @brief Add the specified amount of offset units to the specified time instant.
 The amount added may be negative.
 @param instant the time instant in millis to update.
 @param amount the amount of units to add (can be negative).
 @return the updated time instant.
 */
- (jlong)addWithLong:(jlong)instant
            withLong:(jlong)amount;

/**
 @brief Add to the offset component of the specified time instant, wrapping around within that component if necessary.
 @param instant the time instant in millis to update.
 @param amount the amount of units to add (can be negative).
 @return the updated time instant.
 */
- (jlong)addWrapFieldWithLong:(jlong)instant
                      withInt:(jint)amount;

/**
 @brief Get the amount of offset units from the specified time instant.
 @param instant the time instant in millis to query.
 @return the amount of units extracted from the input.
 */
- (jint)getWithLong:(jlong)instant;

- (jint)getLeapAmountWithLong:(jlong)instant;

- (OrgJodaTimeDurationField *)getLeapDurationField;

/**
 @brief Get the maximum value for the field.
 @return the maximum value
 */
- (jint)getMaximumValue;

/**
 @brief Get the minimum value for the field.
 @return the minimum value
 */
- (jint)getMinimumValue;

/**
 @brief Returns the offset added to the field values.
 @return the offset
 */
- (jint)getOffset;

- (jboolean)isLeapWithLong:(jlong)instant;

- (jlong)remainderWithLong:(jlong)instant;

- (jlong)roundCeilingWithLong:(jlong)instant;

- (jlong)roundFloorWithLong:(jlong)instant;

- (jlong)roundHalfCeilingWithLong:(jlong)instant;

- (jlong)roundHalfEvenWithLong:(jlong)instant;

- (jlong)roundHalfFloorWithLong:(jlong)instant;

/**
 @brief Set the specified amount of offset units to the specified time instant.
 @param instant the time instant in millis to update.
 @param value value of units to set.
 @return the updated time instant.
 @throws IllegalArgumentException if value is too large or too small.
 */
- (jlong)setWithLong:(jlong)instant
             withInt:(jint)value;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJodaTimeFieldOffsetDateTimeField)

FOUNDATION_EXPORT void OrgJodaTimeFieldOffsetDateTimeField_initWithOrgJodaTimeDateTimeField_withInt_(OrgJodaTimeFieldOffsetDateTimeField *self, OrgJodaTimeDateTimeField *field, jint offset);

FOUNDATION_EXPORT OrgJodaTimeFieldOffsetDateTimeField *new_OrgJodaTimeFieldOffsetDateTimeField_initWithOrgJodaTimeDateTimeField_withInt_(OrgJodaTimeDateTimeField *field, jint offset) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgJodaTimeFieldOffsetDateTimeField_initWithOrgJodaTimeDateTimeField_withOrgJodaTimeDateTimeFieldType_withInt_(OrgJodaTimeFieldOffsetDateTimeField *self, OrgJodaTimeDateTimeField *field, OrgJodaTimeDateTimeFieldType *type, jint offset);

FOUNDATION_EXPORT OrgJodaTimeFieldOffsetDateTimeField *new_OrgJodaTimeFieldOffsetDateTimeField_initWithOrgJodaTimeDateTimeField_withOrgJodaTimeDateTimeFieldType_withInt_(OrgJodaTimeDateTimeField *field, OrgJodaTimeDateTimeFieldType *type, jint offset) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgJodaTimeFieldOffsetDateTimeField_initWithOrgJodaTimeDateTimeField_withOrgJodaTimeDateTimeFieldType_withInt_withInt_withInt_(OrgJodaTimeFieldOffsetDateTimeField *self, OrgJodaTimeDateTimeField *field, OrgJodaTimeDateTimeFieldType *type, jint offset, jint minValue, jint maxValue);

FOUNDATION_EXPORT OrgJodaTimeFieldOffsetDateTimeField *new_OrgJodaTimeFieldOffsetDateTimeField_initWithOrgJodaTimeDateTimeField_withOrgJodaTimeDateTimeFieldType_withInt_withInt_withInt_(OrgJodaTimeDateTimeField *field, OrgJodaTimeDateTimeFieldType *type, jint offset, jint minValue, jint maxValue) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgJodaTimeFieldOffsetDateTimeField)

#endif // _OrgJodaTimeFieldOffsetDateTimeField_H_

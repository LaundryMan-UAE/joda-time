//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Mike/Projects/joda-time/src/main/java/org/joda/time/field/SkipUndoDateTimeField.java
//

#include "J2ObjC_source.h"
#include "org/joda/time/Chronology.h"
#include "org/joda/time/DateTimeField.h"
#include "org/joda/time/DateTimeFieldType.h"
#include "org/joda/time/field/DelegatedDateTimeField.h"
#include "org/joda/time/field/FieldUtils.h"
#include "org/joda/time/field/SkipUndoDateTimeField.h"

@interface OrgJodaTimeFieldSkipUndoDateTimeField () {
 @public
  /**
   @brief The chronology to wrap.
   */
  OrgJodaTimeChronology *iChronology_;
  /**
   @brief The value to skip.
   */
  jint iSkip_;
  /**
   @brief The calculated minimum value.
   */
  jint iMinValue_;
}

- (id)readResolve;
@end

J2OBJC_FIELD_SETTER(OrgJodaTimeFieldSkipUndoDateTimeField, iChronology_, OrgJodaTimeChronology *)

@implementation OrgJodaTimeFieldSkipUndoDateTimeField

- (instancetype)initWithOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology
                 withOrgJodaTimeDateTimeField:(OrgJodaTimeDateTimeField *)field {
  return [self initOrgJodaTimeFieldSkipUndoDateTimeFieldWithOrgJodaTimeChronology:chronology withOrgJodaTimeDateTimeField:field withInt:0];
}

- (instancetype)initOrgJodaTimeFieldSkipUndoDateTimeFieldWithOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology
                                                      withOrgJodaTimeDateTimeField:(OrgJodaTimeDateTimeField *)field
                                                                           withInt:(jint)skip {
  if (self = [super initWithOrgJodaTimeDateTimeField:field]) {
    OrgJodaTimeFieldSkipUndoDateTimeField_set_iChronology_(self, chronology);
    jint min = [super getMinimumValue];
    if (min < skip) {
      iMinValue_ = min + 1;
    }
    else if (min == skip + 1) {
      iMinValue_ = skip;
    }
    else {
      iMinValue_ = min;
    }
    iSkip_ = skip;
  }
  return self;
}

- (instancetype)initWithOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology
                 withOrgJodaTimeDateTimeField:(OrgJodaTimeDateTimeField *)field
                                      withInt:(jint)skip {
  return [self initOrgJodaTimeFieldSkipUndoDateTimeFieldWithOrgJodaTimeChronology:chronology withOrgJodaTimeDateTimeField:field withInt:skip];
}

- (jint)getWithLong:(jlong)millis {
  jint value = [super getWithLong:millis];
  if (value < iSkip_) {
    value++;
  }
  return value;
}

- (jlong)setWithLong:(jlong)millis
             withInt:(jint)value {
  OrgJodaTimeFieldFieldUtils_verifyValueBoundsWithOrgJodaTimeDateTimeField_withInt_withInt_withInt_(self, value, iMinValue_, [self getMaximumValue]);
  if (value <= iSkip_) {
    value--;
  }
  return [super setWithLong:millis withInt:value];
}

- (jint)getMinimumValue {
  return iMinValue_;
}

- (id)readResolve {
  return [((OrgJodaTimeDateTimeFieldType *) nil_chk([self getType])) getFieldWithOrgJodaTimeChronology:iChronology_];
}

- (void)dealloc {
  RELEASE_(iChronology_);
  [super dealloc];
}

- (void)copyAllFieldsTo:(OrgJodaTimeFieldSkipUndoDateTimeField *)other {
  [super copyAllFieldsTo:other];
  OrgJodaTimeFieldSkipUndoDateTimeField_set_iChronology_(other, iChronology_);
  other->iSkip_ = iSkip_;
  other->iMinValue_ = iMinValue_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgJodaTimeChronology:withOrgJodaTimeDateTimeField:", "SkipUndoDateTimeField", NULL, 0x1, NULL },
    { "initWithOrgJodaTimeChronology:withOrgJodaTimeDateTimeField:withInt:", "SkipUndoDateTimeField", NULL, 0x1, NULL },
    { "getWithLong:", "get", "I", 0x1, NULL },
    { "setWithLong:withInt:", "set", "J", 0x1, NULL },
    { "getMinimumValue", NULL, "I", 0x1, NULL },
    { "readResolve", NULL, "Ljava.lang.Object;", 0x2, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J", NULL, .constantValue.asLong = OrgJodaTimeFieldSkipUndoDateTimeField_serialVersionUID },
    { "iChronology_", NULL, 0x12, "Lorg.joda.time.Chronology;", NULL,  },
    { "iSkip_", NULL, 0x12, "I", NULL,  },
    { "iMinValue_", NULL, 0x82, "I", NULL,  },
  };
  static const J2ObjcClassInfo _OrgJodaTimeFieldSkipUndoDateTimeField = { 1, "SkipUndoDateTimeField", "org.joda.time.field", NULL, 0x11, 6, methods, 4, fields, 0, NULL};
  return &_OrgJodaTimeFieldSkipUndoDateTimeField;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJodaTimeFieldSkipUndoDateTimeField)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/andrewebling/Laundrapp/Joda-time-Project/joda-time/src/main/java/org/joda/time/Period.java
//

#include "AbstractPeriod.h"
#include "BasePeriod.h"
#include "Chronology.h"
#include "DateTimeConstants.h"
#include "DateTimeFieldType.h"
#include "DateTimeUtils.h"
#include "Days.h"
#include "Duration.h"
#include "DurationFieldType.h"
#include "FieldUtils.h"
#include "FromString.h"
#include "Hours.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "ISOChronology.h"
#include "ISOPeriodFormat.h"
#include "Minutes.h"
#include "Period.h"
#include "PeriodFormatter.h"
#include "PeriodType.h"
#include "ReadableDuration.h"
#include "ReadableInstant.h"
#include "ReadablePartial.h"
#include "ReadablePeriod.h"
#include "Seconds.h"
#include "Weeks.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/UnsupportedOperationException.h"

BOOL OrgJodaTimePeriod_initialized = NO;

@implementation OrgJodaTimePeriod

OrgJodaTimePeriod * OrgJodaTimePeriod_ZERO_;

+ (OrgJodaTimePeriod *)parseWithNSString:(NSString *)str {
  return [OrgJodaTimePeriod parseWithNSString:str withOrgJodaTimeFormatPeriodFormatter:[OrgJodaTimeFormatISOPeriodFormat standard]];
}

+ (OrgJodaTimePeriod *)parseWithNSString:(NSString *)str
    withOrgJodaTimeFormatPeriodFormatter:(OrgJodaTimeFormatPeriodFormatter *)formatter {
  return [((OrgJodaTimeFormatPeriodFormatter *) nil_chk(formatter)) parsePeriodWithNSString:str];
}

+ (OrgJodaTimePeriod *)yearsWithInt:(int)years {
  return [[OrgJodaTimePeriod alloc] initWithIntArray:[IOSIntArray arrayWithInts:(int[]){ years, 0, 0, 0, 0, 0, 0, 0, 0 } count:9] withOrgJodaTimePeriodType:[OrgJodaTimePeriodType standard]];
}

+ (OrgJodaTimePeriod *)monthsWithInt:(int)months {
  return [[OrgJodaTimePeriod alloc] initWithIntArray:[IOSIntArray arrayWithInts:(int[]){ 0, months, 0, 0, 0, 0, 0, 0 } count:8] withOrgJodaTimePeriodType:[OrgJodaTimePeriodType standard]];
}

+ (OrgJodaTimePeriod *)weeksWithInt:(int)weeks {
  return [[OrgJodaTimePeriod alloc] initWithIntArray:[IOSIntArray arrayWithInts:(int[]){ 0, 0, weeks, 0, 0, 0, 0, 0 } count:8] withOrgJodaTimePeriodType:[OrgJodaTimePeriodType standard]];
}

+ (OrgJodaTimePeriod *)daysWithInt:(int)days {
  return [[OrgJodaTimePeriod alloc] initWithIntArray:[IOSIntArray arrayWithInts:(int[]){ 0, 0, 0, days, 0, 0, 0, 0 } count:8] withOrgJodaTimePeriodType:[OrgJodaTimePeriodType standard]];
}

+ (OrgJodaTimePeriod *)hoursWithInt:(int)hours {
  return [[OrgJodaTimePeriod alloc] initWithIntArray:[IOSIntArray arrayWithInts:(int[]){ 0, 0, 0, 0, hours, 0, 0, 0 } count:8] withOrgJodaTimePeriodType:[OrgJodaTimePeriodType standard]];
}

+ (OrgJodaTimePeriod *)minutesWithInt:(int)minutes {
  return [[OrgJodaTimePeriod alloc] initWithIntArray:[IOSIntArray arrayWithInts:(int[]){ 0, 0, 0, 0, 0, minutes, 0, 0 } count:8] withOrgJodaTimePeriodType:[OrgJodaTimePeriodType standard]];
}

+ (OrgJodaTimePeriod *)secondsWithInt:(int)seconds {
  return [[OrgJodaTimePeriod alloc] initWithIntArray:[IOSIntArray arrayWithInts:(int[]){ 0, 0, 0, 0, 0, 0, seconds, 0 } count:8] withOrgJodaTimePeriodType:[OrgJodaTimePeriodType standard]];
}

+ (OrgJodaTimePeriod *)millisWithInt:(int)millis {
  return [[OrgJodaTimePeriod alloc] initWithIntArray:[IOSIntArray arrayWithInts:(int[]){ 0, 0, 0, 0, 0, 0, 0, millis } count:8] withOrgJodaTimePeriodType:[OrgJodaTimePeriodType standard]];
}

+ (OrgJodaTimePeriod *)fieldDifferenceWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)start
                                      withOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)end {
  if (start == nil || end == nil) {
    @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:@"ReadablePartial objects must not be null"];
  }
  if ([((id<OrgJodaTimeReadablePartial>) nil_chk(start)) size] != [((id<OrgJodaTimeReadablePartial>) nil_chk(end)) size]) {
    @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:@"ReadablePartial objects must have the same set of fields"];
  }
  IOSObjectArray *types = [IOSObjectArray arrayWithLength:[start size] type:[IOSClass classWithClass:[OrgJodaTimeDurationFieldType class]]];
  IOSIntArray *values = [IOSIntArray arrayWithLength:[start size]];
  for (int i = 0, isize = [start size]; i < isize; i++) {
    if ([start getFieldTypeWithInt:i] != [end getFieldTypeWithInt:i]) {
      @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:@"ReadablePartial objects must have the same set of fields"];
    }
    (void) IOSObjectArray_Set(types, i, [((OrgJodaTimeDateTimeFieldType *) nil_chk([start getFieldTypeWithInt:i])) getDurationType]);
    if (i > 0 && IOSObjectArray_Get(types, i - 1) == IOSObjectArray_Get(types, i)) {
      @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:@"ReadablePartial objects must not have overlapping fields"];
    }
    (*IOSIntArray_GetRef(values, i)) = [end getValueWithInt:i] - [start getValueWithInt:i];
  }
  return [[OrgJodaTimePeriod alloc] initWithIntArray:values withOrgJodaTimePeriodType:[OrgJodaTimePeriodType forFieldsWithOrgJodaTimeDurationFieldTypeArray:types]];
}

- (instancetype)init {
  return [super initWithLong:0LL withOrgJodaTimePeriodType:nil withOrgJodaTimeChronology:nil];
}

- (instancetype)initWithInt:(int)hours
                    withInt:(int)minutes
                    withInt:(int)seconds
                    withInt:(int)millis {
  return [super initWithInt:0 withInt:0 withInt:0 withInt:0 withInt:hours withInt:minutes withInt:seconds withInt:millis withOrgJodaTimePeriodType:[OrgJodaTimePeriodType standard]];
}

- (instancetype)initWithInt:(int)years
                    withInt:(int)months
                    withInt:(int)weeks
                    withInt:(int)days
                    withInt:(int)hours
                    withInt:(int)minutes
                    withInt:(int)seconds
                    withInt:(int)millis {
  return [super initWithInt:years withInt:months withInt:weeks withInt:days withInt:hours withInt:minutes withInt:seconds withInt:millis withOrgJodaTimePeriodType:[OrgJodaTimePeriodType standard]];
}

- (instancetype)initWithInt:(int)years
                    withInt:(int)months
                    withInt:(int)weeks
                    withInt:(int)days
                    withInt:(int)hours
                    withInt:(int)minutes
                    withInt:(int)seconds
                    withInt:(int)millis
  withOrgJodaTimePeriodType:(OrgJodaTimePeriodType *)type {
  return [super initWithInt:years withInt:months withInt:weeks withInt:days withInt:hours withInt:minutes withInt:seconds withInt:millis withOrgJodaTimePeriodType:type];
}

- (instancetype)initWithLong:(long long int)duration {
  return [super initWithLong:duration];
}

- (instancetype)initWithLong:(long long int)duration
   withOrgJodaTimePeriodType:(OrgJodaTimePeriodType *)type {
  return [super initWithLong:duration withOrgJodaTimePeriodType:type withOrgJodaTimeChronology:nil];
}

- (instancetype)initWithLong:(long long int)duration
   withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology {
  return [super initWithLong:duration withOrgJodaTimePeriodType:nil withOrgJodaTimeChronology:chronology];
}

- (instancetype)initWithLong:(long long int)duration
   withOrgJodaTimePeriodType:(OrgJodaTimePeriodType *)type
   withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chronology {
  return [super initWithLong:duration withOrgJodaTimePeriodType:type withOrgJodaTimeChronology:chronology];
}

- (instancetype)initWithLong:(long long int)startInstant
                    withLong:(long long int)endInstant {
  return [super initWithLong:startInstant withLong:endInstant withOrgJodaTimePeriodType:nil withOrgJodaTimeChronology:nil];
}

- (instancetype)initWithLong:(long long int)startInstant
                    withLong:(long long int)endInstant
   withOrgJodaTimePeriodType:(OrgJodaTimePeriodType *)type {
  return [super initWithLong:startInstant withLong:endInstant withOrgJodaTimePeriodType:type withOrgJodaTimeChronology:nil];
}

- (instancetype)initWithLong:(long long int)startInstant
                    withLong:(long long int)endInstant
   withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono {
  return [super initWithLong:startInstant withLong:endInstant withOrgJodaTimePeriodType:nil withOrgJodaTimeChronology:chrono];
}

- (instancetype)initWithLong:(long long int)startInstant
                    withLong:(long long int)endInstant
   withOrgJodaTimePeriodType:(OrgJodaTimePeriodType *)type
   withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono {
  return [super initWithLong:startInstant withLong:endInstant withOrgJodaTimePeriodType:type withOrgJodaTimeChronology:chrono];
}

- (instancetype)initWithOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)startInstant
                    withOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)endInstant {
  return [super initWithOrgJodaTimeReadableInstant:startInstant withOrgJodaTimeReadableInstant:endInstant withOrgJodaTimePeriodType:nil];
}

- (instancetype)initWithOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)startInstant
                    withOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)endInstant
                         withOrgJodaTimePeriodType:(OrgJodaTimePeriodType *)type {
  return [super initWithOrgJodaTimeReadableInstant:startInstant withOrgJodaTimeReadableInstant:endInstant withOrgJodaTimePeriodType:type];
}

- (instancetype)initWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)start
                    withOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)end {
  return [super initWithOrgJodaTimeReadablePartial:start withOrgJodaTimeReadablePartial:end withOrgJodaTimePeriodType:nil];
}

- (instancetype)initWithOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)start
                    withOrgJodaTimeReadablePartial:(id<OrgJodaTimeReadablePartial>)end
                         withOrgJodaTimePeriodType:(OrgJodaTimePeriodType *)type {
  return [super initWithOrgJodaTimeReadablePartial:start withOrgJodaTimeReadablePartial:end withOrgJodaTimePeriodType:type];
}

- (instancetype)initWithOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)startInstant
                   withOrgJodaTimeReadableDuration:(id<OrgJodaTimeReadableDuration>)duration {
  return [super initWithOrgJodaTimeReadableInstant:startInstant withOrgJodaTimeReadableDuration:duration withOrgJodaTimePeriodType:nil];
}

- (instancetype)initWithOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)startInstant
                   withOrgJodaTimeReadableDuration:(id<OrgJodaTimeReadableDuration>)duration
                         withOrgJodaTimePeriodType:(OrgJodaTimePeriodType *)type {
  return [super initWithOrgJodaTimeReadableInstant:startInstant withOrgJodaTimeReadableDuration:duration withOrgJodaTimePeriodType:type];
}

- (instancetype)initWithOrgJodaTimeReadableDuration:(id<OrgJodaTimeReadableDuration>)duration
                     withOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)endInstant {
  return [super initWithOrgJodaTimeReadableDuration:duration withOrgJodaTimeReadableInstant:endInstant withOrgJodaTimePeriodType:nil];
}

- (instancetype)initWithOrgJodaTimeReadableDuration:(id<OrgJodaTimeReadableDuration>)duration
                     withOrgJodaTimeReadableInstant:(id<OrgJodaTimeReadableInstant>)endInstant
                          withOrgJodaTimePeriodType:(OrgJodaTimePeriodType *)type {
  return [super initWithOrgJodaTimeReadableDuration:duration withOrgJodaTimeReadableInstant:endInstant withOrgJodaTimePeriodType:type];
}

- (instancetype)initWithId:(id)period {
  return [super initWithId:period withOrgJodaTimePeriodType:nil withOrgJodaTimeChronology:nil];
}

- (instancetype)initWithId:(id)period
 withOrgJodaTimePeriodType:(OrgJodaTimePeriodType *)type {
  return [super initWithId:period withOrgJodaTimePeriodType:type withOrgJodaTimeChronology:nil];
}

- (instancetype)initWithId:(id)period
 withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono {
  return [super initWithId:period withOrgJodaTimePeriodType:nil withOrgJodaTimeChronology:chrono];
}

- (instancetype)initWithId:(id)period
 withOrgJodaTimePeriodType:(OrgJodaTimePeriodType *)type
 withOrgJodaTimeChronology:(OrgJodaTimeChronology *)chrono {
  return [super initWithId:period withOrgJodaTimePeriodType:type withOrgJodaTimeChronology:chrono];
}

- (instancetype)initWithIntArray:(IOSIntArray *)values
       withOrgJodaTimePeriodType:(OrgJodaTimePeriodType *)type {
  return [super initWithIntArray:values withOrgJodaTimePeriodType:type];
}

- (OrgJodaTimePeriod *)toPeriod {
  return self;
}

- (int)getYears {
  return [((OrgJodaTimePeriodType *) nil_chk([self getPeriodType])) getIndexedFieldWithOrgJodaTimeReadablePeriod:self withInt:OrgJodaTimePeriodType_get_YEAR_INDEX_()];
}

- (int)getMonths {
  return [((OrgJodaTimePeriodType *) nil_chk([self getPeriodType])) getIndexedFieldWithOrgJodaTimeReadablePeriod:self withInt:OrgJodaTimePeriodType_get_MONTH_INDEX_()];
}

- (int)getWeeks {
  return [((OrgJodaTimePeriodType *) nil_chk([self getPeriodType])) getIndexedFieldWithOrgJodaTimeReadablePeriod:self withInt:OrgJodaTimePeriodType_get_WEEK_INDEX_()];
}

- (int)getDays {
  return [((OrgJodaTimePeriodType *) nil_chk([self getPeriodType])) getIndexedFieldWithOrgJodaTimeReadablePeriod:self withInt:OrgJodaTimePeriodType_get_DAY_INDEX_()];
}

- (int)getHours {
  return [((OrgJodaTimePeriodType *) nil_chk([self getPeriodType])) getIndexedFieldWithOrgJodaTimeReadablePeriod:self withInt:OrgJodaTimePeriodType_get_HOUR_INDEX_()];
}

- (int)getMinutes {
  return [((OrgJodaTimePeriodType *) nil_chk([self getPeriodType])) getIndexedFieldWithOrgJodaTimeReadablePeriod:self withInt:OrgJodaTimePeriodType_get_MINUTE_INDEX_()];
}

- (int)getSeconds {
  return [((OrgJodaTimePeriodType *) nil_chk([self getPeriodType])) getIndexedFieldWithOrgJodaTimeReadablePeriod:self withInt:OrgJodaTimePeriodType_get_SECOND_INDEX_()];
}

- (int)getMillis {
  return [((OrgJodaTimePeriodType *) nil_chk([self getPeriodType])) getIndexedFieldWithOrgJodaTimeReadablePeriod:self withInt:OrgJodaTimePeriodType_get_MILLI_INDEX_()];
}

- (OrgJodaTimePeriod *)withPeriodTypeWithOrgJodaTimePeriodType:(OrgJodaTimePeriodType *)type {
  type = [OrgJodaTimeDateTimeUtils getPeriodTypeWithOrgJodaTimePeriodType:type];
  if ([((OrgJodaTimePeriodType *) nil_chk(type)) isEqual:[self getPeriodType]]) {
    return self;
  }
  return [[OrgJodaTimePeriod alloc] initWithId:self withOrgJodaTimePeriodType:type];
}

- (OrgJodaTimePeriod *)withFieldsWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period {
  if (period == nil) {
    return self;
  }
  IOSIntArray *newValues = [self getValues];
  newValues = [super mergePeriodIntoWithIntArray:newValues withOrgJodaTimeReadablePeriod:period];
  return [[OrgJodaTimePeriod alloc] initWithIntArray:newValues withOrgJodaTimePeriodType:[self getPeriodType]];
}

- (OrgJodaTimePeriod *)withFieldWithOrgJodaTimeDurationFieldType:(OrgJodaTimeDurationFieldType *)field
                                                         withInt:(int)value {
  if (field == nil) {
    @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:@"Field must not be null"];
  }
  IOSIntArray *newValues = [self getValues];
  [super setFieldIntoWithIntArray:newValues withOrgJodaTimeDurationFieldType:field withInt:value];
  return [[OrgJodaTimePeriod alloc] initWithIntArray:newValues withOrgJodaTimePeriodType:[self getPeriodType]];
}

- (OrgJodaTimePeriod *)withFieldAddedWithOrgJodaTimeDurationFieldType:(OrgJodaTimeDurationFieldType *)field
                                                              withInt:(int)value {
  if (field == nil) {
    @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:@"Field must not be null"];
  }
  if (value == 0) {
    return self;
  }
  IOSIntArray *newValues = [self getValues];
  [super addFieldIntoWithIntArray:newValues withOrgJodaTimeDurationFieldType:field withInt:value];
  return [[OrgJodaTimePeriod alloc] initWithIntArray:newValues withOrgJodaTimePeriodType:[self getPeriodType]];
}

- (OrgJodaTimePeriod *)withYearsWithInt:(int)years {
  IOSIntArray *values = [self getValues];
  [((OrgJodaTimePeriodType *) nil_chk([self getPeriodType])) setIndexedFieldWithOrgJodaTimeReadablePeriod:self withInt:OrgJodaTimePeriodType_get_YEAR_INDEX_() withIntArray:values withInt:years];
  return [[OrgJodaTimePeriod alloc] initWithIntArray:values withOrgJodaTimePeriodType:[self getPeriodType]];
}

- (OrgJodaTimePeriod *)withMonthsWithInt:(int)months {
  IOSIntArray *values = [self getValues];
  [((OrgJodaTimePeriodType *) nil_chk([self getPeriodType])) setIndexedFieldWithOrgJodaTimeReadablePeriod:self withInt:OrgJodaTimePeriodType_get_MONTH_INDEX_() withIntArray:values withInt:months];
  return [[OrgJodaTimePeriod alloc] initWithIntArray:values withOrgJodaTimePeriodType:[self getPeriodType]];
}

- (OrgJodaTimePeriod *)withWeeksWithInt:(int)weeks {
  IOSIntArray *values = [self getValues];
  [((OrgJodaTimePeriodType *) nil_chk([self getPeriodType])) setIndexedFieldWithOrgJodaTimeReadablePeriod:self withInt:OrgJodaTimePeriodType_get_WEEK_INDEX_() withIntArray:values withInt:weeks];
  return [[OrgJodaTimePeriod alloc] initWithIntArray:values withOrgJodaTimePeriodType:[self getPeriodType]];
}

- (OrgJodaTimePeriod *)withDaysWithInt:(int)days {
  IOSIntArray *values = [self getValues];
  [((OrgJodaTimePeriodType *) nil_chk([self getPeriodType])) setIndexedFieldWithOrgJodaTimeReadablePeriod:self withInt:OrgJodaTimePeriodType_get_DAY_INDEX_() withIntArray:values withInt:days];
  return [[OrgJodaTimePeriod alloc] initWithIntArray:values withOrgJodaTimePeriodType:[self getPeriodType]];
}

- (OrgJodaTimePeriod *)withHoursWithInt:(int)hours {
  IOSIntArray *values = [self getValues];
  [((OrgJodaTimePeriodType *) nil_chk([self getPeriodType])) setIndexedFieldWithOrgJodaTimeReadablePeriod:self withInt:OrgJodaTimePeriodType_get_HOUR_INDEX_() withIntArray:values withInt:hours];
  return [[OrgJodaTimePeriod alloc] initWithIntArray:values withOrgJodaTimePeriodType:[self getPeriodType]];
}

- (OrgJodaTimePeriod *)withMinutesWithInt:(int)minutes {
  IOSIntArray *values = [self getValues];
  [((OrgJodaTimePeriodType *) nil_chk([self getPeriodType])) setIndexedFieldWithOrgJodaTimeReadablePeriod:self withInt:OrgJodaTimePeriodType_get_MINUTE_INDEX_() withIntArray:values withInt:minutes];
  return [[OrgJodaTimePeriod alloc] initWithIntArray:values withOrgJodaTimePeriodType:[self getPeriodType]];
}

- (OrgJodaTimePeriod *)withSecondsWithInt:(int)seconds {
  IOSIntArray *values = [self getValues];
  [((OrgJodaTimePeriodType *) nil_chk([self getPeriodType])) setIndexedFieldWithOrgJodaTimeReadablePeriod:self withInt:OrgJodaTimePeriodType_get_SECOND_INDEX_() withIntArray:values withInt:seconds];
  return [[OrgJodaTimePeriod alloc] initWithIntArray:values withOrgJodaTimePeriodType:[self getPeriodType]];
}

- (OrgJodaTimePeriod *)withMillisWithInt:(int)millis {
  IOSIntArray *values = [self getValues];
  [((OrgJodaTimePeriodType *) nil_chk([self getPeriodType])) setIndexedFieldWithOrgJodaTimeReadablePeriod:self withInt:OrgJodaTimePeriodType_get_MILLI_INDEX_() withIntArray:values withInt:millis];
  return [[OrgJodaTimePeriod alloc] initWithIntArray:values withOrgJodaTimePeriodType:[self getPeriodType]];
}

- (OrgJodaTimePeriod *)plusWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period {
  if (period == nil) {
    return self;
  }
  IOSIntArray *values = [self getValues];
  [((OrgJodaTimePeriodType *) nil_chk([self getPeriodType])) addIndexedFieldWithOrgJodaTimeReadablePeriod:self withInt:OrgJodaTimePeriodType_get_YEAR_INDEX_() withIntArray:values withInt:[((id<OrgJodaTimeReadablePeriod>) nil_chk(period)) getWithOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_get_YEARS_TYPE_()]];
  [((OrgJodaTimePeriodType *) nil_chk([self getPeriodType])) addIndexedFieldWithOrgJodaTimeReadablePeriod:self withInt:OrgJodaTimePeriodType_get_MONTH_INDEX_() withIntArray:values withInt:[period getWithOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_get_MONTHS_TYPE_()]];
  [((OrgJodaTimePeriodType *) nil_chk([self getPeriodType])) addIndexedFieldWithOrgJodaTimeReadablePeriod:self withInt:OrgJodaTimePeriodType_get_WEEK_INDEX_() withIntArray:values withInt:[period getWithOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_get_WEEKS_TYPE_()]];
  [((OrgJodaTimePeriodType *) nil_chk([self getPeriodType])) addIndexedFieldWithOrgJodaTimeReadablePeriod:self withInt:OrgJodaTimePeriodType_get_DAY_INDEX_() withIntArray:values withInt:[period getWithOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_get_DAYS_TYPE_()]];
  [((OrgJodaTimePeriodType *) nil_chk([self getPeriodType])) addIndexedFieldWithOrgJodaTimeReadablePeriod:self withInt:OrgJodaTimePeriodType_get_HOUR_INDEX_() withIntArray:values withInt:[period getWithOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_get_HOURS_TYPE_()]];
  [((OrgJodaTimePeriodType *) nil_chk([self getPeriodType])) addIndexedFieldWithOrgJodaTimeReadablePeriod:self withInt:OrgJodaTimePeriodType_get_MINUTE_INDEX_() withIntArray:values withInt:[period getWithOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_get_MINUTES_TYPE_()]];
  [((OrgJodaTimePeriodType *) nil_chk([self getPeriodType])) addIndexedFieldWithOrgJodaTimeReadablePeriod:self withInt:OrgJodaTimePeriodType_get_SECOND_INDEX_() withIntArray:values withInt:[period getWithOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_get_SECONDS_TYPE_()]];
  [((OrgJodaTimePeriodType *) nil_chk([self getPeriodType])) addIndexedFieldWithOrgJodaTimeReadablePeriod:self withInt:OrgJodaTimePeriodType_get_MILLI_INDEX_() withIntArray:values withInt:[period getWithOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_get_MILLIS_TYPE_()]];
  return [[OrgJodaTimePeriod alloc] initWithIntArray:values withOrgJodaTimePeriodType:[self getPeriodType]];
}

- (OrgJodaTimePeriod *)plusYearsWithInt:(int)years {
  if (years == 0) {
    return self;
  }
  IOSIntArray *values = [self getValues];
  [((OrgJodaTimePeriodType *) nil_chk([self getPeriodType])) addIndexedFieldWithOrgJodaTimeReadablePeriod:self withInt:OrgJodaTimePeriodType_get_YEAR_INDEX_() withIntArray:values withInt:years];
  return [[OrgJodaTimePeriod alloc] initWithIntArray:values withOrgJodaTimePeriodType:[self getPeriodType]];
}

- (OrgJodaTimePeriod *)plusMonthsWithInt:(int)months {
  if (months == 0) {
    return self;
  }
  IOSIntArray *values = [self getValues];
  [((OrgJodaTimePeriodType *) nil_chk([self getPeriodType])) addIndexedFieldWithOrgJodaTimeReadablePeriod:self withInt:OrgJodaTimePeriodType_get_MONTH_INDEX_() withIntArray:values withInt:months];
  return [[OrgJodaTimePeriod alloc] initWithIntArray:values withOrgJodaTimePeriodType:[self getPeriodType]];
}

- (OrgJodaTimePeriod *)plusWeeksWithInt:(int)weeks {
  if (weeks == 0) {
    return self;
  }
  IOSIntArray *values = [self getValues];
  [((OrgJodaTimePeriodType *) nil_chk([self getPeriodType])) addIndexedFieldWithOrgJodaTimeReadablePeriod:self withInt:OrgJodaTimePeriodType_get_WEEK_INDEX_() withIntArray:values withInt:weeks];
  return [[OrgJodaTimePeriod alloc] initWithIntArray:values withOrgJodaTimePeriodType:[self getPeriodType]];
}

- (OrgJodaTimePeriod *)plusDaysWithInt:(int)days {
  if (days == 0) {
    return self;
  }
  IOSIntArray *values = [self getValues];
  [((OrgJodaTimePeriodType *) nil_chk([self getPeriodType])) addIndexedFieldWithOrgJodaTimeReadablePeriod:self withInt:OrgJodaTimePeriodType_get_DAY_INDEX_() withIntArray:values withInt:days];
  return [[OrgJodaTimePeriod alloc] initWithIntArray:values withOrgJodaTimePeriodType:[self getPeriodType]];
}

- (OrgJodaTimePeriod *)plusHoursWithInt:(int)hours {
  if (hours == 0) {
    return self;
  }
  IOSIntArray *values = [self getValues];
  [((OrgJodaTimePeriodType *) nil_chk([self getPeriodType])) addIndexedFieldWithOrgJodaTimeReadablePeriod:self withInt:OrgJodaTimePeriodType_get_HOUR_INDEX_() withIntArray:values withInt:hours];
  return [[OrgJodaTimePeriod alloc] initWithIntArray:values withOrgJodaTimePeriodType:[self getPeriodType]];
}

- (OrgJodaTimePeriod *)plusMinutesWithInt:(int)minutes {
  if (minutes == 0) {
    return self;
  }
  IOSIntArray *values = [self getValues];
  [((OrgJodaTimePeriodType *) nil_chk([self getPeriodType])) addIndexedFieldWithOrgJodaTimeReadablePeriod:self withInt:OrgJodaTimePeriodType_get_MINUTE_INDEX_() withIntArray:values withInt:minutes];
  return [[OrgJodaTimePeriod alloc] initWithIntArray:values withOrgJodaTimePeriodType:[self getPeriodType]];
}

- (OrgJodaTimePeriod *)plusSecondsWithInt:(int)seconds {
  if (seconds == 0) {
    return self;
  }
  IOSIntArray *values = [self getValues];
  [((OrgJodaTimePeriodType *) nil_chk([self getPeriodType])) addIndexedFieldWithOrgJodaTimeReadablePeriod:self withInt:OrgJodaTimePeriodType_get_SECOND_INDEX_() withIntArray:values withInt:seconds];
  return [[OrgJodaTimePeriod alloc] initWithIntArray:values withOrgJodaTimePeriodType:[self getPeriodType]];
}

- (OrgJodaTimePeriod *)plusMillisWithInt:(int)millis {
  if (millis == 0) {
    return self;
  }
  IOSIntArray *values = [self getValues];
  [((OrgJodaTimePeriodType *) nil_chk([self getPeriodType])) addIndexedFieldWithOrgJodaTimeReadablePeriod:self withInt:OrgJodaTimePeriodType_get_MILLI_INDEX_() withIntArray:values withInt:millis];
  return [[OrgJodaTimePeriod alloc] initWithIntArray:values withOrgJodaTimePeriodType:[self getPeriodType]];
}

- (OrgJodaTimePeriod *)minusWithOrgJodaTimeReadablePeriod:(id<OrgJodaTimeReadablePeriod>)period {
  if (period == nil) {
    return self;
  }
  IOSIntArray *values = [self getValues];
  [((OrgJodaTimePeriodType *) nil_chk([self getPeriodType])) addIndexedFieldWithOrgJodaTimeReadablePeriod:self withInt:OrgJodaTimePeriodType_get_YEAR_INDEX_() withIntArray:values withInt:-[((id<OrgJodaTimeReadablePeriod>) nil_chk(period)) getWithOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_get_YEARS_TYPE_()]];
  [((OrgJodaTimePeriodType *) nil_chk([self getPeriodType])) addIndexedFieldWithOrgJodaTimeReadablePeriod:self withInt:OrgJodaTimePeriodType_get_MONTH_INDEX_() withIntArray:values withInt:-[period getWithOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_get_MONTHS_TYPE_()]];
  [((OrgJodaTimePeriodType *) nil_chk([self getPeriodType])) addIndexedFieldWithOrgJodaTimeReadablePeriod:self withInt:OrgJodaTimePeriodType_get_WEEK_INDEX_() withIntArray:values withInt:-[period getWithOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_get_WEEKS_TYPE_()]];
  [((OrgJodaTimePeriodType *) nil_chk([self getPeriodType])) addIndexedFieldWithOrgJodaTimeReadablePeriod:self withInt:OrgJodaTimePeriodType_get_DAY_INDEX_() withIntArray:values withInt:-[period getWithOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_get_DAYS_TYPE_()]];
  [((OrgJodaTimePeriodType *) nil_chk([self getPeriodType])) addIndexedFieldWithOrgJodaTimeReadablePeriod:self withInt:OrgJodaTimePeriodType_get_HOUR_INDEX_() withIntArray:values withInt:-[period getWithOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_get_HOURS_TYPE_()]];
  [((OrgJodaTimePeriodType *) nil_chk([self getPeriodType])) addIndexedFieldWithOrgJodaTimeReadablePeriod:self withInt:OrgJodaTimePeriodType_get_MINUTE_INDEX_() withIntArray:values withInt:-[period getWithOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_get_MINUTES_TYPE_()]];
  [((OrgJodaTimePeriodType *) nil_chk([self getPeriodType])) addIndexedFieldWithOrgJodaTimeReadablePeriod:self withInt:OrgJodaTimePeriodType_get_SECOND_INDEX_() withIntArray:values withInt:-[period getWithOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_get_SECONDS_TYPE_()]];
  [((OrgJodaTimePeriodType *) nil_chk([self getPeriodType])) addIndexedFieldWithOrgJodaTimeReadablePeriod:self withInt:OrgJodaTimePeriodType_get_MILLI_INDEX_() withIntArray:values withInt:-[period getWithOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_get_MILLIS_TYPE_()]];
  return [[OrgJodaTimePeriod alloc] initWithIntArray:values withOrgJodaTimePeriodType:[self getPeriodType]];
}

- (OrgJodaTimePeriod *)minusYearsWithInt:(int)years {
  return [self plusYearsWithInt:-years];
}

- (OrgJodaTimePeriod *)minusMonthsWithInt:(int)months {
  return [self plusMonthsWithInt:-months];
}

- (OrgJodaTimePeriod *)minusWeeksWithInt:(int)weeks {
  return [self plusWeeksWithInt:-weeks];
}

- (OrgJodaTimePeriod *)minusDaysWithInt:(int)days {
  return [self plusDaysWithInt:-days];
}

- (OrgJodaTimePeriod *)minusHoursWithInt:(int)hours {
  return [self plusHoursWithInt:-hours];
}

- (OrgJodaTimePeriod *)minusMinutesWithInt:(int)minutes {
  return [self plusMinutesWithInt:-minutes];
}

- (OrgJodaTimePeriod *)minusSecondsWithInt:(int)seconds {
  return [self plusSecondsWithInt:-seconds];
}

- (OrgJodaTimePeriod *)minusMillisWithInt:(int)millis {
  return [self plusMillisWithInt:-millis];
}

- (OrgJodaTimePeriod *)multipliedByWithInt:(int)scalar {
  if (self == OrgJodaTimePeriod_ZERO_ || scalar == 1) {
    return self;
  }
  IOSIntArray *values = [self getValues];
  for (int i = 0; i < (int) [((IOSIntArray *) nil_chk(values)) count]; i++) {
    (*IOSIntArray_GetRef(values, i)) = [OrgJodaTimeFieldFieldUtils safeMultiplyWithInt:IOSIntArray_Get(values, i) withInt:scalar];
  }
  return [[OrgJodaTimePeriod alloc] initWithIntArray:values withOrgJodaTimePeriodType:[self getPeriodType]];
}

- (OrgJodaTimePeriod *)negated {
  return [self multipliedByWithInt:-1];
}

- (OrgJodaTimeWeeks *)toStandardWeeks {
  [self checkYearsAndMonthsWithNSString:@"Weeks"];
  long long int millis = [self getMillis];
  millis += ((long long int) [self getSeconds]) * OrgJodaTimeDateTimeConstants_MILLIS_PER_SECOND;
  millis += ((long long int) [self getMinutes]) * OrgJodaTimeDateTimeConstants_MILLIS_PER_MINUTE;
  millis += ((long long int) [self getHours]) * OrgJodaTimeDateTimeConstants_MILLIS_PER_HOUR;
  millis += ((long long int) [self getDays]) * OrgJodaTimeDateTimeConstants_MILLIS_PER_DAY;
  long long int weeks = ((long long int) [self getWeeks]) + millis / OrgJodaTimeDateTimeConstants_MILLIS_PER_WEEK;
  return [OrgJodaTimeWeeks weeksWithInt:[OrgJodaTimeFieldFieldUtils safeToIntWithLong:weeks]];
}

- (OrgJodaTimeDays *)toStandardDays {
  [self checkYearsAndMonthsWithNSString:@"Days"];
  long long int millis = [self getMillis];
  millis += ((long long int) [self getSeconds]) * OrgJodaTimeDateTimeConstants_MILLIS_PER_SECOND;
  millis += ((long long int) [self getMinutes]) * OrgJodaTimeDateTimeConstants_MILLIS_PER_MINUTE;
  millis += ((long long int) [self getHours]) * OrgJodaTimeDateTimeConstants_MILLIS_PER_HOUR;
  long long int days = millis / OrgJodaTimeDateTimeConstants_MILLIS_PER_DAY;
  days = [OrgJodaTimeFieldFieldUtils safeAddWithLong:days withLong:[self getDays]];
  days = [OrgJodaTimeFieldFieldUtils safeAddWithLong:days withLong:((long long int) [self getWeeks]) * ((long long int) OrgJodaTimeDateTimeConstants_DAYS_PER_WEEK)];
  return [OrgJodaTimeDays daysWithInt:[OrgJodaTimeFieldFieldUtils safeToIntWithLong:days]];
}

- (OrgJodaTimeHours *)toStandardHours {
  [self checkYearsAndMonthsWithNSString:@"Hours"];
  long long int millis = [self getMillis];
  millis += ((long long int) [self getSeconds]) * OrgJodaTimeDateTimeConstants_MILLIS_PER_SECOND;
  millis += ((long long int) [self getMinutes]) * OrgJodaTimeDateTimeConstants_MILLIS_PER_MINUTE;
  long long int hours = millis / OrgJodaTimeDateTimeConstants_MILLIS_PER_HOUR;
  hours = [OrgJodaTimeFieldFieldUtils safeAddWithLong:hours withLong:[self getHours]];
  hours = [OrgJodaTimeFieldFieldUtils safeAddWithLong:hours withLong:((long long int) [self getDays]) * ((long long int) OrgJodaTimeDateTimeConstants_HOURS_PER_DAY)];
  hours = [OrgJodaTimeFieldFieldUtils safeAddWithLong:hours withLong:((long long int) [self getWeeks]) * ((long long int) OrgJodaTimeDateTimeConstants_HOURS_PER_WEEK)];
  return [OrgJodaTimeHours hoursWithInt:[OrgJodaTimeFieldFieldUtils safeToIntWithLong:hours]];
}

- (OrgJodaTimeMinutes *)toStandardMinutes {
  [self checkYearsAndMonthsWithNSString:@"Minutes"];
  long long int millis = [self getMillis];
  millis += ((long long int) [self getSeconds]) * OrgJodaTimeDateTimeConstants_MILLIS_PER_SECOND;
  long long int minutes = millis / OrgJodaTimeDateTimeConstants_MILLIS_PER_MINUTE;
  minutes = [OrgJodaTimeFieldFieldUtils safeAddWithLong:minutes withLong:[self getMinutes]];
  minutes = [OrgJodaTimeFieldFieldUtils safeAddWithLong:minutes withLong:((long long int) [self getHours]) * ((long long int) OrgJodaTimeDateTimeConstants_MINUTES_PER_HOUR)];
  minutes = [OrgJodaTimeFieldFieldUtils safeAddWithLong:minutes withLong:((long long int) [self getDays]) * ((long long int) OrgJodaTimeDateTimeConstants_MINUTES_PER_DAY)];
  minutes = [OrgJodaTimeFieldFieldUtils safeAddWithLong:minutes withLong:((long long int) [self getWeeks]) * ((long long int) OrgJodaTimeDateTimeConstants_MINUTES_PER_WEEK)];
  return [OrgJodaTimeMinutes minutesWithInt:[OrgJodaTimeFieldFieldUtils safeToIntWithLong:minutes]];
}

- (OrgJodaTimeSeconds *)toStandardSeconds {
  [self checkYearsAndMonthsWithNSString:@"Seconds"];
  long long int seconds = [self getMillis] / OrgJodaTimeDateTimeConstants_MILLIS_PER_SECOND;
  seconds = [OrgJodaTimeFieldFieldUtils safeAddWithLong:seconds withLong:[self getSeconds]];
  seconds = [OrgJodaTimeFieldFieldUtils safeAddWithLong:seconds withLong:((long long int) [self getMinutes]) * ((long long int) OrgJodaTimeDateTimeConstants_SECONDS_PER_MINUTE)];
  seconds = [OrgJodaTimeFieldFieldUtils safeAddWithLong:seconds withLong:((long long int) [self getHours]) * ((long long int) OrgJodaTimeDateTimeConstants_SECONDS_PER_HOUR)];
  seconds = [OrgJodaTimeFieldFieldUtils safeAddWithLong:seconds withLong:((long long int) [self getDays]) * ((long long int) OrgJodaTimeDateTimeConstants_SECONDS_PER_DAY)];
  seconds = [OrgJodaTimeFieldFieldUtils safeAddWithLong:seconds withLong:((long long int) [self getWeeks]) * ((long long int) OrgJodaTimeDateTimeConstants_SECONDS_PER_WEEK)];
  return [OrgJodaTimeSeconds secondsWithInt:[OrgJodaTimeFieldFieldUtils safeToIntWithLong:seconds]];
}

- (OrgJodaTimeDuration *)toStandardDuration {
  [self checkYearsAndMonthsWithNSString:@"Duration"];
  long long int millis = [self getMillis];
  millis += (((long long int) [self getSeconds]) * ((long long int) OrgJodaTimeDateTimeConstants_MILLIS_PER_SECOND));
  millis += (((long long int) [self getMinutes]) * ((long long int) OrgJodaTimeDateTimeConstants_MILLIS_PER_MINUTE));
  millis += (((long long int) [self getHours]) * ((long long int) OrgJodaTimeDateTimeConstants_MILLIS_PER_HOUR));
  millis += (((long long int) [self getDays]) * ((long long int) OrgJodaTimeDateTimeConstants_MILLIS_PER_DAY));
  millis += (((long long int) [self getWeeks]) * ((long long int) OrgJodaTimeDateTimeConstants_MILLIS_PER_WEEK));
  return [[OrgJodaTimeDuration alloc] initWithLong:millis];
}

- (void)checkYearsAndMonthsWithNSString:(NSString *)destintionType {
  if ([self getMonths] != 0) {
    @throw [[JavaLangUnsupportedOperationException alloc] initWithNSString:[NSString stringWithFormat:@"Cannot convert to %@ as this period contains months and months vary in length", destintionType]];
  }
  if ([self getYears] != 0) {
    @throw [[JavaLangUnsupportedOperationException alloc] initWithNSString:[NSString stringWithFormat:@"Cannot convert to %@ as this period contains years and years vary in length", destintionType]];
  }
}

- (OrgJodaTimePeriod *)normalizedStandard {
  return [self normalizedStandardWithOrgJodaTimePeriodType:[OrgJodaTimePeriodType standard]];
}

- (OrgJodaTimePeriod *)normalizedStandardWithOrgJodaTimePeriodType:(OrgJodaTimePeriodType *)type {
  type = [OrgJodaTimeDateTimeUtils getPeriodTypeWithOrgJodaTimePeriodType:type];
  long long int millis = [self getMillis];
  millis += (((long long int) [self getSeconds]) * ((long long int) OrgJodaTimeDateTimeConstants_MILLIS_PER_SECOND));
  millis += (((long long int) [self getMinutes]) * ((long long int) OrgJodaTimeDateTimeConstants_MILLIS_PER_MINUTE));
  millis += (((long long int) [self getHours]) * ((long long int) OrgJodaTimeDateTimeConstants_MILLIS_PER_HOUR));
  millis += (((long long int) [self getDays]) * ((long long int) OrgJodaTimeDateTimeConstants_MILLIS_PER_DAY));
  millis += (((long long int) [self getWeeks]) * ((long long int) OrgJodaTimeDateTimeConstants_MILLIS_PER_WEEK));
  OrgJodaTimePeriod *result = [[OrgJodaTimePeriod alloc] initWithLong:millis withOrgJodaTimePeriodType:type withOrgJodaTimeChronology:[OrgJodaTimeChronoISOChronology getInstanceUTC]];
  int years = [self getYears];
  int months = [self getMonths];
  if (years != 0 || months != 0) {
    long long int totalMonths = years * 12LL + months;
    if ([((OrgJodaTimePeriodType *) nil_chk(type)) isSupportedWithOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_get_YEARS_TYPE_()]) {
      int normalizedYears = [OrgJodaTimeFieldFieldUtils safeToIntWithLong:totalMonths / 12];
      result = [result withYearsWithInt:normalizedYears];
      totalMonths = totalMonths - (normalizedYears * 12);
    }
    if ([type isSupportedWithOrgJodaTimeDurationFieldType:OrgJodaTimeDurationFieldType_get_MONTHS_TYPE_()]) {
      int normalizedMonths = [OrgJodaTimeFieldFieldUtils safeToIntWithLong:totalMonths];
      result = [((OrgJodaTimePeriod *) nil_chk(result)) withMonthsWithInt:normalizedMonths];
      totalMonths = totalMonths - normalizedMonths;
    }
    if (totalMonths != 0) {
      @throw [[JavaLangUnsupportedOperationException alloc] initWithNSString:[NSString stringWithFormat:@"Unable to normalize as PeriodType is missing either years or months but period has a month/year amount: %@", [self description]]];
    }
  }
  return result;
}

+ (void)initialize {
  if (self == [OrgJodaTimePeriod class]) {
    OrgJodaTimePeriod_ZERO_ = [[OrgJodaTimePeriod alloc] init];
    OrgJodaTimePeriod_initialized = YES;
  }
}
+ (IOSObjectArray *)__annotations_parseWithNSString_ {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[OrgJodaConvertFromString alloc] init] } count:1 type:[IOSClass classWithProtocol:@protocol(JavaLangAnnotationAnnotation)]];
}


+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "parseWithNSString:", "parse", "Lorg.joda.time.Period;", 0x9, NULL },
    { "parseWithNSString:withOrgJodaTimeFormatPeriodFormatter:", "parse", "Lorg.joda.time.Period;", 0x9, NULL },
    { "yearsWithInt:", "years", "Lorg.joda.time.Period;", 0x9, NULL },
    { "monthsWithInt:", "months", "Lorg.joda.time.Period;", 0x9, NULL },
    { "weeksWithInt:", "weeks", "Lorg.joda.time.Period;", 0x9, NULL },
    { "daysWithInt:", "days", "Lorg.joda.time.Period;", 0x9, NULL },
    { "hoursWithInt:", "hours", "Lorg.joda.time.Period;", 0x9, NULL },
    { "minutesWithInt:", "minutes", "Lorg.joda.time.Period;", 0x9, NULL },
    { "secondsWithInt:", "seconds", "Lorg.joda.time.Period;", 0x9, NULL },
    { "millisWithInt:", "millis", "Lorg.joda.time.Period;", 0x9, NULL },
    { "fieldDifferenceWithOrgJodaTimeReadablePartial:withOrgJodaTimeReadablePartial:", "fieldDifference", "Lorg.joda.time.Period;", 0x9, NULL },
    { "init", "Period", NULL, 0x1, NULL },
    { "initWithInt:withInt:withInt:withInt:", "Period", NULL, 0x1, NULL },
    { "initWithInt:withInt:withInt:withInt:withInt:withInt:withInt:withInt:", "Period", NULL, 0x1, NULL },
    { "initWithInt:withInt:withInt:withInt:withInt:withInt:withInt:withInt:withOrgJodaTimePeriodType:", "Period", NULL, 0x1, NULL },
    { "initWithLong:", "Period", NULL, 0x1, NULL },
    { "initWithLong:withOrgJodaTimePeriodType:", "Period", NULL, 0x1, NULL },
    { "initWithLong:withOrgJodaTimeChronology:", "Period", NULL, 0x1, NULL },
    { "initWithLong:withOrgJodaTimePeriodType:withOrgJodaTimeChronology:", "Period", NULL, 0x1, NULL },
    { "initWithLong:withLong:", "Period", NULL, 0x1, NULL },
    { "initWithLong:withLong:withOrgJodaTimePeriodType:", "Period", NULL, 0x1, NULL },
    { "initWithLong:withLong:withOrgJodaTimeChronology:", "Period", NULL, 0x1, NULL },
    { "initWithLong:withLong:withOrgJodaTimePeriodType:withOrgJodaTimeChronology:", "Period", NULL, 0x1, NULL },
    { "initWithOrgJodaTimeReadableInstant:withOrgJodaTimeReadableInstant:", "Period", NULL, 0x1, NULL },
    { "initWithOrgJodaTimeReadableInstant:withOrgJodaTimeReadableInstant:withOrgJodaTimePeriodType:", "Period", NULL, 0x1, NULL },
    { "initWithOrgJodaTimeReadablePartial:withOrgJodaTimeReadablePartial:", "Period", NULL, 0x1, NULL },
    { "initWithOrgJodaTimeReadablePartial:withOrgJodaTimeReadablePartial:withOrgJodaTimePeriodType:", "Period", NULL, 0x1, NULL },
    { "initWithOrgJodaTimeReadableInstant:withOrgJodaTimeReadableDuration:", "Period", NULL, 0x1, NULL },
    { "initWithOrgJodaTimeReadableInstant:withOrgJodaTimeReadableDuration:withOrgJodaTimePeriodType:", "Period", NULL, 0x1, NULL },
    { "initWithOrgJodaTimeReadableDuration:withOrgJodaTimeReadableInstant:", "Period", NULL, 0x1, NULL },
    { "initWithOrgJodaTimeReadableDuration:withOrgJodaTimeReadableInstant:withOrgJodaTimePeriodType:", "Period", NULL, 0x1, NULL },
    { "initWithId:", "Period", NULL, 0x1, NULL },
    { "initWithId:withOrgJodaTimePeriodType:", "Period", NULL, 0x1, NULL },
    { "initWithId:withOrgJodaTimeChronology:", "Period", NULL, 0x1, NULL },
    { "initWithId:withOrgJodaTimePeriodType:withOrgJodaTimeChronology:", "Period", NULL, 0x1, NULL },
    { "initWithIntArray:withOrgJodaTimePeriodType:", "Period", NULL, 0x2, NULL },
    { "toPeriod", NULL, "Lorg.joda.time.Period;", 0x1, NULL },
    { "getYears", NULL, "I", 0x1, NULL },
    { "getMonths", NULL, "I", 0x1, NULL },
    { "getWeeks", NULL, "I", 0x1, NULL },
    { "getDays", NULL, "I", 0x1, NULL },
    { "getHours", NULL, "I", 0x1, NULL },
    { "getMinutes", NULL, "I", 0x1, NULL },
    { "getSeconds", NULL, "I", 0x1, NULL },
    { "getMillis", NULL, "I", 0x1, NULL },
    { "withPeriodTypeWithOrgJodaTimePeriodType:", "withPeriodType", "Lorg.joda.time.Period;", 0x1, NULL },
    { "withFieldsWithOrgJodaTimeReadablePeriod:", "withFields", "Lorg.joda.time.Period;", 0x1, NULL },
    { "withFieldWithOrgJodaTimeDurationFieldType:withInt:", "withField", "Lorg.joda.time.Period;", 0x1, NULL },
    { "withFieldAddedWithOrgJodaTimeDurationFieldType:withInt:", "withFieldAdded", "Lorg.joda.time.Period;", 0x1, NULL },
    { "withYearsWithInt:", "withYears", "Lorg.joda.time.Period;", 0x1, NULL },
    { "withMonthsWithInt:", "withMonths", "Lorg.joda.time.Period;", 0x1, NULL },
    { "withWeeksWithInt:", "withWeeks", "Lorg.joda.time.Period;", 0x1, NULL },
    { "withDaysWithInt:", "withDays", "Lorg.joda.time.Period;", 0x1, NULL },
    { "withHoursWithInt:", "withHours", "Lorg.joda.time.Period;", 0x1, NULL },
    { "withMinutesWithInt:", "withMinutes", "Lorg.joda.time.Period;", 0x1, NULL },
    { "withSecondsWithInt:", "withSeconds", "Lorg.joda.time.Period;", 0x1, NULL },
    { "withMillisWithInt:", "withMillis", "Lorg.joda.time.Period;", 0x1, NULL },
    { "plusWithOrgJodaTimeReadablePeriod:", "plus", "Lorg.joda.time.Period;", 0x1, NULL },
    { "plusYearsWithInt:", "plusYears", "Lorg.joda.time.Period;", 0x1, NULL },
    { "plusMonthsWithInt:", "plusMonths", "Lorg.joda.time.Period;", 0x1, NULL },
    { "plusWeeksWithInt:", "plusWeeks", "Lorg.joda.time.Period;", 0x1, NULL },
    { "plusDaysWithInt:", "plusDays", "Lorg.joda.time.Period;", 0x1, NULL },
    { "plusHoursWithInt:", "plusHours", "Lorg.joda.time.Period;", 0x1, NULL },
    { "plusMinutesWithInt:", "plusMinutes", "Lorg.joda.time.Period;", 0x1, NULL },
    { "plusSecondsWithInt:", "plusSeconds", "Lorg.joda.time.Period;", 0x1, NULL },
    { "plusMillisWithInt:", "plusMillis", "Lorg.joda.time.Period;", 0x1, NULL },
    { "minusWithOrgJodaTimeReadablePeriod:", "minus", "Lorg.joda.time.Period;", 0x1, NULL },
    { "minusYearsWithInt:", "minusYears", "Lorg.joda.time.Period;", 0x1, NULL },
    { "minusMonthsWithInt:", "minusMonths", "Lorg.joda.time.Period;", 0x1, NULL },
    { "minusWeeksWithInt:", "minusWeeks", "Lorg.joda.time.Period;", 0x1, NULL },
    { "minusDaysWithInt:", "minusDays", "Lorg.joda.time.Period;", 0x1, NULL },
    { "minusHoursWithInt:", "minusHours", "Lorg.joda.time.Period;", 0x1, NULL },
    { "minusMinutesWithInt:", "minusMinutes", "Lorg.joda.time.Period;", 0x1, NULL },
    { "minusSecondsWithInt:", "minusSeconds", "Lorg.joda.time.Period;", 0x1, NULL },
    { "minusMillisWithInt:", "minusMillis", "Lorg.joda.time.Period;", 0x1, NULL },
    { "multipliedByWithInt:", "multipliedBy", "Lorg.joda.time.Period;", 0x1, NULL },
    { "negated", NULL, "Lorg.joda.time.Period;", 0x1, NULL },
    { "toStandardWeeks", NULL, "Lorg.joda.time.Weeks;", 0x1, NULL },
    { "toStandardDays", NULL, "Lorg.joda.time.Days;", 0x1, NULL },
    { "toStandardHours", NULL, "Lorg.joda.time.Hours;", 0x1, NULL },
    { "toStandardMinutes", NULL, "Lorg.joda.time.Minutes;", 0x1, NULL },
    { "toStandardSeconds", NULL, "Lorg.joda.time.Seconds;", 0x1, NULL },
    { "toStandardDuration", NULL, "Lorg.joda.time.Duration;", 0x1, NULL },
    { "checkYearsAndMonthsWithNSString:", "checkYearsAndMonths", "V", 0x2, NULL },
    { "normalizedStandard", NULL, "Lorg.joda.time.Period;", 0x1, NULL },
    { "normalizedStandardWithOrgJodaTimePeriodType:", "normalizedStandard", "Lorg.joda.time.Period;", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "ZERO_", NULL, 0x19, "Lorg.joda.time.Period;", &OrgJodaTimePeriod_ZERO_,  },
    { "serialVersionUID_Period_", "serialVersionUID", 0x1a, "J", NULL, .constantValue.asLong = OrgJodaTimePeriod_serialVersionUID },
  };
  static J2ObjcClassInfo _OrgJodaTimePeriod = { "Period", "org.joda.time", NULL, 0x11, 86, methods, 2, fields, 0, NULL};
  return &_OrgJodaTimePeriod;
}

@end
